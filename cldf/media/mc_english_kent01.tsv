corpus	text	uid	gword	gloss	graid	gform	ganim	gfunc	refind	isnref
english	kent01	0001	#	#	##	##				
english	kent01	0001	yes	yes	other	other				
english	kent01	0001	well	well	other	other				
english	kent01	0001	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	bridging
english	kent01	0001	name	name	np:s	np		s		
english	kent01	0001	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0001	Alistair Crown	Alistair_Crown	pn_np:pred	pn_np		pred		
english	kent01	0002	#	#	##	##				
english	kent01	0002	I	1SG	nc	nc				
english	kent01	0002	='m	=be.PRS.1SG	nc	nc				
english	kent01	0002	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0002	was	be.PST.1SG	v:pred	v		pred		
english	kent01	0002	born	born	rv	rv				
english	kent01	0002	at	at	adp	adp				
english	kent01	0002	Selling Church	Selling_Church	pn_np:l	pn_np		l	2047	new
english	kent01	0002	in	in	adp	adp				
english	kent01	0002	eighteen eighty-seven	eighteen_eighty_seven	np:other	np		other		
english	kent01	0003	innit	TAG	other	other				
english	kent01	0004	[INT]	[INT]	[INT]	[INT]				
english	kent01	0004	#	#	#nc	#nc				
english	kent01	0004	that	DIST.SG	nc	nc				
english	kent01	0004	='s	=be.PRS.3SG	nc	nc				
english	kent01	0004	right	right	nc	nc				
english	kent01	0004	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0004	='re	=be.PRS	nc	nc				
english	kent01	0004	eighty-eight	eighty-eight	nc	nc				
english	kent01	0004	now	now	nc	nc				
english	kent01	0005	#	#	##	##				
english	kent01	0005	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0005	father	father	np.h:s	np	h	s	2003	bridging
english	kent01	0005	was	be.PST.3SG	cop	cop				
english	kent01	0005	a	a	ln_deti	ln_deti				
english	kent01	0005	shepherd	shepherd	np.h:pred	np	h	pred		
english	kent01	0005	under	under	adp	adp				
english	kent01	0005	a	a	ln_deti	ln_deti				
english	kent01	0005	Mr North	Mr_North	pn_np.h:other	pn_np	h	other	2004	new
english	kent01	0005	Sean North	Sean_North	pn_np.h:appos	pn_np	h	appos		
english	kent01	0006	#	#	##	##				
english	kent01	0006	he	3SG.M	pro.h:s	pro	h	s	2003	
english	kent01	0006	left	leave.PST	v:pred	v		pred		
english	kent01	0006	there	there	other	other				
english	kent01	0006	#	#	##	##				
english	kent01	0006	and	and	other	other				
english	kent01	0006	0	0_father	0.h:s	0	h	s	2003	
english	kent01	0006	went	go.PST	v:pred	v		pred		
english	kent01	0006	to	to	adp	adp				
english	kent01	0006	Sittingbourne	Sittingbourne	pn_np:g	pn_np		g	2005	new
english	kent01	0006	shepherd	shepherd	np.h:other	np	h	other		
english	kent01	0006	for	for	adp	adp				
english	kent01	0006	Mr Trawley	Mr_Trawley	pn_np.h:other	pn_np	h	other	2006	new
english	kent01	0006	at	at	adp	adp				
english	kent01	0006	Rodmersham	Rodmersham	pn_np:l	pn_np		l	2007	new
english	kent01	0007	[INT]	[INT]	[INT]	[INT]				
english	kent01	0007	hmm	hmm	nc	nc				
english	kent01	0008	#	#	##	##				
english	kent01	0008	#	#	#ac	#ac				
english	kent01	0008	when	when	adp	adp				
english	kent01	0008	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0008	was	be.PST.1SG	cop	cop				
english	kent01	0008	four	four	other	other				
english	kent01	0008	year-s	year-PL	other	other				
english	kent01	0008	old	old	other:pred	other		pred		
english	kent01	0008	%	%	%	%				
english	kent01	0008	the	the	ln_det	ln_det				
english	kent01	0008	only	only	ln_adj	ln_adj				
english	kent01	0008	recollection	recollection	np:s	np		s	2008	bridging
english	kent01	0008	#	#	#rc	#rc				
english	kent01	0008	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0008	got	got.PRS	v:pred	v		pred		
english	kent01	0008	0	0_recollection	rel_0:p	rel_0		p	2008	
english	kent01	0008	now	now	other	other				
english	kent01	0008	%	%	%	%				
english	kent01	0008	is	be.PRS.3SG	cop	cop				
english	kent01	0008	#	#	#cc:pred	#cc		pred		
english	kent01	0008	0	0_I	f0.1:s	f0	1	s	2000	
english	kent01	0008	riding	ride.PTCP.PRS	vother:pred	vother		pred		
english	kent01	0008	in	in	adp	adp				
english	kent01	0008	the	the	ln_det	ln_det				
english	kent01	0008	back	back	np:l	np		l	2009	new
english	kent01	0008	of	of	rn	rn				
english	kent01	0008	an	an	rn_deti	rn_deti				
english	kent01	0008	old	old	rn_adj	rn_adj				
english	kent01	0008	waggon	waggon	rn_np	rn_np			2010	bridging
english	kent01	0008	with	with	adp	adp				
english	kent01	0008	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0008	mother	mother	np.h:obl	np	h	obl	2011	bridging
english	kent01	0008	and	and	rn	rn				
english	kent01	0008	my	1SG.POSS	rn_pro.1:poss	rn_pro	1	poss	2000	
english	kent01	0008	brother	brother	rn_np.h	rn_np	h		2012	bridging
english	kent01	0008	and	and	rn	rn				
english	kent01	0008	sister	sister	rn_np.h	rn_np	h		2013	bridging
english	kent01	0008	#	#	#cc:other	#cc		other		
english	kent01	0008	0	0_we	f0.1:s	f0	1	s	2014	bridging
english	kent01	0008	coming	come.PTCP.PRS	vother:pred	vother		pred		
english	kent01	0008	#	#	#ac	#ac				
english	kent01	0008	0	0_we	f0.1:s	f0	1	s	2014	
english	kent01	0008	to	to	lv	lv				
english	kent01	0008	live	live.INF	vother:pred	vother		pred		
english	kent01	0008	at	at	adp	adp				
english	kent01	0008	the	the	ln_det	ln_det				
english	kent01	0008	house	house	np:l	np		l	2015	new
english	kent01	0008	at	at	adp	adp				
english	kent01	0008	Molash	Molash	pn_np:l	pn_np		l	2016	new
english	kent01	0009	#	#	##	##				
english	kent01	0009	and	and	other	other				
english	kent01	0009	we	1PL	pro.1:s	pro	1	s	2014	
english	kent01	0009	live-d	live-PST	v:pred	v		pred		
english	kent01	0009	in	in	adp	adp				
english	kent01	0009	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0009	house	house	np:l	np		l	2015	
english	kent01	0009	for	for	adp	adp				
english	kent01	0009	six	six	ln_num	ln_num				
english	kent01	0009	year	year	np:other	np		other		
english	kent01	0009	#	#	##	##				
english	kent01	0009	then	then	other	other				
english	kent01	0009	0	0_we	0.1:s	0	1	s	2014	
english	kent01	0009	moved	move.PST	v:pred	v		pred		
english	kent01	0009	up	up	adp	adp				
english	kent01	0009	into	into	adp	adp				
english	kent01	0009	the	the	ln_det	ln_det				
english	kent01	0009	Molash village	Molash_village	np:g	np		g	2016	
english	kent01	0009	#	#	##	##				
english	kent01	0009	and	and	other	other				
english	kent01	0009	0	0_mother	0.h:a	0	h	a	2011	
english	kent01	0009	took	take.PST	v:pred	v		pred		
english	kent01	0009	the	the	ln_det	ln_det				
english	kent01	0009	shop	shop	np:p	np		p	2017	new
english	kent01	0009	the	the	ln_det	ln_det				
english	kent01	0009	little	little	ln_adj	ln_adj				
english	kent01	0009	village shop	village_shop	np:appos	np		appos		
english	kent01	0009	Mother	Mother	pn_np.h:dt_a	pn_np	h	dt_a	2011	
english	kent01	0009	did	do.PST	other	other				
english	kent01	0009	#	#	##	##				
english	kent01	0009	and	and	other	other				
english	kent01	0009	0	0_mother	0.h:a	0	h	a	2011	
english	kent01	0009	ran	run.PST	v:pred	v		pred		
english	kent01	0009	the	the	ln_det	ln_det				
english	kent01	0009	post office	post_office	np:p	np		p	2018	new
english	kent01	0010	#	#	##	##				
english	kent01	0010	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0010	father	father	np.h:s	np	h	s	2003	
english	kent01	0010	was	be.SG.PST	cop	cop				
english	kent01	0010	a	a	ln_deti	ln_deti				
english	kent01	0010	ca--	NC	nc	nc				
english	kent01	0010	horse dealer	horse_dealer	np.h:pred	np	h	pred		
english	kent01	0010	#	#	##	##				
english	kent01	0010	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0010	start-ed	start-PST	v:pred	v		pred		
english	kent01	0010	#	#	#cc:p	#cc		p		
english	kent01	0010	0	0_father	f0.h:s	f0	h	s	2003	
english	kent01	0010	horse	horse	lv	lv				
english	kent01	0010	dealing	deal.PTCP.PRS	vother:pred	vother		pred		
english	kent01	0010	#	#	##	##				
english	kent01	0010	and	and	other	other				
english	kent01	0010	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0010	gradually	gradually	other	other				
english	kent01	0010	got	get.PST	v:pred	v		pred		
english	kent01	0010	a	a	ln_deti	ln_deti				
english	kent01	0010	good	good	ln_adj	ln_adj				
english	kent01	0010	name	name	np:p	np		p		
english	kent01	0010	for	for	adp	adp				
english	kent01	0010	genuine	genuine	ln_adj	ln_adj				
english	kent01	0010	business	business	np:obl	np		obl		
english	kent01	0011	#	#	##	##				
english	kent01	0011	and	and	other	other				
english	kent01	0011	the	the	nc	nc				
english	kent01	0011	the	the	ln_det	ln_det				
english	kent01	0011	tradespeople	tradespeople	np.h:s	np	h	s	2019	new
english	kent01	0011	came	come.PST	v:pred	v		pred		
english	kent01	0011	to	to	adp	adp				
english	kent01	0011	him	3SG.M.OBL	pro.h:g	pro	h	g	2003	
english	kent01	0011	from	from	adp	adp				
english	kent01	0011	Faversham	Faversham	pn_np.h:obl	pn_np	h	obl	2020	new
english	kent01	0011	Canterbury	Canterbury	rn_pn_np	rn_pn_np			2021	new
english	kent01	0011	and	and	rn	rn				
english	kent01	0011	all	all	rn	rn				
english	kent01	0011	round	around	rn	rn				
english	kent01	0011	for	for	adp	adp				
english	kent01	0011	him	3SG.M.OBL	pro.h:obl	pro	h	obl	2003	
english	kent01	0011	#	#	#cc:obl	#cc		obl		
english	kent01	0011	0	0_father	f0.h:a	f0	h	a	2003	
english	kent01	0011	to	to	lv	lv				
english	kent01	0011	find	find.INF	vother:pred	vother		pred		
english	kent01	0011	='em	=3PL.OBL	=pro.h:p	=pro	h	p	2019	
english	kent01	0011	a	a	ln_deti	ln_deti				
english	kent01	0011	pony	pony	np:p2	np		p2	2022	bridging
english	kent01	0011	or	or	rn	rn				
english	kent01	0011	a	a	rn_deti	rn_deti				
english	kent01	0011	horse	horse	rn_np	rn_np			2023	bridging
english	kent01	0011	#	#	#	#				
english	kent01	0011	0	0_tradespeople	f0.h:a	f0	h	a	2019	
english	kent01	0011	to	to	lv	lv				
english	kent01	0011	do	do.INF	v:pred	v		pred		
english	kent01	0011	their	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss	2019	
english	kent01	0011	business	business	np:p	np		p	2024	bridging
english	kent01	0011	with	with	adp	adp				
english	kent01	0011	their	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss	2019	
english	kent01	0011	cart	cart	np:obl	np		obl	2025	bridging
english	kent01	0011	see	see	other	other				
english	kent01	0012	#	#	##	##				
english	kent01	0012	and	and	other	other				
english	kent01	0012	eh	eh	nc	nc				
english	kent01	0012	he	3SG.M	pro.h:s	pro	h	s	2003	
english	kent01	0012	used	used	lv_aux	lv_aux				
english	kent01	0012	to	to	lv	lv				
english	kent01	0012	go	go.INF	v:pred	v		pred		
english	kent01	0012	#	#	##	##				
english	kent01	0012	and	and	other	other				
english	kent01	0012	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0012	buy	buy.INF	v:pred	v		pred		
english	kent01	0012	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0012	ponies	pony.PL	np:p	np		p	2026	bridging
english	kent01	0012	off	off	adp	adp				
english	kent01	0012	farm-s	farm-PL	np:obl	np		obl	2027	bridging
english	kent01	0012	and	and	rn	rn				
english	kent01	0012	#	#	#ac	#ac				
english	kent01	0012	wherever	wherever	other	other				
english	kent01	0012	he	3SG.M	pro.h:s	pro	h	s	2003	
english	kent01	0012	could	could	lv_aux	lv_aux				
english	kent01	0012	hear	hear.INF	v:pred	v		pred		
english	kent01	0012	about	about	adp	adp				
english	kent01	0012	one	one	num_np:obl	num_np		obl	2028	bridging
english	kent01	0013	#	#	##	##				
english	kent01	0013	and	and	other	other				
english	kent01	0013	us	1PL.OBL	ln_pro.1	ln_pro	1			
english	kent01	0013	boy-s	boy-PL	np.h:a	np	h	a	2029	bridging
english	kent01	0013	used	used	lv_aux	lv_aux				
english	kent01	0013	to	to	lv	lv				
english	kent01	0013	have	have.INF	lv_aux	lv_aux				
english	kent01	0013	to	to	lv	lv				
english	kent01	0013	ride	ride.INF	v:pred	v		pred		
english	kent01	0013	='em	=3PL.OBL	=pro:p	=pro		p	2026	
english	kent01	0013	#	#	#ac	#ac				
english	kent01	0013	0	0_we	f0.1:a	f0	1	a	2029	
english	kent01	0013	see	see.INF	vother:pred	vother		pred		
english	kent01	0013	#	#	#cc:p	#cc		p		
english	kent01	0013	if	if	other	other				
english	kent01	0013	they	3PL	pro:s	pro		s	2026	
english	kent01	0013	was	be.PST	cop	cop				
english	kent01	0013	safe	safe	other:pred	other		pred		
english	kent01	0013	#	#	#cc	#cc				
english	kent01	0013	to	to	lv	lv				
english	kent01	0013	ride	ride.INF	vother:pred	vother		pred		
english	kent01	0013	#	#	##	##				
english	kent01	0013	0	0_we	0.1:a	0	1	a	2029	
english	kent01	0013	drive	drive.INF	v:pred	v		pred		
english	kent01	0013	='em	=3PL.OBL	=pro:p	=pro		p	2026	
english	kent01	0013	#	#	#ac	#ac				
english	kent01	0013	0	0_we	f0.1:a	f0	1	a	2029	
english	kent01	0013	see	see.INF	vother:pred	vother		pred		
english	kent01	0013	#	#	#cc:p	#cc		p		
english	kent01	0013	whether	whether	other	other				
english	kent01	0013	they	3PL	pro:s	pro		s	2026	
english	kent01	0013	were	be.PST	cop	cop				
english	kent01	0013	genuine	genuine	other:pred	other		pred		
english	kent01	0013	on	on	adp	adp				
english	kent01	0013	the	the	ln_det	ln_det				
english	kent01	0013	road	road	np:l	np		l		
english	kent01	0014	#	#	##	##				
english	kent01	0014	some	some	indef_other:s	indef_other		s	2030	bridging
english	kent01	0014	of	of	rn	rn				
english	kent01	0014	='em	=3PL.OBL	=rn_pro	=rn_pro			2026	
english	kent01	0014	shied	shy.PST	v:pred	v		pred		
english	kent01	0014	#	#	#ac	#ac				
english	kent01	0014	when	when	adp	adp				
english	kent01	0014	they	3PL	pro:a	pro		a	2030	
english	kent01	0014	see	see.PRS	v:pred	v		pred		
english	kent01	0014	a	a	ln_deti	ln_deti				
english	kent01	0014	bit	bit	np:p	np		p	2031	new
english	kent01	0014	of	of	rn	rn				
english	kent01	0014	paper	paper	rn_np	rn_np				
english	kent01	0015	#	#	##neg	##neg				
english	kent01	0015	well	well	other	other				
english	kent01	0015	it	3SG.N	pro:s	pro		s		
english	kent01	0015	would-n't	would-NEG	lv_aux	lv_aux				
english	kent01	0015	do	do.INF	v:pred	v		pred		
english	kent01	0015	#	#	#	#				
english	kent01	0015	to	to	lv	lv				
english	kent01	0015	sell	sell.INF	vother:pred	vother		pred		
english	kent01	0015	a	a	ln_deti	ln_deti				
english	kent01	0015	tradesman	tradesman	np.h:p	np	h	p	2032	bridging
english	kent01	0015	a	a	ln_deti	ln_deti				
english	kent01	0015	horse	horse	np:p2	np		p2	2033	bridging
english	kent01	0015	#	#	#rc	#rc				
english	kent01	0015	that	other	other	other				
english	kent01	0015	0	0_horse	rel_f0:s	rel_f0		s	2033	
english	kent01	0015	shot	shoot.PST	v:pred	v		pred		
english	kent01	0015	one	one	ln_num	ln_num				
english	kent01	0015	side	side	np:g	np		g		
english	kent01	0015	and	and	other	other				
english	kent01	0015	would it	TAG	other	other				
english	kent01	0016	#	#	##	##				
english	kent01	0016	and	and	other	other				
english	kent01	0016	#	#	#ac	#ac				
english	kent01	0016	if	if	adp	adp				
english	kent01	0016	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0016	got	get.PST	v:pred	v		pred		
english	kent01	0016	one	one	num_np:p	num_np		p	2034	bridging
english	kent01	0016	#	#	#rc.neg	#rc.neg				
english	kent01	0016	that	that	other	other				
english	kent01	0016	0	0_horse	rel_f0.h:s	rel_f0	h	s	2034	
english	kent01	0016	was-n't	be.PST.3SG-NEG	cop	cop				
english	kent01	0016	genuine	genuine	other:pred	other		pred		
english	kent01	0016	%	%	%	%				
english	kent01	0016	%	%	%	%				
english	kent01	0016	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0016	used	used	lv_aux	lv_aux				
english	kent01	0016	to	to	lv	lv				
english	kent01	0016	send	send.INF	v:pred	v		pred		
english	kent01	0016	it	3SG.N	pro:p	pro		p	2034	
english	kent01	0016	to	to	adp	adp				
english	kent01	0016	a	a	ln_deti	ln_deti				
english	kent01	0016	man	man	np:g	np		g	2035	new
english	kent01	0016	at	at	rn_adp	rn_adp				
english	kent01	0016	Folkestone	Folkestone	rn_pn_np	rn_pn_np			2036	new
english	kent01	0016	#	#	#rc	#rc				
english	kent01	0016	0	0_Slippery_Joe	rel_0.h:p	rel_0	h	p	2035	
english	kent01	0016	we	1PL	pro.1:a	pro	1	a	2014	
english	kent01	0016	used	used	lv_aux	lv_aux				
english	kent01	0016	to	to	lv	lv				
english	kent01	0016	call	call.INF	v:pred	v		pred		
english	kent01	0016	Slippery Joe	Slippery_Joe	pn_np:other	pn_np		other		
english	kent01	0017	#	#	##	##				
english	kent01	0017	and	and	other	other				
english	kent01	0017	he	3SG.M	pro.h:a	pro	h	a	2035	
english	kent01	0017	used	used	lv_aux	lv_aux				
english	kent01	0017	to	to	lv	lv				
english	kent01	0017	generally	generally	other	other				
english	kent01	0017	give	give.INF	v:pred	v		pred		
english	kent01	0017	him	3SG.M.OBL	pro.h:p	pro	h	p	2003	
english	kent01	0017	#	#	#rc:p2	#rc		p2		
english	kent01	0017	what	what	intrg_other:obl	intrg_other		obl		
english	kent01	0017	it	3SG.N	pro:s	pro		s	2034	
english	kent01	0017	cost	cost.PST	v:pred	v		pred		
english	kent01	0017	#	#	#ac.neg	#ac.neg				
english	kent01	0017	so	so	adp	adp				
english	kent01	0017	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0017	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0017	lose	lose.INF	v:pred	v		pred		
english	kent01	0017	too	too	ln	ln				
english	kent01	0017	much	much	ln_detq	ln_detq				
english	kent01	0017	money	money	np:p	np		p		
english	kent01	0018	#	#	##	##				
english	kent01	0018	that	DIST.SG	dem_pro:s	dem_pro		s	2037	bridging
english	kent01	0018	was	be.PST.3SG	cop	cop				
english	kent01	0018	agree-d	agree-PTCP.PST	other:pred	other		pred		
english	kent01	0018	between	between	adp	adp				
english	kent01	0018	them	3PL.OBL	pro.h:obl	pro	h	obl		
english	kent01	0019	#	#	##	##				
english	kent01	0019	and	and	other	other				
english	kent01	0019	#	#	#rc:s	#rc		s		
english	kent01	0019	what	what	intrg_other:p	intrg_other		p		
english	kent01	0019	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0019	done	do.PTCP.PST	v:pred	v		pred		
english	kent01	0019	with	with	adp	adp				
english	kent01	0019	them	3PL.OBL	pro:obl	pro		obl	2038	bridging
english	kent01	0019	%	%	%	%				
english	kent01	0019	I	1SG	other	other			2000	
english	kent01	0019	think	think.PRS	other	other				
english	kent01	0019	#	#	#cc:pred	#cc		pred		
english	kent01	0019	they	3PL	pro:s	pro		s	2038	
english	kent01	0019	went	go.PST	v:pred	v		pred		
english	kent01	0019	to	to	adp	adp				
english	kent01	0019	France	France	pn_np:g	pn_np		g	2039	new
english	kent01	0019	for	for	adp	adp				
english	kent01	0019	meat	meat	np:obl	np		obl		
english	kent01	0020	#	#	##	##				
english	kent01	0020	they	3PL	pro.h:a	pro	h	a	2040	bridging
english	kent01	0020	eat	eat.PRS	v:pred	v		pred		
english	kent01	0020	a	a	ln	ln				
english	kent01	0020	lot	lot	ln_detq	ln_detq				
english	kent01	0020	of	of	ln	ln				
english	kent01	0020	horse meat	horse_meat	np:p	np		p	2041	bridging
english	kent01	0020	in	in	adp	adp				
english	kent01	0020	France	France	pn_np:l	pn_np		l	2039	
english	kent01	0020	see	see.PRS	other	other				
english	kent01	0020	#	#	##	##				
english	kent01	0020	and	and	other	other				
english	kent01	0020	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0020	think	think.PRS	v:pred	v		pred		
english	kent01	0020	#	#	#cc:p	#cc		p		
english	kent01	0020	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0020	horse-s	horse-PL	np:dt_s	np		dt_s	2038	
english	kent01	0020	#	#	#rc.neg	#rc.neg				
english	kent01	0020	that	that	other	other				
english	kent01	0020	0	0_horses	rel_f0:s	rel_f0		s	2038	
english	kent01	0020	was-n't	be.PST.3SG-NEG	cop	cop				
english	kent01	0020	genuine	genuine	other:pred	other		pred		
english	kent01	0020	#	#	#rc.neg	#rc.neg				
english	kent01	0020	what	what	rel_pro:p	rel_pro		p		
english	kent01	0020	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0020	could-n't	could-NEG	lv_aux	lv_aux				
english	kent01	0020	recommend	recommend.INF	v:pred	v		pred		
english	kent01	0020	%	%	%	%				
english	kent01	0020	they	3PL	pro:s	pro		s	2038	
english	kent01	0020	was	be.PST	lv_aux	lv_aux				
english	kent01	0020	shipped	ship.PTCP.PST	v:pred	v		pred		
english	kent01	0020	over	over	adp	adp				
english	kent01	0020	to	to	adp	adp				
english	kent01	0020	France	France	pn_np:g	pn_np		g	2039	
english	kent01	0021	#	#	#ac	#ac				
english	kent01	0021	'cause	because	adp	adp				
english	kent01	0021	he	3SG.M	pro.h:s	pro	h	s	2035	
english	kent01	0021	live-d	live-PST	v:pred	v		pred		
english	kent01	0021	at	at	adp	adp				
english	kent01	0021	Folkestone	Folkestone	pn_np:l	pn_np		l	2036	
english	kent01	0021	#	#	##	##				
english	kent01	0021	and	and	other	other				
english	kent01	0021	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0021	know	know.PRS	v:pred	v		pred		
english	kent01	0021	#	#	#cc:p	#cc		p		
english	kent01	0021	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0021	father	father	np.h:dt_a	np	h	dt_a	2003	
english	kent01	0021	then	then	other	other				
english	kent01	0021	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0021	used	used	lv_aux	lv_aux				
english	kent01	0021	to	to	lv	lv				
english	kent01	0021	buy	buy.INF	v:pred	v		pred		
english	kent01	0021	a	a	ln	ln				
english	kent01	0021	lot	lot	ln_detq	ln_detq				
english	kent01	0021	of	of	ln	ln				
english	kent01	0021	ferret	ferret	np:p	np		p	2042	new
english	kent01	0022	#	#	#nc	#nc				
english	kent01	0022	you	2SG	nc_pro.2	nc_pro	2		2001	bridging
english	kent01	0022	know	know.INF	nc	nc				
english	kent01	0022	#	#	#nc	#nc				
english	kent01	0022	what	what	nc	nc				
english	kent01	0022	a	a	nc	nc				
english	kent01	0022	ferret	ferret	nc	nc				
english	kent01	0022	is	be.PRS.3SG	nc	nc				
english	kent01	0023	#	#	##	##				
english	kent01	0023	and	and	other	other				
english	kent01	0023	they	3PL	pro:s	pro		s	2042	
english	kent01	0023	all	all	rn	rn				
english	kent01	0023	used	used	lv_aux	lv_aux				
english	kent01	0023	to	to	lv	lv				
english	kent01	0023	be	be.INF	lv_aux	lv_aux				
english	kent01	0023	shipped	ship.PTCP.PST	v:pred	v		pred		
english	kent01	0023	France	France	pn_np:g	pn_np		g	2039	
english	kent01	0024	#	#	##	##				
english	kent01	0024	he	3SG	pro.h:a	pro	h	a	2003	
english	kent01	0024	used	used	lv_aux	lv_aux				
english	kent01	0024	to	to	lv	lv				
english	kent01	0024	get	get.INF	v:pred	v		pred		
english	kent01	0024	a	a	nc	nc				
english	kent01	0024	oh	oh	other	other				
english	kent01	0024	perhaps	perhaps	other	other				
english	kent01	0024	twenty	twenty	np:p	np		p	2043	bridging
english	kent01	0024	on	on	adp	adp				
english	kent01	0024	the	the	ln_det	ln_det				
english	kent01	0024	farm	farm	np:l	np		l	2044	bridging
english	kent01	0024	#	#	##	##				
english	kent01	0024	and	and	other	other				
english	kent01	0024	us	1PL.OBL	pro.1:a	pro	1	a	2029	
english	kent01	0024	boy-s	boy-PL	np.h:appos	np	h	appos		
english	kent01	0024	had	have.PST	lv_aux	lv_aux				
english	kent01	0024	to	to	lv	lv				
english	kent01	0024	feed	feed.INF	v:pred	v		pred		
english	kent01	0024	='em	=3PL.OBL	=pro:p	=pro		p	2042	
english	kent01	0025	#	#	##	##				
english	kent01	0025	and	and	other	other				
english	kent01	0025	the	the	ln_det	ln_det				
english	kent01	0025	devil-s	devil-PL	np:a	np		a	2042	
english	kent01	0025	used	used	lv_aux	lv_aux				
english	kent01	0025	to	to	lv	lv				
english	kent01	0025	bite	bite.INF	v:pred	v		pred		
english	kent01	0025	us	1PL.OBL	pro.1:p	pro	1	p	2029	
english	kent01	0025	#	#	##	##				
english	kent01	0025	you	2SG	other	other				
english	kent01	0025	know	know.PRS	other	other				
english	kent01	0025	#	#	#ac	#ac				
english	kent01	0025	when	when	adp	adp				
english	kent01	0025	we	1PL	pro.1:a	pro	1	a	2029	
english	kent01	0025	put	put.PST	v:pred	v		pred		
english	kent01	0025	the	the	ln_det	ln_det				
english	kent01	0025	grub	grub	np:p	np		p	2045	new
english	kent01	0025	into	into	adp	adp				
english	kent01	0025	='em	=3PL.OBL	=pro:g	=pro		g	2042	
english	kent01	0025	%	%	%	%				
english	kent01	0025	they	3PL	pro:s	pro		s	2042	
english	kent01	0025	='d	=would	=lv_aux	=lv_aux				
english	kent01	0025	grab	grab.INF	v:pred	v		pred		
english	kent01	0025	for	for	adp	adp				
english	kent01	0025	their	3PL.POSS	ln_pro:poss	ln_pro		poss		
english	kent01	0025	food	food	np:obl	np		obl	2045	
english	kent01	0025	#	#	##	##				
english	kent01	0025	bread	bread	np:p	np		p	2046	bridging
english	kent01	0025	and	and	rn	rn				
english	kent01	0025	milk	milk	rn_np	rn_np				
english	kent01	0025	they	3PL	pro:a	pro		a	2042	
english	kent01	0025	used	used	lv_aux	lv_aux				
english	kent01	0025	to	to	lv	lv				
english	kent01	0025	have	have.INF	v:pred	v		pred		
english	kent01	0025	#	#	##	##				
english	kent01	0025	and	and	other	other				
english	kent01	0025	they	3PL	pro:a	pro		a	2042	
english	kent01	0025	used	used	lv_aux	lv_aux				
english	kent01	0025	to	to	lv	lv				
english	kent01	0025	grab	grab.INF	v:pred	v		pred		
english	kent01	0025	your	2SG.POSS	ln_gen_pro.2:poss	ln_gen_pro	2	poss		
english	kent01	0025	hand	hand	np:p	np		p	2048	bridging
english	kent01	0025	#	#	#ac.neg	#ac.neg				
english	kent01	0025	if	if	adp	adp				
english	kent01	0025	you	2SG	gen_pro.2:s	gen_pro	2	s		
english	kent01	0025	wadn't	be.PST.NEG	cop	cop				
english	kent01	0025	careful	careful	other:pred	other		pred		
english	kent01	0026	#	#	##	##				
english	kent01	0026	so	so	other	other				
english	kent01	0026	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0026	brother	brother	np.h:a	np	h	a	2012	
english	kent01	0026	used	used	lv_aux	lv_aux				
english	kent01	0026	to	to	lv	lv				
english	kent01	0026	take	take.INF	v:pred	v		pred		
english	kent01	0026	an	an	ln_deti	ln_deti				
english	kent01	0026	old	old	ln_adj	ln_adj				
english	kent01	0026	rope	rope	np:p	np		p	2049	new
english	kent01	0026	up	up	adp	adp				
english	kent01	0026	the	the	ln_det	ln_det				
english	kent01	0026	other	other	ln_adj	ln_adj				
english	kent01	0026	side	side	np:g	np		g	2050	bridging
english	kent01	0026	of	of	rn	rn				
english	kent01	0026	the	the	rn_det	rn_det				
english	kent01	0026	hutch	hutch	rn_np	rn_np			2051	bridging
english	kent01	0026	#	#	##	##				
english	kent01	0026	and	and	other	other				
english	kent01	0026	0	0_brother	0.h:a	0	h	a	2012	
english	kent01	0026	shake	shake.INF	v:pred	v		pred		
english	kent01	0026	it	3SG.N	pro:p	pro		p	2049	
english	kent01	0026	like	like	adp	adp				
english	kent01	0026	that	DIST.SG	dem_pro:other	dem_pro		other		
english	kent01	0026	#	#	##	##				
english	kent01	0026	and	and	other	other				
english	kent01	0026	they	3PL	pro:a	pro		a	2042	
english	kent01	0026	used	used	lv_aux	lv_aux				
english	kent01	0026	to	to	lv	lv				
english	kent01	0026	run	run.INF	v:pred	v		pred		
english	kent01	0026	over	over	adp	adp				
english	kent01	0026	there	there	other:g	other		g	2050	
english	kent01	0026	#	#	#ac	#ac				
english	kent01	0026	while	while	adp	adp				
english	kent01	0026	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0026	put	put.PST	v:pred	v		pred		
english	kent01	0026	the	the	ln_det	ln_det				
english	kent01	0026	food	food	np:p	np		p	2045	
english	kent01	0026	in	in	rv	rv				
english	kent01	0027	#	#	##	##				
english	kent01	0027	and	and	other	other				
english	kent01	0027	eh	eh	nc	nc				
english	kent01	0027	that	DIST.SG	dem_pro:s	dem_pro		s	2052	bridging
english	kent01	0027	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0027	the	the	ln_det	ln_det				
english	kent01	0027	way	way	np:pred	np		pred		
english	kent01	0027	#	#	#rc	#rc				
english	kent01	0027	we	1PL	pro.1:a	pro	1	a	2029	
english	kent01	0027	used	used	lv_aux	lv_aux				
english	kent01	0027	to	to	lv	lv				
english	kent01	0027	do	do.INF	v:pred	v		pred		
english	kent01	0027	it	3SG.N	pro:p	pro		p	2053	bridging
english	kent01	0027	#	#	#nc	#nc				
english	kent01	0027	and	and	nc	nc				
english	kent01	0027	then	then	nc	nc				
english	kent01	0027	#	#	#ac	#ac				
english	kent01	0027	when	when	adp	adp				
english	kent01	0027	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0027	got	get.PST	v:pred	v		pred		
english	kent01	0027	about	about	ln	ln				
english	kent01	0027	twenty	twenty	np:p	np		p	2054	bridging
english	kent01	0027	%	%	%	%				
english	kent01	0027	they	3PL	nc	nc				
english	kent01	0027	used	used	nc	nc				
english	kent01	0027	to	to	nc	nc				
english	kent01	0027	this	PROX.SG	nc	nc				
english	kent01	0027	chap	chap	nc_np.h	nc_np	h		2055	new
english	kent01	0027	he	3SG.M	nc	nc			2055	
english	kent01	0027	used	used	nc	nc				
english	kent01	0027	#	#	##	##				
english	kent01	0027	well	well	other	other				
english	kent01	0027	he	3SG.M	pro.h:s	pro	h	s	2055	
english	kent01	0027	live-d	live-PST	v:pred	v		pred		
english	kent01	0027	at	at	adp	adp				
english	kent01	0027	West Well	West_Well	pn_np:l	pn_np		l	2056	new
english	kent01	0027	Wheel	Wheel	rn_pn_np	rn_pn_np			2057	new
english	kent01	0027	West Well	West_Well	other	other				
english	kent01	0027	The Wheel	The_Wheel	other	other				
english	kent01	0027	at	at	adp	adp				
english	kent01	0027	West Well	West_Well	pn_np:l	pn_np		l		
english	kent01	0027	the	the	ln_det	ln_det				
english	kent01	0027	pub	pub	np:appos	np		appos		
english	kent01	0028	#	#	#nc	#nc				
english	kent01	0028	you	2SG	nc_pro.2	nc_pro	2		2001	
english	kent01	0028	know	know.PRS	nc	nc				
english	kent01	0028	it	3SG.N	nc_pro	nc_pro			2057	
english	kent01	0029	#	#	##	##				
english	kent01	0029	and	and	other	other				
english	kent01	0029	he	3SG.M	pro.h:a	pro	h	a	2055	
english	kent01	0029	used	used	lv_aux	lv_aux				
english	kent01	0029	to	to	lv	lv				
english	kent01	0029	take	take.INF	v:pred	v		pred		
english	kent01	0029	='em	=3PL.OBL	=pro:p	=pro		p	2054	
english	kent01	0029	to	to	adp	adp				
english	kent01	0029	France	France	pn_np:g	pn_np		g	2039	
english	kent01	0030	#	#	##	##				
english	kent01	0030	and	and	other	other				
english	kent01	0030	they	3PL	pro.h:a	pro	h	a	2058	bridging
english	kent01	0030	used	used	lv_aux	lv_aux				
english	kent01	0030	to	to	lv	lv				
english	kent01	0030	turn	turn.INF	v:pred	v		pred		
english	kent01	0030	='em	=3PL.OBL	=pro:p	=pro		p	2054	
english	kent01	0030	down	down	rv	rv				
english	kent01	0030	wild	wild	other	other				
english	kent01	0030	out	out	adp	adp				
english	kent01	0030	there	there	other:l	other		l	2039	
english	kent01	0030	#	#	#ac	#ac				
english	kent01	0030	for	for	adp	adp				
english	kent01	0030	0	0_ferrets	f0:a	f0		a	2054	
english	kent01	0030	to	to	lv	lv				
english	kent01	0030	destroy	destroy.INF	vother:pred	vother		pred		
english	kent01	0030	the	the	ln_det	ln_det				
english	kent01	0030	vermin	vermin	np:p	np		p	2059	new
english	kent01	0030	in	in	adp	adp				
english	kent01	0030	the	the	ln_det	ln_det				
english	kent01	0030	forests	forest-PL	np:l	np		l	2060	bridging
english	kent01	0031	[INT]	[INT]	[INT]	[INT]				
english	kent01	0031	hmm	hmm	nc	nc				
english	kent01	0032	#	#	##	##				
english	kent01	0032	and	and	other	other				
english	kent01	0032	Father	Father	pn_np.h:a	pn_np	h	a	2003	
english	kent01	0032	had	have.PST	v:pred	v		pred		
english	kent01	0032	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0032	job	job	np:p	np		p	2061	bridging
english	kent01	0032	#	#	##	##				
english	kent01	0032	and	and	other	other				
english	kent01	0032	then	then	other	other				
english	kent01	0032	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0032	took	take.PST	v:pred	v		pred		
english	kent01	0032	a	a	ln_deti	ln_deti				
english	kent01	0032	contract	contract	np:p	np		p	2062	new
english	kent01	0032	with	with	adp	adp				
english	kent01	0032	G. Webb and Company	G_Webb_and_Company	pn_np.h:obl	pn_np	h	obl	2063	new
english	kent01	0032	poulterer-s	poulterer-PL	np.h:appos	np	h	appos		
english	kent01	0032	at	at	rn_adp	rn_adp				
english	kent01	0032	Canterbury	Canterbury	rn_pn_np	rn_pn_np			2021	
english	kent01	0032	#	#	#	#				
english	kent01	0032	0	0_father	f0.h:a	f0	h	a	2003	
english	kent01	0032	to	to	lv	lv				
english	kent01	0032	supply	supply.INF	vother:pred	vother		pred		
english	kent01	0032	='em	=3PL.OBL	=pro.h:p	=pro	h	p	2063	
english	kent01	0032	with	with	adp	adp				
english	kent01	0032	so	so	ln	ln				
english	kent01	0032	many	many	ln_detq	ln_detq				
english	kent01	0032	head	head	ln_detq	ln_detq			2064	bridging
english	kent01	0032	of	of	ln	ln				
english	kent01	0032	poultry	poultry	np:obl	np		obl		
english	kent01	0032	a	a	adp	adp				
english	kent01	0032	week	week	np:other	np		other		
english	kent01	0033	#	#	##	##				
english	kent01	0033	and	and	other	other				
english	kent01	0033	us	1SG.OBL	pro.1:s	pro	1	s		
english	kent01	0033	boy-s	boy-PL	np.h:appos	np	h	appos	2029	
english	kent01	0033	used	used	lv_aux	lv_aux				
english	kent01	0033	to	to	lv	lv				
english	kent01	0033	go	go.INF	v:pred	v		pred		
english	kent01	0033	round	around	adp	adp				
english	kent01	0033	the	the	ln_det	ln_det				
english	kent01	0033	farm-s	farm-PL	np:other	np		other	2065	bridging
english	kent01	0033	#	#	##	##				
english	kent01	0033	and	and	other	other			2003	
english	kent01	0033	he	3SG.M	pro.h:a	pro	h	a		
english	kent01	0033	used	used	lv_aux	lv_aux				
english	kent01	0033	to	to	lv	lv				
english	kent01	0033	give	give.INF	v:pred	v		pred		
english	kent01	0033	us	1SG.OBL	pro.1:p	pro	1	p	2029	
english	kent01	0033	sovereign-s	sovereign-PL	np:p2	np		p2	2066	new
english	kent01	0033	#	#	##	##				
english	kent01	0033	and	and	other	other				
english	kent01	0033	always	always	other	other				
english	kent01	0033	golden	golden	ln_adj	ln_adj				
english	kent01	0033	sovereign-s	sovereign-PL	np:pred	np		pred		
english	kent01	0033	it	3SG.N	pro:s	pro		s	2066	
english	kent01	0033	was	be.PST.3SG	cop	cop				
english	kent01	0033	and	and	rn	rn				
english	kent01	0033	sh--	NC	nc	nc				
english	kent01	0033	silver	silver	rn_np	rn_np				
english	kent01	0033	#	#	##	##				
english	kent01	0033	and	and	other	other				
english	kent01	0033	0	0_we	0.1:s	0	1	s	2029	
english	kent01	0033	go	go.INF	v:pred	v		pred		
english	kent01	0033	round	around	rv	rv				
english	kent01	0033	#	#	##	##				
english	kent01	0033	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0033	used	used	lv_aux	lv_aux				
english	kent01	0033	tell	tell.INF	v:pred	v		pred		
english	kent01	0033	us	1SG.OBL	pro.1:p	pro	1	p	2029	
english	kent01	0033	#	#	#rc:p2	#rc		p2	2067	bridging
english	kent01	0033	what	what	intrg_other:p	intrg_other		p		
english	kent01	0033	0	0_we	f0.1:a	f0	1	a	2029	
english	kent01	0033	to	to	lv	lv				
english	kent01	0033	give	give.INF	vother:pred	vother		pred		
english	kent01	0033	for	for	adp	adp				
english	kent01	0033	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0033	chicken	chicken.PL	np:obl	np		obl	2068	bridging
english	kent01	0033	and	and	rn	rn				
english	kent01	0033	old	old	rn_adj	rn_adj				
english	kent01	0033	hen-s	hen-PL	rn_np	rn_np			2069	bridging
english	kent01	0034	#	#	##	##				
english	kent01	0034	the	the	ln_det	ln_det				
english	kent01	0034	old	old	ln_adj	ln_adj				
english	kent01	0034	hen-s	hen-PL	np:p	np		p	2069	
english	kent01	0034	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0034	used	used	lv_aux	lv_aux				
english	kent01	0034	to	to	lv	lv				
english	kent01	0034	send	send.INF	v:pred	v		pred		
english	kent01	0034	to	to	adp	adp				
english	kent01	0034	London	London	pn_np:g	pn_np		g	2070	new
english	kent01	0034	#	#	##	##				
english	kent01	0034	we	1PL	pro.1:a	pro	1	a	2071	bridging
english	kent01	0034	used	used	lv_aux	lv_aux				
english	kent01	0034	to	to	lv	lv				
english	kent01	0034	put	put.INF	v:pred	v		pred		
english	kent01	0034	='em	=3PL.OBL	=pro:p	=pro		p	2069	
english	kent01	0034	on	on	adp	adp				
english	kent01	0034	rail	rail	np:g	np		g		
english	kent01	0034	#	#	##	##				
english	kent01	0034	and	and	other	other				
english	kent01	0034	the	the	ln_det	ln_det				
english	kent01	0034	chicken	chicken.PL	np:p	np		p	2068	
english	kent01	0034	we	1PL	pro.1:a	pro	1	a	2071	
english	kent01	0034	used	used	lv_aux	lv_aux				
english	kent01	0034	to	to	lv	lv				
english	kent01	0034	take	take.INF	v:pred	v		pred		
english	kent01	0034	to	to	adp	adp				
english	kent01	0034	Webb's	Webb's	pn_np:g	pn_np		g	2063	
english	kent01	0034	at	at	adp	adp				
english	kent01	0034	Canterbury	Canterbury	pn_np:l	pn_np		l	2021	
english	kent01	0034	poultry shop	poultry_shop	np:appos	np		appos		
english	kent01	0035	#	#	##	##				
english	kent01	0035	he	3SG.M	pro.h:a	pro	h	a	2063	
english	kent01	0035	='d	=would	=lv_aux	=lv_aux				
english	kent01	0035	take	take.INF	v:pred	v		pred		
english	kent01	0035	anything	anything	indef_other:p	indef_other		p		
english	kent01	0035	up	up	rn	rn				
english	kent01	0035	to	to	rn	rn				
english	kent01	0035	two hundred	two-hundred	rn_num	rn_num				
english	kent01	0035	a	a	adp	adp				
english	kent01	0035	week	week	np:other	np		other		
english	kent01	0036	[INT]	[INT]	[INT]	[INT]				
english	kent01	0036	#	#	#nc	#nc				
english	kent01	0036	how	how	nc	nc				
english	kent01	0036	did	do.PST	nc	nc				
english	kent01	0036	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0036	used	used	nc	nc				
english	kent01	0036	to	to	nc	nc				
english	kent01	0036	get	get.INF	nc	nc				
english	kent01	0036	about	about	nc	nc				
english	kent01	0036	the	the	nc	nc				
english	kent01	0036	countryside	countryside	nc	nc				
english	kent01	0037	#	#	#nc	#nc				
english	kent01	0037	well	well	other	other				
english	kent01	0037	you	2SG	nc_gen_pro.2	nc_gen_pro	2			
english	kent01	0037	='d	=would	nc	nc				
english	kent01	0037	ride	ride.INF	nc	nc				
english	kent01	0037	the	the	nc	nc				
english	kent01	0037	pony	pony	nc	nc			2072	new
english	kent01	0037	and	and	nc	nc				
english	kent01	0037	cart	cart	nc	nc				
english	kent01	0038	[INT]	[INT]	[INT]	[INT]				
english	kent01	0038	#	#	#nc	#nc				
english	kent01	0038	even	even	nc	nc				
english	kent01	0038	as	as	nc	nc				
english	kent01	0038	a	a	nc	nc				
english	kent01	0038	kid	kid	nc	nc				
english	kent01	0039	#	#	##	##				
english	kent01	0039	we	1PL	pro.1:a	pro	1	a	2014	
english	kent01	0039	used	used	lv_aux	lv_aux				
english	kent01	0039	to	to	lv	lv				
english	kent01	0039	keep	keep.INF	v:pred	v		pred		
english	kent01	0039	two	two	ln_num	ln_num				
english	kent01	0039	ponies	pony.PL	np:p	np		p	2073	bridging
english	kent01	0039	Father	Father	pn_np.h:dt_a	pn_np	h	dt_a	2003	
english	kent01	0039	did	do.PST	other	other				
english	kent01	0039	#	#	##	##				
english	kent01	0039	and	and	other	other				
english	kent01	0039	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0039	got	get.PST	v:pred	v		pred		
english	kent01	0039	a	a	ln_deti	ln_deti				
english	kent01	0039	four-wheel	four_wheel	ln_adj	ln_adj				
english	kent01	0039	van	van	np:p	np		p	2074	new
english	kent01	0039	and	and	rn	rn				
english	kent01	0039	a	a	rn_deti	rn_deti				
english	kent01	0039	two-wheel	two_wheel	rn_adj	rn_adj				
english	kent01	0039	cart	cart	rn_np	rn_np			2075	new
english	kent01	0040	#	#	##	##				
english	kent01	0040	and	and	other	other				
english	kent01	0040	we	1PL	pro.1:a	pro	1	a	2014	
english	kent01	0040	got	get.PST	v:pred	v		pred		
english	kent01	0040	a	a	ln_deti	ln_deti				
english	kent01	0040	pig cart	pig_cart	np:p	np		p	2076	new
english	kent01	0040	with	with	rn_adp	rn_adp				
english	kent01	0040	a	a	rn_deti	rn_deti				
english	kent01	0040	little	little	rn_adj	rn_adj				
english	kent01	0040	tiny	tiny	rn_adj	rn_adj				
english	kent01	0040	hole	hole	rn_np	rn_np			2077	bridging
english	kent01	0040	in	in	rn_adp	rn_adp				
english	kent01	0040	the	the	rn_det	rn_det				
english	kent01	0040	back	back	rn_np	rn_np				
english	kent01	0040	#	#	#ac	#ac				
english	kent01	0040	so	so	other	other				
english	kent01	0040	as	as	adp	adp				
english	kent01	0040	#	#	#ac	#ac				
english	kent01	0040	when	when	adp	adp				
english	kent01	0040	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0040	bought	buy.PST	v:pred	v		pred		
english	kent01	0040	small	small	ln_adj	ln_adj				
english	kent01	0040	pig-s	pig-PL	np:p	np		p	2078	bridging
english	kent01	0040	%	%	%	%				
english	kent01	0040	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0040	whip	whip.INF	v:pred	v		pred		
english	kent01	0040	='em	=3PL.OBL	=pro:p	=pro		p	2078	
english	kent01	0040	through	through	adp	adp				
english	kent01	0040	the	the	ln_det	ln_det				
english	kent01	0040	hole	hole	np:g	np		g	2077	
english	kent01	0040	see	see.PRS	other	other				
english	kent01	0040	#	#	##	##				
english	kent01	0040	#	#	#ac	#ac				
english	kent01	0040	if	if	adp	adp				
english	kent01	0040	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0040	put	put.PST	v:pred	v		pred		
english	kent01	0040	your	2SG.POSS	ln_gen_pro.2:poss	ln_gen_pro	2	poss		
english	kent01	0040	tailboard	tailboard	np:p	np		p	2079	bridging
english	kent01	0040	down	down	rv	rv				
english	kent01	0040	#	#	#ac	#ac				
english	kent01	0040	while	while	adp	adp				
english	kent01	0040	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0040	put	put.PST	v:pred	v		pred		
english	kent01	0040	one	one	num_np:p	num_np		p	2080	bridging
english	kent01	0040	in	in	rv	rv				
english	kent01	0040	%	%	%	%				
english	kent01	0040	one	one	num_np:s	num_np		s	2081	bridging
english	kent01	0040	would	would	lv_aux	lv_aux				
english	kent01	0040	jump	jump.INF	v:pred	v		pred		
english	kent01	0040	out	out	rv	rv				
english	kent01	0040	wouldn't it	TAG	other	other				
english	kent01	0041	#	#	##	##				
english	kent01	0041	so	so	other	other				
english	kent01	0041	these	PROX.PL	dem_pro:dt_s	dem_pro		dt_s	2082	bridging
english	kent01	0041	it	3SG.N	pro:s	pro		s	2082	
english	kent01	0041	was	be.PST.3SG	lv_aux	lv_aux				
english	kent01	0041	made	make.PTCP.PST	v:pred	v		pred		
english	kent01	0041	like	like	adp	adp				
english	kent01	0041	that	DIST.SG	dem_pro:other	dem_pro		other		
english	kent01	0042	#	#	#	#				
english	kent01	0042	that	that	other	other				
english	kent01	0042	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0042	='d	=would	=lv_aux	=lv_aux				
english	kent01	0042	just	just	other	other				
english	kent01	0042	open	open.INF	v:pred	v		pred		
english	kent01	0042	it	3SG.N	pro:p	pro		p	2077	
english	kent01	0042	#	#	#cc	#cc				
english	kent01	0042	and	and	other	other				
english	kent01	0042	0	0_you	gen_0.2:a	gen_0	2	a		
english	kent01	0042	put	put.INF	v:pred	v		pred		
english	kent01	0042	your	2SG.POSS	ln_gen_pro.2:poss	ln_gen_pro	2	poss		
english	kent01	0042	pig	pig	np:p	np		p	2083	bridging
english	kent01	0042	in	in	rv	rv				
english	kent01	0042	see	see.PRS	other	other				
english	kent01	0042	#	#	##	##				
english	kent01	0042	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0042	had	have.PST	v:pred	v		pred		
english	kent01	0042	net	net	np:p	np		p	2084	bridging
english	kent01	0042	over	over	adp	adp				
english	kent01	0042	the	the	ln_det	ln_det				
english	kent01	0042	top	top	np:l	np		l	2085	bridging
english	kent01	0042	#	#	#ac.neg	#ac.neg				
english	kent01	0042	so	so	adp	adp				
english	kent01	0042	he	3SG.M	pro:s	pro		s	2083	
english	kent01	0042	could-n't	could-NEG	lv_aux	lv_aux				
english	kent01	0042	get	get.INF	v:pred	v		pred		
english	kent01	0042	out	out	rv	rv				
english	kent01	0043	#	#	##	##				
english	kent01	0043	and	and	other	other				
english	kent01	0043	eh	eh	other	other				
english	kent01	0043	I	1SG	nc	nc				
english	kent01	0043	well	well	other	other				
english	kent01	0043	#	#	#ac	#ac				
english	kent01	0043	as	as	adp	adp				
english	kent01	0043	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0043	was	be.PST.1SG	lv_aux	lv_aux				
english	kent01	0043	say-ing	say-PTCP.PRS	v:pred	v		pred		
english	kent01	0043	%	%	%	%				
english	kent01	0043	at	at	adp	adp				
english	kent01	0043	twelve	twelve	other	other				
english	kent01	0043	year-s	year-PL	other	other				
english	kent01	0043	old	old	other	other				
english	kent01	0043	the	the	ln_det	ln_det				
english	kent01	0043	first	first	ln_adj	ln_adj				
english	kent01	0043	job	job	np:s	np		s	2086	new
english	kent01	0043	#	#	#rc	#rc				
english	kent01	0043	0	0_job	rel_0:p2	rel_0		p2	2086	
english	kent01	0043	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0043	gave	give.PST	v:pred	v		pred		
english	kent01	0043	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0043	%	%	%	%				
english	kent01	0043	was	be.PST.1SG	cop	cop				
english	kent01	0043	#	#	##ds	##ds				
english	kent01	0043	0	0_I	imp_0.1:s	imp_0	1	s	2000	
english	kent01	0043	go	go.IMP	v:pred	v		pred		
english	kent01	0043	down	down	adp	adp				
english	kent01	0043	to	to	adp	adp				
english	kent01	0043	Court's	Court's	pn_np:g	pn_np		g	2087	new
english	kent01	0043	at	at	rn_adp	rn_adp				
english	kent01	0043	Fisher Street	Fisher_Street	rn_pn_np	rn_pn_np			2088	new
english	kent01	0043	#	#	#nc	#nc				
english	kent01	0043	you	2SG	nc_pro.2	nc_pro	2		2001	
english	kent01	0043	know	know.PRS	nc	nc				
english	kent01	0043	where	where	nc	nc				
english	kent01	0043	that	DIST.SG	nc_dem_pro	nc_dem_pro			2087	
english	kent01	0043	is	be.PRS.3SG	nc	nc				
english	kent01	0044	just	just	nc	nc				
english	kent01	0044	out	out	nc	nc				
english	kent01	0044	here	here	nc	nc				
english	kent01	0044	Jack Court's	Jack_Court's	nc_pn_np	nc_pn_np			2087	
english	kent01	0044	#	#	##ds	##ds				
english	kent01	0044	and	and	other	other				
english	kent01	0044	0	0_I	imp_0.1:a	imp_0	1	a	2000	
english	kent01	0044	pick	pick.IMP	v:pred	v		pred		
english	kent01	0044	up	up	rv	rv				
english	kent01	0044	twelve	twelve	ln_num	ln_num				
english	kent01	0044	pig-s	pig-PL	np:p	np		p	2089	new
english	kent01	0044	little	little	ln_adj	ln_adj				
english	kent01	0044	pig-s	pig-PL	np:appos	np		appos		
english	kent01	0044	#	#	##ds	##ds				
english	kent01	0044	and	and	other	other				
english	kent01	0044	0	0_I	imp_0.1:a	imp_0	1	a	2000	
english	kent01	0044	take	take.IMP	v:pred	v		pred		
english	kent01	0044	0	0_pigs	0:p	0		p	2089	
english	kent01	0044	to	to	adp	adp				
english	kent01	0044	Ashford Market	Ashford_Market	pn_np:g	pn_np		g	2090	new
english	kent01	0045	#	#	##	##				
english	kent01	0045	that	DIST.SG	dem_pro:s	dem_pro		s	2086	
english	kent01	0045	was	be.PST.3SG	cop	cop				
english	kent01	0045	the	the	ln_det	ln_det				
english	kent01	0045	first	first	ln_adj	ln_adj				
english	kent01	0045	job	job	np:pred	np		pred		
english	kent01	0045	#	#	#rc	#rc				
english	kent01	0045	0	0_job	rel_0:p	rel_0		p	2086	
english	kent01	0045	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0045	done	do.PTCP.PST	v:pred	v		pred		
english	kent01	0045	with	with	adp	adp				
english	kent01	0045	a	a	ln_deti	ln_deti				
english	kent01	0045	pony	pony	np:obl	np		obl	2091	bridging
english	kent01	0046	#	#	##	##				
english	kent01	0046	and	and	other	other				
english	kent01	0046	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0046	took	take.PST	v:pred	v		pred		
english	kent01	0046	the	the	ln_det	ln_det				
english	kent01	0046	van	van	np:p	np		p	2076	
english	kent01	0046	down	down	adp	adp				
english	kent01	0046	there	there	other:g	other		g	2087	
english	kent01	0046	#	#	##	##				
english	kent01	0046	and	and	other	other				
english	kent01	0046	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0046	collect-ed	collect-PST	v:pred	v		pred		
english	kent01	0046	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0046	pig-s	pig-PL	np:p	np		p	2089	
english	kent01	0047	#	#	##	##				
english	kent01	0047	he	3SG	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0047	said	say.PST	v:pred	v		pred		
english	kent01	0047	#	#	##ds	##ds				
english	kent01	0047	0	0_I	imp_0.1:a	imp_0	1	a	2000	
english	kent01	0047	take	take.IMP	v:pred	v		pred		
english	kent01	0047	='em	=3SG.OBL	=pro:p	=pro		p	2089	
english	kent01	0047	to	to	adp	adp				
english	kent01	0047	Ashford Market	Ashford_Market	pn_np:g	pn_np		g	2090	
english	kent01	0047	#	#	##ds	##ds				
english	kent01	0047	and	and	other	other				
english	kent01	0047	0	0_I	imp_0.1:a	imp_0	1	a	2000	
english	kent01	0047	put	put.IMP	v:pred	v		pred		
english	kent01	0047	='em	=3SG.OBL	=pro:p	=pro		p	2089	
english	kent01	0047	in	in	adp	adp				
english	kent01	0047	Haynes='s	Haynes=POSS	ln_pn_np.h:poss	ln_pn_np	h	poss	2092	new
english	kent01	0047	auction	auction	np:g	np		g	2093	bridging
english	kent01	0048	#	#	##ds	##ds				
english	kent01	0048	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0048	='ll	=will	=lv_aux	=lv_aux				
english	kent01	0048	be	be.INF	cop	cop				
english	kent01	0048	down	down	adp	adp				
english	kent01	0048	there	there	other:pred_l	other		pred_l	2090	
english	kent01	0048	#	#	##ds	##ds				
english	kent01	0048	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0048	got	got	lv_aux	lv_aux				
english	kent01	0048	to	to	lv	lv				
english	kent01	0048	go	go.INF	v:pred	v		pred		
english	kent01	0048	to	to	adp	adp				
english	kent01	0048	Stalisfield	Stalisfield	pn_np:g	pn_np		g	2094	new
english	kent01	0048	for	for	adp	adp				
english	kent01	0048	some	some	ln_detq	ln_detq				
english	kent01	0048	calves	calf.PL	np:obl	np		obl	2095	new
english	kent01	0049	#	#	#nc	#nc				
english	kent01	0049	so	so	nc	nc				
english	kent01	0049	#	#	#ac	#ac				
english	kent01	0049	as	as	adp	adp				
english	kent01	0049	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0049	was	be.PST.1SG	lv_aux	lv_aux				
english	kent01	0049	going	go.PTCP.PRS	v:pred	v		pred		
english	kent01	0049	in	in	adp	adp				
english	kent01	0049	Ashford Market	Ashford_Market	pn_np:g	pn_np		g	2090	
english	kent01	0049	#	#	##	##				
english	kent01	0049	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0049	='d	=had	=lv_aux	=lv_aux				
english	kent01	0049	been	be.PTCP.PST	cop	cop				
english	kent01	0049	0	0_there	0:pred_l	0		pred_l	2090	
english	kent01	0049	with	with	adp	adp				
english	kent01	0049	him	3SG.M.OBL	pro.h:obl	pro	h	obl	2003	
english	kent01	0049	dozen-s	dozen-PL	other	other				
english	kent01	0049	of	of	other	other				
english	kent01	0049	time-s	time-PL	other	other				
english	kent01	0049	#	#	#ac	#ac				
english	kent01	0049	like	like	other	other				
english	kent01	0049	before	before	adp	adp				
english	kent01	0049	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0049	done	do.PTCP.PST	v:pred	v		pred		
english	kent01	0049	work	work	np:p	np		p		
english	kent01	0049	#	#	##	##				
english	kent01	0049	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0049	knew	know.PST	v:pred	v		pred		
english	kent01	0049	the	the	ln_det	ln_det				
english	kent01	0049	way	way	np:p	np		p	2096	bridging
english	kent01	0049	and	and	rn	rn				
english	kent01	0049	all	all	rn	rn				
english	kent01	0049	#	#	##	##				
english	kent01	0049	#	#	#ac	#ac				
english	kent01	0049	as	as	adp	adp				
english	kent01	0049	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0049	was	be.PST.1SG	lv_aux	lv_aux				
english	kent01	0049	going	go.PTCP.PRS	v:pred	v		pred		
english	kent01	0049	in	in	adp	adp				
english	kent01	0049	the	the	ln_det	ln_det				
english	kent01	0049	market	market	np:g	np		g	2090	
english	kent01	0049	%	%	%	%				
english	kent01	0049	some	some	ln_deti	ln_deti				
english	kent01	0049	man	man	np.h:s	np	h	s	2097	new
english	kent01	0049	come	come.PST	v:pred	v		pred		
english	kent01	0049	up	up	adp	adp				
english	kent01	0049	to	to	adp	adp				
english	kent01	0049	me	1SG.OBL	pro.1:g	pro	1	g	2000	
english	kent01	0049	#	#	##	##				
english	kent01	0049	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2097	
english	kent01	0049	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0049	#	#	##ds	##ds				
english	kent01	0049	where	where	intrg_other:g	intrg_other		g		
english	kent01	0049	you	2SG	gen_pro.2:a	gen_pro	2	a	2000	
english	kent01	0049	gonna	go.PTCP.PRS.to	lv_aux	lv_aux				
english	kent01	0049	take	take.INF	v:pred	v		pred		
english	kent01	0049	those	DIST.PL	ln_dem	ln_dem				
english	kent01	0049	pig-s	pig-PL	np:p	np		p	2089	
english	kent01	0049	boy	boy	np.h:voc	np	h	voc		
english	kent01	0050	#	#	##	##				
english	kent01	0050	I	1SG	pro.1:s_ds	pro	1	s_ds	2000	
english	kent01	0050	said	say.PST	v:pred	v		pred		
english	kent01	0050	in	in	other	other				
english	kent01	0050	the	the	other	other				
english	kent01	0050	market	market	np:other	np		other	2090	
english	kent01	0050	#	#	##	##				
english	kent01	0050	and	and	other	other				
english	kent01	0050	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2097	
english	kent01	0050	said	say.PST	v:pred	v		pred		
english	kent01	0050	whose	who.POSS	other	other				
english	kent01	0050	auction	auction	other	other				
english	kent01	0051	#	#	##	##				
english	kent01	0051	I	1SG	pro.1:s_ds	pro	1	s_ds	2000	
english	kent01	0051	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0051	Ford Thorps	Ford_Thorps	nc_pn_np.h	nc_pn_np	h		2098	bridging
english	kent01	0052	#	#	##ds	##ds				
english	kent01	0052	0	0_I	imp_0.2:s	imp_0	2	s	2000	
english	kent01	0052	go	go.IMP	v:pred	v		pred		
english	kent01	0052	#	#	##ds	##ds				
english	kent01	0052	and	and	other	other				
english	kent01	0052	0	0_I	imp_0.2:a	imp_0	2	a	2000	
english	kent01	0052	put	put.IMP	v:pred	v		pred		
english	kent01	0052	them	3PL.OBL	pro:p	pro		p	2089	
english	kent01	0052	in	in	adp	adp				
english	kent01	0052	mine	mine	ln_pro.1:poss	ln_pro	1	poss	2097	
english	kent01	0052	0	0_auction	0:g	0		g	2106	bridging
english	kent01	0052	#	#	##	##				
english	kent01	0052	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2097	
english	kent01	0052	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0052	#	#	##ds	##ds				
english	kent01	0052	here	here	other:pred_l	other		pred_l		
english	kent01	0052	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0052	threepence	threepence	np:s	np		s	2100	new
english	kent01	0053	#	#	##ds	##ds				
english	kent01	0053	in	in	adp	adp				
english	kent01	0053	Haynes='s	Haynes=POSS	pn_np:l	pn_np		l	2092	
english	kent01	0053	0	0_I	imp_0.2:a	imp_0	2	a	2000	
english	kent01	0053	put	put.IMP	v:pred	v		pred		
english	kent01	0053	them	3PL.OBL	pro:p	pro		p	2089	
english	kent01	0053	in	in	adp	adp				
english	kent01	0053	the	the	ln_det	ln_det				
english	kent01	0053	first	first	ln_adj	ln_adj				
english	kent01	0053	place	place	np:g	np		g	2099	bridging
english	kent01	0053	#	#	#ds_rc	#ds_rc				
english	kent01	0053	you	2SG	pro.2:s	pro	2	s	2000	
english	kent01	0053	come	come.PRS	v:pred	v		pred		
english	kent01	0053	to	to	adp	adp				
english	kent01	0053	0	0_place	rel_0:g	rel_0		g	2099	
english	kent01	0053	#	#	##	##				
english	kent01	0053	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2097	
english	kent01	0053	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0054	#	#	##	##				
english	kent01	0054	so	so	other	other				
english	kent01	0054	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0054	took	take.PST	v:pred	v		pred		
english	kent01	0054	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0054	threepence	threepence	np:p	np		p	2100	
english	kent01	0054	#	#	##	##				
english	kent01	0054	and	and	other	other				
english	kent01	0054	0	0_I	0.1:s	0	1	s	2000	
english	kent01	0054	done	do.PST	v:pred	v		pred		
english	kent01	0054	#	#	#ac	#ac				
english	kent01	0054	as	as	adp	adp				
english	kent01	0054	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0054	was	be.PST.1SG	lv_aux	lv_aux				
english	kent01	0054	told	tell.PTCP.PST	v:pred	v		pred		
english	kent01	0054	#	#	##	##				
english	kent01	0054	0	0_I	0.1:a	0	1	a	2000	
english	kent01	0054	put	put.PST	v:pred	v		pred		
english	kent01	0054	them	3PL.OBL	pro:p	pro		p	2089	
english	kent01	0054	in	in	adp	adp				
english	kent01	0054	the	the	ln_det	ln_det				
english	kent01	0054	first	first	ln_adj	ln_adj				
english	kent01	0054	place	place	np:g	np		g	2099	
english	kent01	0054	#	#	#rc	#rc				
english	kent01	0054	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0054	come	come.PST	v:pred	v		pred		
english	kent01	0054	to	to	adp	adp				
english	kent01	0054	0	0_place	rel_0:g	rel_0		g	2099	
english	kent01	0055	#	#	#nc	#nc				
english	kent01	0055	well	well	other	other				
english	kent01	0055	my	1SG.POSS	nc_pro.1	nc_pro	1		2000	
english	kent01	0055	father	father	nc_np.h	nc_np	h		2003	
english	kent01	0055	was	be.PST.3SG	nc	nc				
english	kent01	0055	#	#	##	##				
english	kent01	0055	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0055	put	put.PST	v:pred	v		pred		
english	kent01	0055	the	the	ln_det	ln_det				
english	kent01	0055	pony	pony	np:p	np		p	2101	bridging
english	kent01	0055	away	away	rv	rv				
english	kent01	0055	#	#	##	##				
english	kent01	0055	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0055	always	always	other	other				
english	kent01	0055	used	used	lv_aux	lv_aux				
english	kent01	0055	to	to	lv	lv				
english	kent01	0055	have	have.INF	v:pred	v		pred		
english	kent01	0055	two	two	nc	nc				
english	kent01	0055	st--	NC	nc	nc				
english	kent01	0055	two	two	ln_num	ln_num				
english	kent01	0055	stable-s	stable-PL	np:p	np		p	2102	new
english	kent01	0055	up	up	adp	adp				
english	kent01	0055	at	at	adp	adp				
english	kent01	0055	Merrill's	Merrill's	nc	nc				
english	kent01	0055	eh	eh	nc	nc				
english	kent01	0055	Me--	NC	nc	nc				
english	kent01	0055	Merrill's yard	Merril's_yard	pn_np:l	pn_np		l	2103	new
english	kent01	0055	#	#	##	##				
english	kent01	0055	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0055	used	used	lv_aux	lv_aux				
english	kent01	0055	to	to	lv	lv				
english	kent01	0055	hire	hire.INF	v:pred	v		pred		
english	kent01	0055	='em	=3PL.OBL	=pro:p	=pro		p	2102	
english	kent01	0055	every	every	nc	nc				
english	kent01	0055	Tues--	NC	nc	nc				
english	kent01	0055	every	every	ln_adj	ln_adj				
english	kent01	0055	Tuesday	Tuesday	np:other	np		other		
english	kent01	0055	the	the	ln_det	ln_det				
english	kent01	0055	year	year	np:other	np		other		
english	kent01	0055	#	#	#rc	#rc				
english	kent01	0055	they	3PL	pro.h:a	pro	h	a	2104	bridging
english	kent01	0055	reserve-d	reserve-PST	v:pred	v		pred		
english	kent01	0055	='em	=3PL.OBL	=pro:p	=pro		p	2102	
english	kent01	0055	for	for	adp	adp				
english	kent01	0055	him	3SG.M.OBL	pro.h:obl	pro	h	obl	2003	
english	kent01	0055	see	see.PRS	other	other				
english	kent01	0056	#	#	##	##				
english	kent01	0056	and	and	other	other				
english	kent01	0056	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0056	put	put.PST	v:pred	v		pred		
english	kent01	0056	the	the	ln_det	ln_det				
english	kent01	0056	pony	pony	np:p	np		p	2101	
english	kent01	0056	out	out	adp	adp				
english	kent01	0056	there	there	other:l	other		l	2102	
english	kent01	0056	#	#	##	##				
english	kent01	0056	0	0_I	0.1:s	0	1	s	2000	
english	kent01	0056	walk-ed	walk-PST	v:pred	v		pred		
english	kent01	0056	back	back	rv	rv				
english	kent01	0056	down	down	adp	adp				
english	kent01	0056	the	the	ln_det	ln_det				
english	kent01	0056	b--	NC	nc	nc				
english	kent01	0056	Bank Street	Bank_Street	pn_np:other	pn_np		other	2105	new
english	kent01	0056	to	to	adp	adp				
english	kent01	0056	the	the	ln_det	ln_det				
english	kent01	0056	market	market	np:g	np		g	2090	
english	kent01	0056	#	#	##	##				
english	kent01	0056	and	and	other	other				
english	kent01	0056	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0056	father	father	np.h:s	np	h	s	2003	
english	kent01	0056	was	be.PST.3SG	cop	cop				
english	kent01	0056	in	in	adp	adp				
english	kent01	0056	there	there	other:pred_l	other		pred_l	2090	
english	kent01	0057	#	#	##	##				
english	kent01	0057	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0057	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0057	#	#	##ds.neg	##ds.neg				
english	kent01	0057	I	1SG	pro.1:a	pro	1	a	2003	
english	kent01	0057	can't	can.NEG	lv_aux	lv_aux				
english	kent01	0057	find	find.INF	v:pred	v		pred		
english	kent01	0057	those	DIST.PL	ln_dem	ln_dem				
english	kent01	0057	pig-s	pig-PL	np:p	np		p	2089	
english	kent01	0058	#	#	##	##				
english	kent01	0058	0	0_father	0.h:s_ds	0	h	s_ds	2003	
english	kent01	0058	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0058	#	#	##ds	##ds				
english	kent01	0058	where	where	intrg_other:pred_l	intrg_other		pred_l		
english	kent01	0058	are	be.PRS	cop	cop				
english	kent01	0058	they	3PL	pro:s	pro		s	2089	
english	kent01	0059	#	#	##	##				
english	kent01	0059	I	1SG	pro.1:s_ds	pro	1	s_ds	2000	
english	kent01	0059	said	say.PST	v:pred	v		pred		
english	kent01	0059	#	#	##ds	##ds				
english	kent01	0059	here	here	other:pred_l	other		pred_l	2093	
english	kent01	0059	they	3PL	pro:s	pro		s	2089	
english	kent01	0059	are	be.PRS	cop	cop				
english	kent01	0060	#	#	##	##				
english	kent01	0060	and	and	other	other				
english	kent01	0060	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0060	show-ed	show-PST	v:pred	v		pred		
english	kent01	0060	='im	=3SG.M.OBL	=pro.h:p	=pro	h	p	2003	
english	kent01	0061	#	#	##	##				
english	kent01	0061	he	3SG	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0061	='s	=be.PRS.3SG	=v:pred	=v		pred		
english	kent01	0061	#	#	##ds.neg	##ds.neg				
english	kent01	0061	did-n't	do.PST.NEG	lv_aux	lv_aux				
english	kent01	0061	I	1SG	pro.1:a	pro	1	a	2003	
english	kent01	0061	tell	tell.INF	v:pred	v		pred		
english	kent01	0061	you	2SG	pro.2:p	pro	2	p	2000	
english	kent01	0061	#	#	#ds_cc:p2	#ds_cc		p2		
english	kent01	0061	0	0_I	f0.2:a	f0	2	a	2000	
english	kent01	0061	to	to	lv	lv				
english	kent01	0061	put	put.INF	vother:pred	vother		pred		
english	kent01	0061	them	3PL.OBL	pro:p	pro		p	2089	
english	kent01	0061	in	in	adp	adp				
english	kent01	0061	Ford Thorps	Ford_Thorps	pn_np:g	pn_np		g	2106	
english	kent01	0062	#	#	##	##				
english	kent01	0062	I	1SG	pro.1:s_ds	pro	1	s_ds	2000	
english	kent01	0062	said	say.PST	v:pred	v		pred		
english	kent01	0062	#	#	##ds	##ds				
english	kent01	0062	well	well	other	other				
english	kent01	0062	some	some	ln_deti	ln_deti				
english	kent01	0062	bloke	bloke	np.h:a	np	h	a	2097	
english	kent01	0062	give	give.PST	v:pred	v		pred		
english	kent01	0062	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0062	threepence	threepence	np:p2	np		p2	2100	
english	kent01	0062	#	#	#ds_ac	#ds_ac				
english	kent01	0062	0	0_I	f0.1:a	f0	1	a	2000	
english	kent01	0062	to	to	lv	lv				
english	kent01	0062	put	put.INF	vother:pred	vother		pred		
english	kent01	0062	them	3PL.OBL	pro:p	pro		p	2089	
english	kent01	0062	in	in	adp	adp				
english	kent01	0062	there	there	other:g	other		g	2093	
english	kent01	0062	#	#	##	##				
english	kent01	0062	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0062	said	say.PST	v:pred	v		pred		
english	kent01	0062	#	#	##ds	##ds				
english	kent01	0062	well	well	other	other				
english	kent01	0062	that	DIST.SG	dem_pro.h:s	dem_pro	h	s	2092	
english	kent01	0062	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0062	Mr Haynes	Mr_Haynes	pn_np.h:pred	pn_np	h	pred		
english	kent01	0063	#	#	##	##				
english	kent01	0063	and	and	other	other				
english	kent01	0063	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0063	box-ed	box-PST	v:pred	v		pred		
english	kent01	0063	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0063	ear-s	ear-PL	np:p	np		p	2107	bridging
english	kent01	0063	#	#	##	##				
english	kent01	0063	and	and	other	other				
english	kent01	0063	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0063	said	say.PST	v:pred	v		pred		
english	kent01	0063	#	#	##ds	##ds				
english	kent01	0063	now	now	other	other				
english	kent01	0063	0	0_I	imp_0.1:a	imp_0	1	a	2000	
english	kent01	0063	shift	shift.IMP	v:pred	v		pred		
english	kent01	0063	='em	=3PL.OBL	=pro:p	=pro		p	2089	
english	kent01	0064	#	#	##	##				
english	kent01	0064	that	DIST.SG	dem_pro:s	dem_pro		s	2108	bridging
english	kent01	0064	was	be.PST.3SG	cop	cop				
english	kent01	0064	the	the	ln_det	ln_det				
english	kent01	0064	first	first	ln_adj	ln_adj				
english	kent01	0064	experience	experience	np:pred	np		pred		
english	kent01	0064	#	#	#cc	#cc				
english	kent01	0064	of	of	adp	adp				
english	kent01	0064	0	0_I	f0.1:s	f0	1	s	2000	
english	kent01	0064	go-ing	go-PTCP.PRS	vother:pred	vother		pred		
english	kent01	0064	to	to	adp	adp				
english	kent01	0064	Ashford Market	Ashford_Market	pn_np:g	pn_np		g	2090	
english	kent01	0064	#	#	##	##				
english	kent01	0064	and	and	other	other				
english	kent01	0064	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0064	told	tell.PST	v:pred	v		pred		
english	kent01	0064	that	DIST.SG	dem_pro:p	dem_pro		p	2109	bridging
english	kent01	0064	to	to	adp	adp				
english	kent01	0064	Mr Haynes	Mr_Haynes	pn_np.h:g	pn_np	h	g	2110	new
english	kent01	0064	not	not	ln	ln				
english	kent01	0064	more	more	ln	ln				
english	kent01	0064	than	than	ln	ln				
english	kent01	0064	six	six	ln_num	ln_num				
english	kent01	0064	month-s	month-PL	np:other	np		other		
english	kent01	0064	ago	ago	adp	adp				
english	kent01	0064	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2092	
english	kent01	0064	grandson	grandson	np.h:dt_g	np	h	dt_g	2110	
english	kent01	0065	yeah	yeah	other	other				
english	kent01	0066	[INT]	[INT]	[INT]	[INT]				
english	kent01	0066	#	#	#nc	#nc				
english	kent01	0066	hmm	hmm	nc	nc				
english	kent01	0066	what	what	nc	nc				
english	kent01	0066	was	be.PST.3SG	nc	nc				
english	kent01	0066	there	there	nc	nc				
english	kent01	0066	rivalry	rivalry	nc	nc				
english	kent01	0066	between	between	nc	nc				
english	kent01	0066	these	PROX.PL	nc_dem_pro.h	nc_dem_pro	h		2111	bridging
english	kent01	0067	heh	heh	nc	nc				
english	kent01	0068	[INT]	[INT]	[INT]	[INT]				
english	kent01	0068	#	#	#nc	#nc				
english	kent01	0068	was	be.PST.3SG	nc	nc				
english	kent01	0068	there	there	nc	nc				
english	kent01	0068	rivalry	rivalry	nc	nc				
english	kent01	0068	between	between	nc	nc				
english	kent01	0068	Haynes	Haynes	nc_pn_np.h	nc_pn_np	h		2092	
english	kent01	0069	oh	oh	nc	nc				
english	kent01	0069	yes	yes	nc	nc				
english	kent01	0069	yes	yes	nc	nc				
english	kent01	0070	#	#	#nc	#nc				
english	kent01	0070	0	0_auctioneers	nc_0.h	nc_0	h		2111	
english	kent01	0070	opposite	opposite	nc	nc				
english	kent01	0070	to	to	nc	nc				
english	kent01	0070	one	one	nc	nc				
english	kent01	0070	another	another	nc_refl.h	nc_refl	h			
english	kent01	0070	see	see.PRS	nc	nc				
english	kent01	0071	yeah	yeah	nc	nc				
english	kent01	0072	[INT]	[INT]	[INT]	[INT]				
english	kent01	0072	hmm	hmm	nc	nc				
english	kent01	0073	#	#	#nc	#nc				
english	kent01	0073	and	and	nc	nc				
english	kent01	0073	anyway	anyway	nc	nc				
english	kent01	0073	I	1SG	nc_pro.1	nc_pro	1		2000	
english	kent01	0073	had	have.PST	nc	nc				
english	kent01	0073	to	to	nc	nc				
english	kent01	0073	#	#	##	##				
english	kent01	0073	well	well	other	other				
english	kent01	0073	'course	of_course	other	other				
english	kent01	0073	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0073	got	get.PST	v:pred	v		pred		
english	kent01	0073	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0073	twelve	twelve	ln_num	ln_num				
english	kent01	0073	pig-s	pig-PL	np:p	np		p	2089	
english	kent01	0073	#	#	#cc:obl	#cc		obl		
english	kent01	0073	0	0_I	f0.1:a	f0	1	a	2000	
english	kent01	0073	to	to	lv	lv				
english	kent01	0073	shift	shift.INF	vother:pred	vother		pred		
english	kent01	0073	0	0_pigs	f0:p	f0		p	2089	
english	kent01	0073	#	#	##	##				
english	kent01	0073	and	and	other	other				
english	kent01	0073	Ford Thorps	Ford_Thorps	pn_np.h:a	pn_np	h	a	2098	
english	kent01	0073	sent	send.PST	v:pred	v		pred		
english	kent01	0073	a	a	ln_deti	ln_deti				
english	kent01	0073	man	man	np.h:p	np	h	p	2112	new
english	kent01	0073	up	up	rv	rv				
english	kent01	0073	#	#	#ac	#ac				
english	kent01	0073	0	0_man	f0.h:a	f0	h	a	2112	
english	kent01	0073	to	to	lv	lv				
english	kent01	0073	help	help.INF	vother:pred	vother		pred		
english	kent01	0073	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0073	#	#	#cc:obl	#cc		obl		
english	kent01	0073	0	0_I	f0.1:a	f0	1	a	2000	
english	kent01	0073	do	do.INF	vother:pred	vother		pred		
english	kent01	0073	it	3SG.N	pro:p	pro		p	2113	bridging
english	kent01	0073	see	see.PRS	other	other				
english	kent01	0074	#	#	##neg	##neg				
english	kent01	0074	Father	Father	pn_np.h:a	pn_np	h	a	2003	
english	kent01	0074	would-n't	would-NEG	lv_aux	lv_aux				
english	kent01	0074	help	help.INF	v:pred	v		pred		
english	kent01	0074	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0074	you	2SG	other	other				
english	kent01	0074	know	know.PRS	other	other				
english	kent01	0075	#	#	##	##				
english	kent01	0075	he	3SG	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0075	said	say.PST	v:pred	v		pred		
english	kent01	0075	#	#	##ds	##ds				
english	kent01	0075	no	no	other	other				
english	kent01	0075	0	0_I	imp_0.2:a	imp_0	2	a	2000	
english	kent01	0075	shift	shift.IMP	v:pred	v		pred		
english	kent01	0075	='em	=3PL.OBL	=pro:p	=pro		p	2089	
english	kent01	0076	#	#	##ds	##ds				
english	kent01	0076	and	and	other	other				
english	kent01	0076	you	2SG	pro.2:a	pro	2	a	2000	
english	kent01	0076	='ll	=will	=lv_aux	=lv_aux				
english	kent01	0076	earn	earn.INF	v:pred	v		pred		
english	kent01	0076	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0076	threepence	threepence	np:p	np		p	2100	
english	kent01	0076	#	#	##	##				
english	kent01	0076	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0076	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0077	#	#	##	##				
english	kent01	0077	and	and	other	other				
english	kent01	0077	that	DIST.SG	dem_pro:s	dem_pro		s	2114	bridging
english	kent01	0077	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0077	the	the	ln_det	ln_det				
english	kent01	0077	way	way	np:pred	np		pred		
english	kent01	0077	#	#	#rc	#rc				
english	kent01	0077	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0077	start-ed	start-PST	v:pred	v		pred		
english	kent01	0077	work	work	np:p	np		p		
english	kent01	0078	##	#	##	##				
english	kent01	0078	and	and	other	other				
english	kent01	0078	gradually	gradually	other	other				
english	kent01	0078	we	1PL	pro.1:s	pro	1	s	2029	
english	kent01	0078	got	get.PST	v:pred	v		pred		
english	kent01	0078	into	into	adp	adp				
english	kent01	0078	a	a	ln_deti	ln_deti				
english	kent01	0078	way	way	np:g	np		g		
english	kent01	0078	#	#	#	#				
english	kent01	0078	of	of	adp	adp				
english	kent01	0078	0	0_we	f0.1:a	f0	1	a	2029	
english	kent01	0078	riding	ride.PTCP.PRS	vother:pred	vother		pred		
english	kent01	0078	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0078	ponies	pony.PL	np:p	np		p	2115	bridging
english	kent01	0078	#	#	##neg	##neg				
english	kent01	0078	and	and	other	other				
english	kent01	0078	all	all	nc	nc				
english	kent01	0078	the	the	nc	nc				
english	kent01	0078	wicked	wicked	nc	nc				
english	kent01	0078	you	2SG	pro.2:a	pro	2	a	2001	
english	kent01	0078	='d	=would	=lv_aux	=lv_aux				
english	kent01	0078	never	never	other	other				
english	kent01	0078	believe	believe.INF	v:pred	v		pred		
english	kent01	0078	#	#	#rc:p	#rc		p		
english	kent01	0078	what	what	intrg_other:p	intrg_other		p		
english	kent01	0078	horse-s	horse-PL	np:a	np		a	2116	bridging
english	kent01	0078	can	can	lv_aux	lv_aux				
english	kent01	0078	do	do.INF	v:pred	v		pred		
english	kent01	0078	#	#	#ac	#ac				
english	kent01	0078	if	if	adp	adp				
english	kent01	0078	they	3PL	pro:s	pro		s	2116	
english	kent01	0078	='re	=be.PRS	=lv_aux	=lv_aux				
english	kent01	0078	not	not	lv	lv				
english	kent01	0078	broken	break.PTCP.PST	v:pred	v		pred		
english	kent01	0078	properly	properly	other	other				
english	kent01	0079	#	#	#ac	#ac				
english	kent01	0079	if	if	adp	adp				
english	kent01	0079	they	3PL	pro:s	pro		s	2116	
english	kent01	0079	='re	=be.PRS	=lv_aux	=lv_aux				
english	kent01	0079	not	not	lv	lv				
english	kent01	0079	broken	break.PTCP.PST	v:pred	v		pred		
english	kent01	0079	properly	properly	other	other				
english	kent01	0079	#	#	#ac	#ac				
english	kent01	0079	when	when	adp	adp				
english	kent01	0079	they	3PL	pro:s	pro		s	2116	
english	kent01	0079	='re	=be.PRS	=cop	=cop				
english	kent01	0079	young	young	other:pred	other		pred		
english	kent01	0080	#	#	##	##				
english	kent01	0080	we	1PL	pro.1:a	pro	1	a	2014	
english	kent01	0080	='ve	=have.PRS	=lv_aux	=lv_aux				
english	kent01	0080	had	have.PTCP.PST	v:pred	v		pred		
english	kent01	0080	='em	=3PL.OBL	=pro:p	=pro		p	2117	bridging
english	kent01	0081	#	#	##	##				
english	kent01	0081	I	1SG	nc_pro.1	nc_pro	1		2000	
english	kent01	0081	he	3SG.M	nc	nc				
english	kent01	0081	he	3SG.M	pro.h:s	pro	h	s	2003	
english	kent01	0081	come	come.PST	v:pred	v		pred		
english	kent01	0081	home	home	other:g	other		g		
english	kent01	0081	with	with	adp	adp				
english	kent01	0081	a	a	ln_deti	ln_deti				
english	kent01	0081	cob	cob	np:obl	np		obl	2118	new
english	kent01	0081	one	one	ln_deti	ln_deti				
english	kent01	0081	day	day	np:other	np		other		
english	kent01	0081	#	#	##	##				
english	kent01	0081	that	DIST.SG	dem_pro:s	dem_pro		s	2118	
english	kent01	0081	was	be.PST.3SG	cop	cop				
english	kent01	0081	a	a	ln_deti	ln_deti				
english	kent01	0081	beautiful-looking	beautiful_looking	ln_adj	ln_adj				
english	kent01	0081	thing	thing	np:pred	np		pred		
english	kent01	0082	#	#	##	##				
english	kent01	0082	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0082	was	be.PST.1SG	cop	cop				
english	kent01	0082	about	about	other	other				
english	kent01	0082	fifteen	fifteen	other:pred	other		pred		
english	kent01	0083	#	#	##	##				
english	kent01	0083	and	and	other	other				
english	kent01	0083	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0083	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0083	#	#	##ds	##ds				
english	kent01	0083	0	0_I	imp_0.1:a	imp_0	1	a	2000	
english	kent01	0083	put	put.IMP	v:pred	v		pred		
english	kent01	0083	tha'	DIST.SG	ln_dem	ln_dem				
english	kent01	0083	pony	pony	np:p	np		p	2118	
english	kent01	0083	in	in	rv	rv				
english	kent01	0083	#	#	##	##				
english	kent01	0083	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0083	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0083	and	and	nc	nc				
english	kent01	0083	%	%	%	%				
english	kent01	0083	in	in	adp	adp				
english	kent01	0083	the	the	ln_det	ln_det				
english	kent01	0083	cart	cart	np:g	np		g	2075	
english	kent01	0083	#	#	##ds	##ds				
english	kent01	0083	and	and	other	other				
english	kent01	0083	0	0_we	f0.1:a	f0	1	a	2119	bridging
english	kent01	0083	let's	HORT	lv_aux	lv_aux				
english	kent01	0083	try	try.INF	vother:pred	vother		pred		
english	kent01	0083	him	3SG.M.OBL	pro:p	pro		p	2118	
english	kent01	0083	#	#	##	##				
english	kent01	0083	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0083	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0083	#	#	##ds	##ds				
english	kent01	0083	I	1SG	pro.1:a	pro	1	a	2003	
english	kent01	0083	want	want.PRS	v:pred	v		pred		
english	kent01	0083	that	DIST.SG	dem_pro:p	dem_pro		p	2118	
english	kent01	0083	for	for	adp	adp				
english	kent01	0083	Tom Smith	Tom_Smith	pn_np.h:g	pn_np	h	g	2120	new
english	kent01	0083	at	at	rn_adp	rn_adp				
english	kent01	0083	Faversham	Faversham	rn_pn_np	rn_pn_np			2020	
english	kent01	0083	#	#	#ds_ac	#ds_ac				
english	kent01	0083	if	if	adp	adp				
english	kent01	0083	it	3SG.N	pro:s	pro		s	2118	
english	kent01	0083	suit-s	suit-PRS.3SG	v:pred	v		pred		
english	kent01	0083	him	3SG.M.OBL	pro.h:p	pro	h	p	2120	
english	kent01	0084	#	#	##	##				
english	kent01	0084	and	and	other	other				
english	kent01	0084	eh	eh	other	other				
english	kent01	0084	so	so	other	other				
english	kent01	0084	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0084	put	put.PST	v:pred	v		pred		
english	kent01	0084	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0084	pony	pony	np:p	np		p	2118	
english	kent01	0084	in	in	adp	adp				
english	kent01	0084	the	the	ln_det	ln_det				
english	kent01	0084	cart	cart	np:g	np		g	2075	
english	kent01	0085	#	#	##neg	##neg				
english	kent01	0085	0	0_I	0.1:s	0	1	s	2000	
english	kent01	0085	had-n't	have.PST.NEG	lv_aux	lv_aux				
english	kent01	0085	got	got.PTCP.PST	v:pred	v		pred		
english	kent01	0085	out	out	adp	adp				
english	kent01	0085	the	the	ln_det	ln_det				
english	kent01	0085	gate	gate	np:obl	np		obl	2121	bridging
english	kent01	0085	#	#	##	##				
english	kent01	0085	I	1SG	pro.1:s_ds	pro	1	s_ds	2000	
english	kent01	0085	said	say.PST	v:pred	v		pred		
english	kent01	0085	#	#	##ds	##ds				
english	kent01	0085	this	PROX.SG	dem_pro:s	dem_pro		s	2118	
english	kent01	0085	is	be.PRS.3SG	cop	cop				
english	kent01	0085	a	a	ln_deti	ln_deti				
english	kent01	0085	napper	napper	np:pred	np		pred		
english	kent01	0086	#	#	##	##				
english	kent01	0086	he	3SG	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0086	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0086	#	#	##ds	##ds				
english	kent01	0086	you	2SG	pro.2:s	pro	2	s	2000	
english	kent01	0086	think	think.PRS	v:pred	v		pred		
english	kent01	0086	so	so	other	other				
english	kent01	0086	#	#	##	##				
english	kent01	0086	I	1SG	pro.h:s_ds	pro	h	s_ds	2000	
english	kent01	0086	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0086	#	#	##ds	##ds				
english	kent01	0086	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0086	can	can	lv_aux	lv_aux				
english	kent01	0086	see	see.INF	v:pred	v		pred		
english	kent01	0086	#	#	#ds_cc:p	#ds_cc		p		
english	kent01	0086	it	3SG.N	pro:s	pro		s	2118	
english	kent01	0086	is	be.PRS.3SG	cop	cop				
english	kent01	0086	0	0_that	0:pred	0		pred		
english	kent01	0087	#	#	##	##				
english	kent01	0087	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0087	look-ed	look-PST	v:pred	v		pred		
english	kent01	0087	at	at	adp	adp				
english	kent01	0087	his	3SG.M.POSS	ln_pro:poss	ln_pro		poss	2118	
english	kent01	0087	old	old	ln_adj	ln_adj				
english	kent01	0087	ear-s	ear-PL	np:obl	np		obl	2122	bridging
english	kent01	0088	#	#	##	##				
english	kent01	0088	and	and	other	other				
english	kent01	0088	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0088	was	be.PST.1SG	cop	cop				
english	kent01	0088	a	NC	nc	nc				
english	kent01	0088	only	only	other	other				
english	kent01	0088	about	about	other	other				
english	kent01	0088	fifteen	fifteen	other:pred	other		pred		
english	kent01	0088	to	to	other	other				
english	kent01	0088	sixteen	sixteen	other	other				
english	kent01	0089	#	#	##	##				
english	kent01	0089	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0089	could	could	lv_aux	lv_aux				
english	kent01	0089	see	see.INF	v:pred	v		pred		
english	kent01	0089	his	3SG.M.POSS	ln_pro:poss	ln_pro		poss	2118	
english	kent01	0089	ear-s	ear-PL	np:p	np		p	2122	
english	kent01	0089	#	#	#	#				
english	kent01	0089	0	0_ears	f0:s	f0		s	2122	
english	kent01	0089	coming	come.PTCP.PRS	vother:pred	vother		pred		
english	kent01	0089	back	back	rv	rv				
english	kent01	0089	#	#	##	##				
english	kent01	0089	#	#	#ac	#ac				
english	kent01	0089	when	when	adp	adp				
english	kent01	0089	a	a	ln_deti	ln_deti				
english	kent01	0089	horse	horse	np:a	np		a	2123	bridging
english	kent01	0089	lay-s	lay-PRS	v:pred	v		pred		
english	kent01	0089	his	3SG.M.POSS	ln_pro:poss	ln_pro		poss	2123	
english	kent01	0089	ear-s	ear-PL	np:p	np		p	2124	bridging
english	kent01	0089	back	back	rv	rv				
english	kent01	0089	%	%	%	%				
english	kent01	0089	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0089	know	know.PRS	v:pred	v		pred		
english	kent01	0089	#	#	#cc:p	#cc		p		
english	kent01	0089	he	3SG.M	pro:a	pro		a	2123	
english	kent01	0089	mean-s	mean-PRS.3SG	v:pred	v		pred		
english	kent01	0089	business	business	np:p	np		p		
english	kent01	0090	#	#	##	##				
english	kent01	0090	he	3SG.M	pro:s	pro		s	2123	
english	kent01	0090	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0090	up	up	other:pred	other		pred		
english	kent01	0090	to	to	rn_adp	rn_adp				
english	kent01	0090	some	some	rn_deti	rn_deti				
english	kent01	0090	trick	trick	rn_np	rn_np				
english	kent01	0091	#	#	##	##				
english	kent01	0091	and	and	other	other				
english	kent01	0091	he	3SG.M	pro:s	pro		s	2118	
english	kent01	0091	got	get.PST	v:pred	v		pred		
english	kent01	0091	out	out	rv	rv				
english	kent01	0091	in	in	adp	adp				
english	kent01	0091	the	the	ln_det	ln_det				
english	kent01	0091	road	road	np:g	np		g	2125	bridging
english	kent01	0091	#	#	##	##				
english	kent01	0091	0	0_horse	0:s	0		s	2118	
english	kent01	0091	stopped	stop.PST	v:pred	v		pred		
english	kent01	0091	dead	dead	other	other				
english	kent01	0091	#	#	#nc	#nc				
english	kent01	0091	Father	Father	nc_pn_np.h	nc_pn_np	h		2003	
english	kent01	0091	well	well	nc	nc				
english	kent01	0091	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0091	was	be.PST.3SG	nc	nc				
english	kent01	0091	#	#	#neg	#neg				
english	kent01	0091	and	and	other	other				
english	kent01	0091	he	3SG.M	pro:s	pro		s	2118	
english	kent01	0091	would-n't	would-NEG	lv_aux	lv_aux				
english	kent01	0091	go	go.INF	v:pred	v		pred		
english	kent01	0091	no	no	other	other				
english	kent01	0091	further	further	other	other				
english	kent01	0091	you	2SG	other	other				
english	kent01	0091	know	know.PRS	other	other				
english	kent01	0092	#	#	##	##				
english	kent01	0092	and	and	other	other				
english	kent01	0092	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0092	can	can	lv_aux	lv_aux				
english	kent01	0092	see	see.INF	v:pred	v		pred		
english	kent01	0092	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0092	father	father	np.h:p	np	h	p	2003	
english	kent01	0092	now	now	other	other				
english	kent01	0092	#	#	##	##				
english	kent01	0092	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0092	always	always	other	other				
english	kent01	0092	had	have.PST	v:pred	v		pred		
english	kent01	0092	a	a	ln_deti	ln_deti				
english	kent01	0092	ash stick	ash_stick	np:p	np		p	2126	new
english	kent01	0092	crooked	crooked	ln_adj	ln_adj				
english	kent01	0092	ash stick	ash_stick	np:appos	np		appos	2126	
english	kent01	0092	#	#	##	##				
english	kent01	0092	he	3SG.M	pro.h:s	pro	h	s	2003	
english	kent01	0092	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0092	left-handed	left_handed	other:pred	other		pred		
english	kent01	0092	#	#	##	##				
english	kent01	0092	and	and	other	other				
english	kent01	0092	he	3SG.M	pro.h:s	pro	h	s	2003	
english	kent01	0092	stood	stand.PST	v:pred	v		pred		
english	kent01	0092	up	up	rv	rv				
english	kent01	0092	in	in	nc	nc				
english	kent01	0092	the	the	nc	nc				
english	kent01	0092	alongside	alongside	nc	nc				
english	kent01	0092	the	the	nc	nc				
english	kent01	0092	alongside	alongside	adp	adp				
english	kent01	0092	of	of	adp	adp				
english	kent01	0092	the	the	ln_det	ln_det				
english	kent01	0092	eh	eh	nc	nc				
english	kent01	0092	eh	eh	nc	nc				
english	kent01	0092	van	van	np:l	np		l	2075	
english	kent01	0092	#	#	##	##				
english	kent01	0092	and	and	other	other				
english	kent01	0092	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0092	hit	hit.PST	v:pred	v		pred		
english	kent01	0092	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0092	horse	horse	nc	nc				
english	kent01	0092	pony	pony	np:p	np		p	2118	
english	kent01	0092	up	up	adp	adp				
english	kent01	0092	the	the	ln_det	ln_det				
english	kent01	0092	rib-s	rib-PL	np:l	np		l	2127	bridging
english	kent01	0092	as	as	other	other				
english	kent01	0092	hard	hard	other	other				
english	kent01	0092	#	#	#ac	#ac				
english	kent01	0092	as	as	adp	adp				
english	kent01	0092	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0092	could	could	lv_aux	lv_aux				
english	kent01	0092	hit	hit.INF	v:pred	v		pred		
english	kent01	0092	him	3SG.M.OBL	pro:p	pro		p	2118	
english	kent01	0092	with	with	adp	adp				
english	kent01	0092	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2003	
english	kent01	0092	stick	stick	np:obl	np		obl	2126	
english	kent01	0092	#	#	##	##				
english	kent01	0092	and	and	other	other				
english	kent01	0092	the	the	ln_det	ln_det				
english	kent01	0092	pony	pony	np:s	np		s	2118	
english	kent01	0092	jump-ed	jump-PST	v:pred	v		pred		
english	kent01	0092	#	#	##	##				
english	kent01	0092	and	and	other	other				
english	kent01	0092	the	the	ln_det	ln_det				
english	kent01	0092	thirlpin	thirlpin	np:s	np		s	2128	bridging
english	kent01	0092	of	of	rn	rn				
english	kent01	0092	the	the	rn_det	rn_det				
english	kent01	0092	van	van	rn_np	rn_np			2075	
english	kent01	0092	snapped	snap.PST	v:pred	v		pred		
english	kent01	0092	#	#	##	##				
english	kent01	0092	we	1PL	pro.1:s	pro	1	s	2119	
english	kent01	0092	dropped	drop.PST	v:pred	v		pred		
english	kent01	0092	in	in	adp	adp				
english	kent01	0092	the	the	ln_det	ln_det				
english	kent01	0092	road	road	np:g	np		g	2125	
english	kent01	0092	#	#	##	##				
english	kent01	0092	and	and	other	other				
english	kent01	0092	the	the	ln_det	ln_det				
english	kent01	0092	pony	pony	np:s	np		s	2118	
english	kent01	0092	went	go.PST	v:pred	v		pred		
english	kent01	0092	up	up	adp	adp				
english	kent01	0092	the	the	ln_det	ln_det				
english	kent01	0092	road	road	np:g	np		g	2125	
english	kent01	0092	#	#	##neg	##neg				
english	kent01	0092	and	and	other	other				
english	kent01	0092	I	1SG	nc	nc				
english	kent01	0092	never	never	nc	nc				
english	kent01	0092	oh	oh	other	other				
english	kent01	0092	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0092	never	never	other	other				
english	kent01	0092	done	do.PTCP.PST	v:pred	v		pred		
english	kent01	0092	so	so	ln	ln				
english	kent01	0092	much	much	ln_detq	ln_detq				
english	kent01	0092	laughing	laughing	np:p	np		p		
english	kent01	0092	in	in	adp	adp				
english	kent01	0092	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0092	life	life	np:other	np		other	2129	bridging
english	kent01	0093	[INT]	[INT]	[INT]	[INT]				
english	kent01	0093	#	#	#nc	#nc				
english	kent01	0093	how	how	nc	nc				
english	kent01	0093	did	do.PST	nc	nc				
english	kent01	0093	you	2SG	nc_pro.2	nc_pro	2		2119	
english	kent01	0093	get	get.INF	nc	nc				
english	kent01	0093	him	3SG.M.OBL	nc_pro	nc_pro			2118	
english	kent01	0093	back	back	nc	nc				
english	kent01	0094	#	#	##	##				
english	kent01	0094	oh	oh	other	other				
english	kent01	0094	0	0_we	0.1:a	0	1	a	2119	
english	kent01	0094	catch-ed	catch-PST	v:pred	v		pred		
english	kent01	0094	him	3SG.M.OBL	pro:p	pro		p	2118	
english	kent01	0094	#	#	##	##				
english	kent01	0094	well	well	other	other				
english	kent01	0094	we	1PL	pro.1:s	pro	1	s	2119	
english	kent01	0094	went	go.PST	v:pred	v		pred		
english	kent01	0094	after	after	adp	adp				
english	kent01	0094	him	3SG.M.OBL	pro:obl	pro		obl	2118	
english	kent01	0094	#	#	##	##				
english	kent01	0094	0	0_we	0.1:a	0	1	a	2119	
english	kent01	0094	catch-ed	catch-PST	v:pred	v		pred		
english	kent01	0094	him	3SG.M.OBL	pro:p	pro		p	2118	
english	kent01	0095	#	#	##	##				
english	kent01	0095	0	0_we	pro.1:s	pro	1	s	2119	
english	kent01	0095	got	get.PST	v:pred	v		pred		
english	kent01	0095	out	out	rv	rv				
english	kent01	0095	#	#	##	##				
english	kent01	0095	0	0_we	0.1:a	0	1	a	2119	
english	kent01	0095	put	put.PST	v:pred	v		pred		
english	kent01	0095	another	another	ln	ln				
english	kent01	0095	pony	pony	np:p	np		p	2130	new
english	kent01	0095	in	in	adp	adp				
english	kent01	0095	the	the	ln_det	ln_det				
english	kent01	0095	cart	cart	np:g	np		g	2075	
english	kent01	0095	#	#	##	##				
english	kent01	0095	and	and	other	other				
english	kent01	0095	0	0_we	0.1:s	0	1	s	2119	
english	kent01	0095	went	go.PST	v:pred	v		pred		
english	kent01	0095	#	#	##	##				
english	kent01	0095	and	and	other	other				
english	kent01	0095	0	0_we	0.1:a	0	1	a	2119	
english	kent01	0095	fetch-ed	fetch-PST	v:pred	v		pred		
english	kent01	0095	him	3SG.M.OBL	pro:p	pro		p	2118	
english	kent01	0096	[INT]	[INT]	[INT]	[INT]				
english	kent01	0096	#	#	#nc	#nc				
english	kent01	0096	whose	whose	nc	nc				
english	kent01	0096	job	job	nc	nc				
english	kent01	0096	was	be.PST.3SG	nc	nc				
english	kent01	0096	it	3SG.N	nc	nc				
english	kent01	0096	to	to	nc	nc				
english	kent01	0096	break	break.INF	nc	nc				
english	kent01	0096	these	PROX.PL	nc	nc				
english	kent01	0096	horse-s	horse-PL	nc_np	nc_np			2131	bridging
english	kent01	0096	then	then	nc	nc				
english	kent01	0097	#	#	#nc	#nc				
english	kent01	0097	well	well	nc	nc				
english	kent01	0097	wherever	wherever	nc	nc				
english	kent01	0097	w--	NC	nc	nc				
english	kent01	0097	#	#	##neg	##neg				
english	kent01	0097	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0097	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0097	know	know.INF	v:pred	v		pred		
english	kent01	0097	#	#	#cc:p	#cc		p		
english	kent01	0097	who	who	intrg_other.h:a	intrg_other	h	a		
english	kent01	0097	broke	break.PST	v:pred	v		pred		
english	kent01	0097	them	3PL.OBL	pro:p	pro		p	2131	
english	kent01	0097	#	#	##	##				
english	kent01	0097	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0097	bought	buy.PST	v:pred	v		pred		
english	kent01	0097	them	3PL.OBL	pro:p	pro		p	2131	
english	kent01	0097	#	#	##	##				
english	kent01	0097	they	3PL	pro.h:a	pro	h	a	2132	bridging
english	kent01	0097	warrant-ed	warrant-PST	v:pred	v		pred		
english	kent01	0097	them	3PL.OBL	pro:p	pro		p	2131	
english	kent01	0097	see	see.PRS	other	other				
english	kent01	0097	#	#	##	##				
english	kent01	0097	they	3PL	nc	nc				
english	kent01	0097	they	3PL	pro.h:s	pro	h	s	2132	
english	kent01	0097	was	be.PST	cop	cop				
english	kent01	0097	all	all	other	other				
english	kent01	0097	rogue-s	rogue-PL	np.h:pred	np	h	pred		
english	kent01	0097	#	#	##	##				
english	kent01	0097	horse dealer-s	horse_dealer-PL	np.h:s	np	h	s	2132	
english	kent01	0097	were	be.PST	cop	cop				
english	kent01	0097	all	all	other	other				
english	kent01	0097	rogue-s	rogue-PL	np.h:pred	np	h	pred		
english	kent01	0098	#	#	##	##				
english	kent01	0098	they	3PL	pro.h:a	pro	h	a	2132	
english	kent01	0098	='d	=would	=lv_aux	=lv_aux				
english	kent01	0098	warrant	warrant.INF	v:pred	v		pred		
english	kent01	0098	it	3SG.N	pro:p	pro		p	2133	bridging
english	kent01	0098	#	#	##	##				
english	kent01	0098	they	3PL	nc	nc				
english	kent01	0098	#	#	#ac	#ac				
english	kent01	0098	long	long	other	other				
english	kent01	0098	as	as	adp	adp				
english	kent01	0098	they	3PL	pro.h:a	pro	h	a	2132	
english	kent01	0098	got	get.PST	v:pred	v		pred		
english	kent01	0098	them	DIST.PL	ln_dem	ln_dem				
english	kent01	0098	sovereign-s	sovereign-PL	np:p	np		p	2134	bridging
english	kent01	0098	#	#	#ac	#ac				
english	kent01	0098	and	and	other	other				
english	kent01	0098	0	0_horse_dealers	0.h:a	0	h	a	2132	
english	kent01	0098	got	get.PST	v:pred	v		pred		
english	kent01	0098	rid	rid	rv	rv				
english	kent01	0098	of	of	rv	rv				
english	kent01	0098	their	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss		
english	kent01	0098	horse	horse	np:p	np		p	2133	
english	kent01	0098	%	%	%	%				
english	kent01	0098	they	3PL	pro.h:s	pro	h	s	2132	
english	kent01	0098	was	be.PST	cop	cop				
english	kent01	0098	landed	landed	other:pred	other		pred		
english	kent01	0099	#	#	##neg	##neg				
english	kent01	0099	wadn't	be.PST.3SG.NEG	other:predex	other		predex		
english	kent01	0099	no	no	ln	ln				
english	kent01	0099	law	law	np:s	np		s		
english	kent01	0100	#	#	##neg	##neg				
english	kent01	0100	see	see.PRS	other	other				
english	kent01	0100	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0100	could-n't	could-NEG	lv_aux	lv_aux				
english	kent01	0100	take	take.INF	v:pred	v		pred		
english	kent01	0100	a	a	ln_deti	ln_deti				
english	kent01	0100	man	man	np:p	np		p	2135	bridging
english	kent01	0100	to	to	adp	adp				
english	kent01	0100	court	court	np:g	np		g	2136	bridging
english	kent01	0100	for	for	adp	adp				
english	kent01	0100	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0100	job	job	np:obl	np		obl	2137	bridging
english	kent01	0100	not	not	other	other				
english	kent01	0100	them	DIST.PL	ln_dem	ln_dem				
english	kent01	0100	day-s	day-PL	np:other	np		other	2138	bridging
english	kent01	0101	#	#	##	##				
english	kent01	0101	eh	eh	other	other				
english	kent01	0101	that	DIST.SG	dem_pro:s	dem_pro		s	2137	
english	kent01	0101	was	be.PST.3SG	cop	cop				
english	kent01	0101	a	a	ln_deti	ln_deti				
english	kent01	0101	tricky	tricky	ln_adj	ln_adj				
english	kent01	0101	job	job	np:pred	np		pred		
english	kent01	0102	[INT]	[INT]	[INT]	[INT]				
english	kent01	0102	#	#	#nc	#nc				
english	kent01	0102	what	what	nc	nc				
english	kent01	0102	sort	sort	nc	nc				
english	kent01	0102	of	of	nc	nc				
english	kent01	0102	place-s	place-PL	nc	nc				
english	kent01	0102	did	do.PST	nc	nc				
english	kent01	0102	he	3SG.M	nc	nc				
english	kent01	0102	did	do.PST	nc	nc				
english	kent01	0102	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0102	buy	buy.INF	nc	nc				
english	kent01	0102	from	from	nc	nc				
english	kent01	0102	then	then	nc	nc				
english	kent01	0103	#	#	#nc	#nc				
english	kent01	0103	ooh	ooh	nc	nc				
english	kent01	0103	farm-s	farm-PL	nc_np	nc_np			2139	bridging
english	kent01	0103	or	or	nc	nc				
english	kent01	0103	dealer-s	dealer-PL	nc_np.h	nc_np	h		2140	bridging
english	kent01	0103	or	or	nc	nc				
english	kent01	0103	anybody	anybody	nc	nc				
english	kent01	0104	#	#	#nc	#nc				
english	kent01	0104	dealer-s	dealer-PL	nc_np.h	nc_np	h		2140	
english	kent01	0104	most	most	nc	nc				
english	kent01	0104	of	of	nc	nc				
english	kent01	0104	='em	=3PL.OBL	nc	nc			2131	
english	kent01	0105	#	#	##	##				
english	kent01	0105	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0105	had	have.PST	v:pred	v		pred		
english	kent01	0105	a	a	ln	ln				
english	kent01	0105	lot	lot	ln_detq	ln_detq				
english	kent01	0105	of	of	ln	ln				
english	kent01	0105	horse-s	horse-PL	np:p	np		p	2141	bridging
english	kent01	0105	out	out	adp	adp				
english	kent01	0105	of	of	adp	adp				
english	kent01	0105	London	London	pn_np:obl	pn_np		obl	2070	
english	kent01	0105	#	#	#nc	#nc				
english	kent01	0105	what	what	nc	nc				
english	kent01	0105	was	be.PST.3SG	nc	nc				
english	kent01	0105	#	#	##	##				
english	kent01	0105	they	3PL	pro.h:a	pro	h	a	2140	
english	kent01	0105	break	break.PRS	v:pred	v		pred		
english	kent01	0105	their	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss	2140	
english	kent01	0105	horse-s	horse-PL	np:p	np		p	2141	
english	kent01	0105	in	in	adp	adp				
english	kent01	0105	London	London	pn_np:l	pn_np		l	2070	
english	kent01	0106	#	#	##	##				
english	kent01	0106	they	3PL	pro:s	pro		s	2141	
english	kent01	0106	only	only	other	other				
english	kent01	0106	last	last.PRS	v:pred	v		pred		
english	kent01	0106	in	in	adp	adp				
english	kent01	0106	London	London	pn_np:l	pn_np		l	2070	
english	kent01	0106	two	two	ln_num	ln_num				
english	kent01	0106	year	year	np:other	np		other		
english	kent01	0106	you	2SG	other	other				
english	kent01	0106	know	know.PRS	other	other				
english	kent01	0106	on	on	nc	nc				
english	kent01	0106	them	DIST.PL	ln_dem	ln_dem				
english	kent01	0106	day-s	day-PL	np:other	np		other	2138	
english	kent01	0107	#	#	##	##				
english	kent01	0107	this	PROX.SG	dem_pro:s	dem_pro		s	2142	bridging
english	kent01	0107	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0107	slippery	slippery	other:pred	other		pred		
english	kent01	0107	you	2SG	other	other				
english	kent01	0107	know	know.PRS	other	other				
english	kent01	0107	and	and	other	other				
english	kent01	0107	smooth	smooth	other:pred	other		pred		
english	kent01	0107	#	#	##	##				
english	kent01	0107	and	and	other	other				
english	kent01	0107	then	then	nc	nc				
english	kent01	0107	got	get.PTCP.PST	nc	nc				
english	kent01	0107	they	3PL	pro.h:a	pro	h	a	2143	bridging
english	kent01	0107	used	used	lv_aux	lv_aux				
english	kent01	0107	to	to	lv	lv				
english	kent01	0107	put	put.INF	v:pred	v		pred		
english	kent01	0107	two	two	ln_num	ln_num				
english	kent01	0107	ton	ton	np:p	np		p		
english	kent01	0107	behind	behind	adp	adp				
english	kent01	0107	one	one	ln_num	ln_num				
english	kent01	0107	big	big	ln_adj	ln_adj				
english	kent01	0107	horse	horse	np:l	np		l	2144	bridging
english	kent01	0107	you	2SG	other	other				
english	kent01	0107	know	know.PRS	other	other				
english	kent01	0108	#	#	##neg	##neg				
english	kent01	0108	0	0_they	pro.h:a	pro	h	a	2143	
english	kent01	0108	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0108	want	want.INF	v:pred	v		pred		
english	kent01	0108	no	no	ln	ln				
english	kent01	0108	pull-ing	pull-PTCP.PRS	np:p	np		p		
english	kent01	0108	only	only	rn	rn				
english	kent01	0108	start-ing	start-PTCP.PRS	rn_np	rn_np				
english	kent01	0108	and	and	rn	rn				
english	kent01	0108	stopping	stop.PTCP.PRS	rn_np	rn_np				
english	kent01	0108	you	2SG	other	other				
english	kent01	0108	see	see.PRS	other	other				
english	kent01	0109	#	#	##	##				
english	kent01	0109	and	and	other	other				
english	kent01	0109	it	3SG.N	pro:a	pro		a		
english	kent01	0109	took	take.PST	v:pred	v		pred		
english	kent01	0109	it	3SG.N	pro:p	pro		p		
english	kent01	0109	so	so	ln	ln				
english	kent01	0109	much	much	np:p2	np		p2		
english	kent01	0109	out	out	adp	adp				
english	kent01	0109	of	of	adp	adp				
english	kent01	0109	the	the	ln_det	ln_det				
english	kent01	0109	horse's	horse=POSS	ln_np:poss	ln_np		poss	2144	
english	kent01	0109	leg-s	leg-PL	np:obl	np		obl	2145	bridging
english	kent01	0109	#	#	##	##				
english	kent01	0109	the	the	ln_det	ln_det				
english	kent01	0109	horse's	horse=POSS	ln_np:poss	ln_np		poss	2144	
english	kent01	0109	front leg-s	front_leg-PL	np:s	np		s	2146	bridging
english	kent01	0109	used	used	lv_aux	lv_aux				
english	kent01	0109	to	to	lv	lv				
english	kent01	0109	go	go.INF	v:pred	v		pred		
english	kent01	0109	over	over	rv	rv				
english	kent01	0109	like	like	adp	adp				
english	kent01	0109	that	DIST.SG	dem_pro:other	dem_pro		other		
english	kent01	0109	bent	bent	other	other				
english	kent01	0110	#	#	##	##				
english	kent01	0110	then	then	other	other				
english	kent01	0110	they	3PL	nc_pro.h	nc_pro	h		2143	
english	kent01	0110	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0110	used	used	lv_aux	lv_aux				
english	kent01	0110	to	to	lv	lv				
english	kent01	0110	buy	buy.INF	v:pred	v		pred		
english	kent01	0110	them	3PL.OBL	pro:p	pro		p	2141	
english	kent01	0110	#	#	##	##				
english	kent01	0110	they	3PL	pro:s	pro		s	2141	
english	kent01	0110	used	used	lv_aux	lv_aux				
english	kent01	0110	to	to	lv	lv				
english	kent01	0110	come	come.INF	v:pred	v		pred		
english	kent01	0110	back	back	rv	rv				
english	kent01	0110	on	on	adp	adp				
english	kent01	0110	the	the	ln_det	ln_det				
english	kent01	0110	farm-s	farm-PL	np:g	np		g	2147	bridging
english	kent01	0110	#	#	##	##				
english	kent01	0110	and	and	other	other				
english	kent01	0110	they	3PL	pro:s	pro		s	2141	
english	kent01	0110	used	used	lv_aux	lv_aux				
english	kent01	0110	to	to	lv	lv				
english	kent01	0110	recover	recover.INF	v:pred	v		pred		
english	kent01	0111	#	#	#ac	#ac				
english	kent01	0111	'cause	because	adp	adp				
english	kent01	0111	they	3PL	pro:s	pro		s	2141	
english	kent01	0111	were	be.PST	cop	cop				
english	kent01	0111	only	only	other	other				
english	kent01	0111	six	six	other	other				
english	kent01	0111	seven	seven	other	other				
english	kent01	0111	year	year	other	other				
english	kent01	0111	old	old	other:pred	other		pred		
english	kent01	0111	you	2SG	other	other				
english	kent01	0111	see	see.PRS	other	other				
english	kent01	0112	#	#	##	##				
english	kent01	0112	then	then	other	other				
english	kent01	0112	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0112	used	used	lv_aux	lv_aux				
english	kent01	0112	to	to	lv	lv				
english	kent01	0112	get	get.INF	v:pred	v		pred		
english	kent01	0112	='em	=3PL.OBL	=pro:p	=pro		p	2141	
english	kent01	0112	#	#	#cc:obl	#cc		obl		
english	kent01	0112	0	0_horses	f0:s	f0		s	2141	
english	kent01	0112	used	used	v:pred	v		pred		
english	kent01	0112	to	to	adp	adp				
english	kent01	0112	farmwork	farmwork	np:obl	np		obl		
english	kent01	0112	#	#	##	##				
english	kent01	0112	and	and	other	other				
english	kent01	0112	then	then	other	other				
english	kent01	0112	0	0_we	pro.1:a	pro	1	a	2119	
english	kent01	0112	sell	sell.INF	v:pred	v		pred		
english	kent01	0112	them	3PL.OBL	pro:p	pro		p	2141	
english	kent01	0112	to	to	adp	adp				
english	kent01	0112	the	the	ln_det	ln_det				
english	kent01	0112	farmer-s	farmer-PL	np.h:g	np	h	g	2148	bridging
english	kent01	0112	round	round	rn	rn				
english	kent01	0112	about	about	rn	rn				
english	kent01	0113	[INT]	[INT]	[INT]	[INT]				
english	kent01	0113	#	#	#nc	#nc				
english	kent01	0113	how	how	nc	nc				
english	kent01	0113	did	do.PST	nc	nc				
english	kent01	0113	you	2SG	nc_pro.2	nc_pro	2		2119	
english	kent01	0113	bring	bring.INF	nc	nc				
english	kent01	0113	them	3PL.OBL	nc_pro	nc_pro			2141	
english	kent01	0113	down	down	nc	nc				
english	kent01	0113	from	from	nc	nc				
english	kent01	0113	London	London	nc_pn_np	nc_pn_np			2070	
english	kent01	0114	huh	huh	nc	nc				
english	kent01	0115	[INT]	[INT]	[INT]	[INT]				
english	kent01	0115	#	#	#nc	#nc				
english	kent01	0115	di--	NC	nc	nc				
english	kent01	0115	di--	NC	nc	nc				
english	kent01	0115	did	do.PST	nc	nc				
english	kent01	0116	#	#	#nc	#nc				
english	kent01	0116	0	0	nc_gen_f0.2	nc_gen_f0	2			
english	kent01	0116	walk	walk.IMP	nc	nc				
english	kent01	0116	='em	=3PL.OBL	nc_pro	nc_pro			2141	
english	kent01	0117	[INT]	[INT]	[INT]	[INT]				
english	kent01	0117	#	#	#nc	#nc				
english	kent01	0117	all	all	nc	nc				
english	kent01	0117	the	the	nc	nc				
english	kent01	0117	way	way	nc	nc				
english	kent01	0118	#	#	#nc	#nc				
english	kent01	0118	how	how	nc	nc				
english	kent01	0118	how	how	nc	nc				
english	kent01	0118	other	other	nc	nc				
english	kent01	0118	could	could	nc	nc				
english	kent01	0118	you	2SG	nc_gen_pro.2	nc_gen_pro	2			
english	kent01	0118	bring	bring.INF	nc	nc				
english	kent01	0118	them	3PL.OBL	nc_pro	nc_pro			2141	
english	kent01	0119	#	#	##	##				
english	kent01	0119	no	no	other	other				
english	kent01	0119	all	all	nc	nc				
english	kent01	0119	there	there	other	other				
english	kent01	0119	were	be.PST	other:predex	other		predex		
english	kent01	0119	chap-s	chap-PL	np:s	np		s	2149	new
english	kent01	0119	up	up	adp	adp				
english	kent01	0119	there	there	other:l	other		l	2070	
english	kent01	0119	#	#	#rc	#rc				
english	kent01	0119	0	0_horse_drivers	rel_0.h:a	rel_0	h	a	2149	
english	kent01	0119	used	used	lv_aux	lv_aux				
english	kent01	0119	ehr	ehr	nc	nc				
english	kent01	0119	to	to	lv	lv				
english	kent01	0119	bring	bring.INF	v:pred	v		pred		
english	kent01	0119	them	3PL.OBL	pro:p	pro		p	2141	
english	kent01	0119	down	down	rv	rv				
english	kent01	0119	at	at	adp	adp				
english	kent01	0119	the	the	ln_det	ln_det				
english	kent01	0119	mart	mart	np:l	np		l	2150	new
english	kent01	0119	#	#	##	##				
english	kent01	0119	and	and	other	other				
english	kent01	0119	they	3PL	pro.h:s_ds	pro	h	s_ds	2149	
english	kent01	0119	used	used	lv_aux	lv_aux				
english	kent01	0119	to	to	lv	lv				
english	kent01	0119	say	say.INF	v:pred	v		pred		
english	kent01	0119	#	#	##ds	##ds				
english	kent01	0119	where	where	intrg_other:g	intrg_other		g		
english	kent01	0119	you	2SG	pro.2:s	pro	2	s	2119	
english	kent01	0119	wanna	want_to	lv_aux	lv_aux				
english	kent01	0119	go	go.INF	v:pred	v		pred		
english	kent01	0119	to	to	adp	adp				
english	kent01	0120	#	#	##	##				
english	kent01	0120	and	and	other	other				
english	kent01	0120	we	1PL	pro.1:a_ds	pro	1	a_ds	2119	
english	kent01	0120	used	used	lv_aux	lv_aux				
english	kent01	0120	tell	tell.INF	v:pred	v		pred		
english	kent01	0120	='em	=3PL.OBL	=pro.h:p	=pro	h	p	2149	
english	kent01	0120	close	close	other	other				
english	kent01	0120	Faversham	Faversham	pn_np:other	pn_np		other	2020	
english	kent01	0121	#	#	##	##				
english	kent01	0121	and	and	other	other				
english	kent01	0121	#	#	##ds	##ds				
english	kent01	0121	oh	oh	other	other				
english	kent01	0121	I	1SG	pro.1:a	pro	1	a	2149	
english	kent01	0121	know	know.PRS	v:pred	v		pred		
english	kent01	0121	that	DIST.SG	dem_pro:p	dem_pro		p	2020	
english	kent01	0121	#	#	##	##				
english	kent01	0121	and	and	other	other				
english	kent01	0121	perhaps	perhaps	other	other				
english	kent01	0121	he	3SG	pro.h:a	pro	h	a	2149	
english	kent01	0121	='d	=would	=lv_aux	=lv_aux				
english	kent01	0121	bring	bring.INF	v:pred	v		pred		
english	kent01	0121	about	about	ln	ln				
english	kent01	0121	four	four	num_np:p	num_np		p	2151	bridging
english	kent01	0121	down	down	rv	rv				
english	kent01	0121	see	see	other	other				
english	kent01	0122	#	#	##	##				
english	kent01	0122	em--	NC	nc	nc				
english	kent01	0122	pe--	NC	nc	nc				
english	kent01	0122	for	for	nc	nc				
english	kent01	0122	other	other	nc	nc				
english	kent01	0122	buyer	buyer	nc	nc				
english	kent01	0122	perhaps	perhaps	other	other				
english	kent01	0122	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0122	='d	=would	=lv_aux	=lv_aux				
english	kent01	0122	buy	buy.INF	v:pred	v		pred		
english	kent01	0122	two	two	num_np:p	num_np		p	2152	bridging
english	kent01	0122	#	#	##	##				
english	kent01	0122	and	and	other	other				
english	kent01	0122	another	another	ln	ln				
english	kent01	0122	farmer	farmer	np.h:a	np	h	a	2153	new
english	kent01	0122	b--	NC	nc	nc				
english	kent01	0122	buy	buy.INF	v:pred	v		pred		
english	kent01	0122	one	one	num_np:p	num_np		p	2154	bridging
english	kent01	0122	#	#	##	##				
english	kent01	0122	they	3PL	pro.h:s	pro	h	s	2149	
english	kent01	0122	used	used	lv_aux	lv_aux				
english	kent01	0122	to	to	lv	lv				
english	kent01	0122	come	come.INF	v:pred	v		pred		
english	kent01	0122	down	down	rv	rv				
english	kent01	0122	together	together	other	other				
english	kent01	0122	#	#	##	##				
english	kent01	0122	perhaps	perhaps	other	other				
english	kent01	0122	two	two	num_np.h:s	num_np	h	s	2155	bridging
english	kent01	0122	or	or	rn	rn				
english	kent01	0122	three	three	rn_num_np.h	rn_num_np	h			
english	kent01	0122	of	of	rn	rn				
english	kent01	0122	them	3PL.OBL	rn_pro.h	rn_pro	h		2149	
english	kent01	0122	used	used	lv_aux	lv_aux				
english	kent01	0122	to	to	lv	lv				
english	kent01	0122	come	come.INF	v:pred	v		pred		
english	kent01	0122	down	down	rv	rv				
english	kent01	0122	and	and	other	other				
english	kent01	0122	with	with	adp	adp				
english	kent01	0122	about	about	ln	ln				
english	kent01	0122	a	a	ln	ln				
english	kent01	0122	dozen	dozen	ln_num	ln_num				
english	kent01	0122	old	old	ln_adj	ln_adj				
english	kent01	0122	horse-s	horse-PL	np:obl	np		obl	2156	bridging
english	kent01	0122	out	out	adp	adp				
english	kent01	0122	of	of	adp	adp				
english	kent01	0122	London	London	pn_np:obl	pn_np		obl	2070	
english	kent01	0122	#	#	##	##				
english	kent01	0122	0	0_horse_drivers	0.h:s	0	h	s	2155	
english	kent01	0122	stop	stop.INF	v:pred	v		pred		
english	kent01	0122	at	at	adp	adp				
english	kent01	0122	every	every	ln_adj	ln_adj				
english	kent01	0122	pub	pub	np:l	np		l	2157	bridging
english	kent01	0122	#	#	##	##				
english	kent01	0122	time	time	np:other	np		other		
english	kent01	0122	#	#	#rc	#rc				
english	kent01	0122	they	3PL	pro.h:s	pro	h	s	2155	
english	kent01	0122	got	get.PST	v:pred	v		pred		
english	kent01	0122	down	down	adp	adp				
english	kent01	0122	here	here	other:g	other		g	2020	
english	kent01	0122	%	%	%	%				
english	kent01	0122	they	3PL	pro.h:s	pro	h	s	2155	
english	kent01	0122	was	be.PST	cop	cop				
english	kent01	0122	all	all	other	other				
english	kent01	0122	pretty	pretty	other	other				
english	kent01	0122	near	near	other	other				
english	kent01	0122	boozed	boozed	other:pred	other		pred		
english	kent01	0123	yeah	yeah	other	other				
english	kent01	0124	[INT]	[INT]	[INT]	[INT]				
english	kent01	0124	#	#	#nc	#nc				
english	kent01	0124	could-n't	could-NEG	nc	nc				
english	kent01	0124	they	3PL	nc_pro.h	nc_pro	h		2149	
english	kent01	0124	bring	bring.INF	nc	nc				
english	kent01	0124	them	3PL.OBL	nc_pro	nc_pro				
english	kent01	0124	on	on	nc	nc				
english	kent01	0124	the	the	nc	nc				
english	kent01	0124	train	train	nc_np	nc_np			2158	new
english	kent01	0125	no	no	nc	nc				
english	kent01	0126	#	#	##neg	##neg				
english	kent01	0126	they	3PL	pro.h:a	pro	h	a	2149	
english	kent01	0126	could-n't	could-NEG	lv_aux	lv_aux				
english	kent01	0126	have	have.INF	v:pred	v		pred		
english	kent01	0126	them	3PL.OBL	pro:p	pro		p		
english	kent01	0126	on	on	adp	adp				
english	kent01	0126	a	a	ln_deti	ln_deti				
english	kent01	0126	train	train	np:p	np		p	2159	bridging
english	kent01	0126	#	#	##	##				
english	kent01	0126	0	0	0:s	0		s		
english	kent01	0126	be	be.INF	cop	cop				
english	kent01	0126	like	like	adp	adp				
english	kent01	0126	the	the	ln_det	ln_det				
english	kent01	0126	donkey	donkey	np:pred_other	np		pred_other	2160	new
english	kent01	0126	gypsy	gypsy	nc	nc				
english	kent01	0126	of	of	nc	nc				
english	kent01	0126	the	the	nc	nc				
english	kent01	0126	what	what	nc	nc				
english	kent01	0126	='s	=be.PRS.3SG	nc	nc				
english	kent01	0126	the	the	nc	nc				
english	kent01	0126	name	name	nc	nc				
english	kent01	0126	donkey	donkey	nc	nc				
english	kent01	0126	wouldn't it	TAG	nc	nc				
english	kent01	0127	#	#	##	##				
english	kent01	0127	I	1SG	other	other			2000	
english	kent01	0127	say	say.PRS.3SG	other	other				
english	kent01	0127	it	3SG.N	pro:s	pro		s		
english	kent01	0127	='d	=would	=lv_aux	=lv_aux				
english	kent01	0127	be	be.INF	cop	cop				
english	kent01	0127	like	like	adp	adp				
english	kent01	0127	the	the	ln_det	ln_det				
english	kent01	0127	gypsy's	gypsy=POSS	ln_np.h:poss	ln_np	h	poss	2161	new
english	kent01	0127	donkey	donkey	np.h:pred_other	np	h	pred_other	2160	
english	kent01	0127	wouldn't it	TAG	other	other				
english	kent01	0128	[INT]	[INT]	[INT]	[INT]				
english	kent01	0128	#	#	#nc	#nc				
english	kent01	0128	what	what	nc	nc				
english	kent01	0128	='s	=be.PRS.3SG	nc	nc				
english	kent01	0128	that	DIST.SG	nc	nc				
english	kent01	0128	gypsy's	gypsy=POSS	nc_np.h	nc_np	h		2161	
english	kent01	0129	donkey	donkey	nc	nc				
english	kent01	0130	#	#	##	##				
english	kent01	0130	two	two	ln_num	ln_num				
english	kent01	0130	old	old	ln_adj	ln_adj				
english	kent01	0130	gypsies	gypsy.PL	np.h:a	np	h	a	2162	bridging
english	kent01	0130	bought	buy.PST	nc	nc				
english	kent01	0130	a	a	nc	nc				
english	kent01	0130	got	get.PST	nc	nc				
english	kent01	0130	a	a	nc	nc				
english	kent01	0130	donkey	donkey	nc	nc				
english	kent01	0130	up	up	nc	nc				
english	kent01	0130	in	in	nc	nc				
english	kent01	0130	Lon--	NC	nc	nc				
english	kent01	0130	bought	buy.PST	v:pred	v		pred		
english	kent01	0130	a	a	ln_deti	ln_deti				
english	kent01	0130	donkey	donkey	np:p	np		p	2160	
english	kent01	0130	in	in	adp	adp				
english	kent01	0130	London	London	pn_np:l	pn_np		l	2070	
english	kent01	0130	you	2SG	other	other				
english	kent01	0130	know	know.PRS	other	other				
english	kent01	0130	or	or	other	other				
english	kent01	0130	a	a	nc	nc				
english	kent01	0130	in	in	adp	adp				
english	kent01	0130	a	a	ln_deti	ln_deti				
english	kent01	0130	town	town	np:l	np		l	2163	bridging
english	kent01	0130	somewhere	somewhere	rn	rn				
english	kent01	0130	#	#	##	##				
english	kent01	0130	and	and	other	other				
english	kent01	0130	it	3SG.N	nc	nc				
english	kent01	0130	they	3PL	pro.h:a	pro	h	a	2164	bridging
english	kent01	0130	told	tell.PST	v:pred	v		pred		
english	kent01	0130	us	1PL.OBL	pro.1:p	pro	1	p	2165	bridging
english	kent01	0130	#	#	#cc:p2	#cc		p2		
english	kent01	0130	that	that	other	other				
english	kent01	0130	it	3SG.N	pro:s	pro		s	2166	bridging
english	kent01	0130	was	be.PST.3SG	cop	cop				
english	kent01	0130	true	true	other:pred	other		pred		
english	kent01	0131	#	#	##	##				
english	kent01	0131	and	and	other	other				
english	kent01	0131	one	one	num_np.h:a	num_np	h	a	2167	bridging
english	kent01	0131	got	get.PST	v:pred	v		pred		
english	kent01	0131	the	the	ln_det	ln_det				
english	kent01	0131	guard	guard	np.h:p	np	h	p	2168	new
english	kent01	0131	in	in	adp	adp				
english	kent01	0131	out	out	adp	adp				
english	kent01	0131	the	the	ln_det	ln_det				
english	kent01	0131	guard's	guard=POSS	ln	ln				
english	kent01	0131	van	van	np:obl	np		obl	2169	bridging
english	kent01	0131	#	#	#ac	#ac				
english	kent01	0131	0	0_guard	f0.h:s	f0	h	s	2168	
english	kent01	0131	to	to	lv	lv				
english	kent01	0131	go	go.INF	vother:pred	vother		pred		
english	kent01	0131	#	#	#ac	#ac				
english	kent01	0131	and	and	other	other				
english	kent01	0131	0	0_guard	f0.h:s	f0	h	s	2168	
english	kent01	0131	have	have.INF	v:pred	v		pred		
english	kent01	0131	a	a	other	other				
english	kent01	0131	drink	drink	other:lvc	other		lvc		
english	kent01	0131	with	with	adp	adp				
english	kent01	0131	him	3SG.M.OBL	pro.h:p	pro	h	p	2167	
english	kent01	0131	#	#	##	##				
english	kent01	0131	and	and	other	other				
english	kent01	0131	he	3SG.M	pro.h:a	pro	h	a	2170	bridging
english	kent01	0131	whipped	whip.PST	v:pred	v		pred		
english	kent01	0131	the	the	ln_det	ln_det				
english	kent01	0131	donkey	donkey	np:p	np		p	2160	
english	kent01	0131	in	in	adp	adp				
english	kent01	0131	the	the	ln_det	ln_det				
english	kent01	0131	guard's	guard=POSS	ln	ln				
english	kent01	0131	van	van	np:g	np		g	2169	
english	kent01	0131	#	#	#ac	#ac				
english	kent01	0131	0	0_gypsy	f0.h:a	f0	h	a	2170	
english	kent01	0131	to	to	lv	lv				
english	kent01	0131	get	get.INF	nc	nc				
english	kent01	0131	it	3SG.N	nc	nc				
english	kent01	0131	get	get.INF	vother:pred	vother		pred		
english	kent01	0131	him	3SG.M.OBL	pro:p	pro		p	2160	
english	kent01	0131	down	down	adp	adp				
english	kent01	0131	on	on	adp	adp				
english	kent01	0131	the	the	ln_det	ln_det				
english	kent01	0131	train	train	np:g	np		g	2171	bridging
english	kent01	0131	you	2SG	other	other				
english	kent01	0131	see	see.PRS	other	other				
english	kent01	0132	#	#	##	##				
english	kent01	0132	and	and	other	other				
english	kent01	0132	old	old	ln_det	ln_det				
english	kent01	0132	guard	guard	np.h:s	np	h	s	2168	
english	kent01	0132	come	come.PST	v:pred	v		pred		
english	kent01	0132	back	back	rv	rv				
english	kent01	0132	#	#	##	##				
english	kent01	0132	and	and	other	other				
english	kent01	0132	he	3SG.M	pro.h:a	pro	h	a	2168	
english	kent01	0132	tied	tie.PST	v:pred	v		pred		
english	kent01	0132	him	3SG.M.OBL	pro.h:p	pro	h	p	2170	
english	kent01	0132	on	on	adp	adp				
english	kent01	0132	the	the	ln_det	ln_det				
english	kent01	0132	back	back	np:l	np		l	2172	bridging
english	kent01	0133	#	#	##	##				
english	kent01	0133	and	and	other	other				
english	kent01	0133	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2168	
english	kent01	0133	said	say.PST	v:pred	v		pred		
english	kent01	0133	#	#	##ds	##ds				
english	kent01	0133	I	1SG	pro.1:a	pro	1	a	2168	
english	kent01	0133	bet	bet.PRS	v:pred	v		pred		
english	kent01	0133	#	#	#ds_cc:p	#ds_cc		p		
english	kent01	0133	old	old	ln_adj	ln_adj				
english	kent01	0133	Jamie	Jamie	pn_np.h:s	pn_np	h	s	2167	
english	kent01	0133	='s	=be.PRS.3SG	=lv_aux	=lv_aux				
english	kent01	0133	legging	leg.PTCP.PRS	v:pred	v		pred		
english	kent01	0133	it	3SG.N	rv	rv				
english	kent01	0133	now	now	other	other				
english	kent01	0134	#	#	##	##				
english	kent01	0134	and	and	other	other				
english	kent01	0134	the	the	ln_det	ln_det				
english	kent01	0134	old	old	ln_adj	ln_adj				
english	kent01	0134	train	train	np:s	np		s	2171	
english	kent01	0134	was	be.PST.3SG	lv_aux	lv_aux				
english	kent01	0134	coming	come.PTCP.PRS	v:pred	v		pred		
english	kent01	0134	in	in	rv	rv				
english	kent01	0135	yeah	yeah	other	other				
english	kent01	0136	#	#	##	##				
english	kent01	0136	oh	oh	other	other				
english	kent01	0136	we	1PL	pro.1:a	pro	1	a	2165	
english	kent01	0136	='ve	=have.PRS	=lv_aux	=lv_aux				
english	kent01	0136	had	have.PTCP.PST	v:pred	v		pred		
english	kent01	0136	some	some	ln_detq	ln_detq				
english	kent01	0136	fun	fun	np:p	np		p		
english	kent01	0137	#	#	##	##				
english	kent01	0137	we	1PL	pro.1:a	pro	1	a	2165	
english	kent01	0137	made	make.PST	v:pred	v		pred		
english	kent01	0137	fun	fun	np:p	np		p		
english	kent01	0137	of	of	adp	adp				
english	kent01	0137	our	1PL.POSS	ln_pro.1:poss	ln_pro	1	poss	2165	
english	kent01	0137	life	life	np:obl	np		obl	2173	
english	kent01	0138	#	#	##	##				
english	kent01	0138	we	1PL	pro.1:a	pro	1	a	2000	
english	kent01	0138	enjoy-ed	enjoy-PST	v:pred	v		pred		
english	kent01	0138	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0138	life	life	np:p	np		p	2129	
english	kent01	0138	anyway	anyway	other	other				
english	kent01	0139	[INT]	[INT]	[INT]	[INT]				
english	kent01	0139	hmm	hmm	nc	nc				
english	kent01	0140	#	#	##	##				
english	kent01	0140	#	#	#ac.neg	#ac.neg				
english	kent01	0140	if	if	adp	adp				
english	kent01	0140	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0140	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0140	work	work.INF	v:pred	v		pred		
english	kent01	0140	so	so	other	other				
english	kent01	0140	hard	hard	other	other				
english	kent01	0140	%	%	%	%				
english	kent01	0140	I	1SG	nc	nc				
english	kent01	0140	='d	=would	nc	nc				
english	kent01	0140	enjoy-ed	enjoy-PST	nc	nc				
english	kent01	0140	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0140	='d	=would	=lv_aux	=lv_aux				
english	kent01	0140	enjoy-ed	enjoy-PST	v:pred	v		pred		
english	kent01	0140	it	3SG.N	pro:p	pro		p	2129	
english	kent01	0140	#	#	#ac	#ac				
english	kent01	0140	till	until	adp	adp				
english	kent01	0140	Father	Father	pn_np.h:a	pn_np	h	a	2003	
english	kent01	0140	took	take.PST	v:pred	v		pred		
english	kent01	0140	more	more	ln_detq	ln_detq				
english	kent01	0140	ground	ground	np:p	np		p		
english	kent01	0141	#	#	##	##				
english	kent01	0141	and	and	other	other				
english	kent01	0141	then	then	other	other				
english	kent01	0141	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0141	took	take.PST	nc	nc				
english	kent01	0141	me	1SG.OBL	nc	nc				
english	kent01	0141	put	put.PST	v:pred	v		pred		
english	kent01	0141	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0141	in	in	nc	nc				
english	kent01	0141	in	in	adp	adp				
english	kent01	0141	control	control	np:other	np		other		
english	kent01	0142	#	#	##	##				
english	kent01	0142	he	3SG.M	nc	nc				
english	kent01	0142	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0142	got	get.PST	v:pred	v		pred		
english	kent01	0142	too	too	ln	ln				
english	kent01	0142	big	big	ln_adj	ln_adj				
english	kent01	0142	a	a	ln_deti	ln_deti				
english	kent01	0142	business	business	np:p	np		p		
english	kent01	0142	#	#	#ac	#ac				
english	kent01	0142	0	0_father	f0.h:a	f0	h	a	2003	
english	kent01	0142	to	to	lv	lv				
english	kent01	0142	do	do.INF	v:pred	v		pred		
english	kent01	0142	anything	anything	indef_other:p	indef_other		p		
english	kent01	0142	on	on	adp	adp				
english	kent01	0142	the	the	ln_det	ln_det				
english	kent01	0142	farm	farm	np:l	np		l	2044	
english	kent01	0142	#	#	##	##				
english	kent01	0142	and	and	nc	nc				
english	kent01	0142	he	3SG	nc	nc				
english	kent01	0142	and	and	other	other				
english	kent01	0142	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0142	said	say.PST	v:pred	v		pred		
english	kent01	0142	#	#	##ds	##ds				
english	kent01	0142	well	well	other	other				
english	kent01	0142	you	2SG	pro.2:a	pro	2	a	2000	
english	kent01	0142	='ll	=will	=lv_aux	=lv_aux				
english	kent01	0142	have	have.INF	lv_aux	lv_aux				
english	kent01	0142	to	to	lv	lv				
english	kent01	0142	look	look.INF	v:pred	v		pred		
english	kent01	0142	after	after	rv	rv				
english	kent01	0142	the	the	ln_det	ln_det				
english	kent01	0142	farm	farm	np:p	np		p	2044	
english	kent01	0142	now	now	other	other				
english	kent01	0142	#	#	##ds	##ds				
english	kent01	0142	and	and	other	other				
english	kent01	0142	you	2SG	pro.2:a	pro	2	a	2000	
english	kent01	0142	can	can	lv_aux	lv_aux				
english	kent01	0142	look	look.INF	v:pred	v		pred		
english	kent01	0142	after	after	rv	rv				
english	kent01	0142	the	the	ln_det	ln_det				
english	kent01	0142	horse-s	horse-PL	np:p	np		p	2174	bridging
english	kent01	0142	and	and	rn	rn				
english	kent01	0142	that	DIST.SG	rn_dem_pro	rn_dem_pro				
english	kent01	0142	#	#	#ds_ac	#ds_ac				
english	kent01	0142	when	when	adp	adp				
english	kent01	0142	I	1SG	pro.1:s	pro	1	s	2003	
english	kent01	0142	come	come.PRS	v:pred	v		pred		
english	kent01	0142	home	home	other:g	other		g		
english	kent01	0143	#	#	##	##				
english	kent01	0143	and	and	other	other				
english	kent01	0143	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0143	was	be.PST.1SG	cop	cop				
english	kent01	0143	all	all	other	other				
english	kent01	0143	alone	alone	other:pred	other		pred		
english	kent01	0143	on	on	adp	adp				
english	kent01	0143	thirty	thirty	ln_num	ln_num				
english	kent01	0143	acre-s	acre-PL	np:l	np		l		
english	kent01	0144	[INT]	[INT]	[INT]	[INT]				
english	kent01	0144	#	#	#nc	#nc				
english	kent01	0144	how	how	nc	nc				
english	kent01	0144	old	old	nc	nc				
english	kent01	0144	were	be.PST	nc	nc				
english	kent01	0144	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0144	then	then	nc	nc				
english	kent01	0145	#	#	#nc	#nc				
english	kent01	0145	uhm	uhm	nc	nc				
english	kent01	0145	sixteen	sixteen	nc	nc				
english	kent01	0145	fifteen	fifteen	nc	nc				
english	kent01	0145	sixteen	sixteen	nc	nc				
english	kent01	0146	[INT]	[INT]	[INT]	[INT]				
english	kent01	0146	#	#	#nc	#nc				
english	kent01	0146	it	3SG.N	nc	nc				
english	kent01	0146	was	be.PST.3SG	nc	nc				
english	kent01	0146	it	3SG.N	nc_pro	nc_pro			2044	
english	kent01	0146	was	be.PST.3SG	nc	nc				
english	kent01	0146	actually	actually	nc	nc				
english	kent01	0146	a	a	nc	nc				
english	kent01	0146	farm	farm	nc	nc				
english	kent01	0146	#	#	#nc	#nc				
english	kent01	0146	0	0_farm	nc_rel_0	nc_rel_0			2044	
english	kent01	0146	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0146	had	have.PST	nc	nc				
english	kent01	0146	at	at	nc	nc				
english	kent01	0146	Molash	Molash	nc_pn_np	nc_pn_np			2016	
english	kent01	0146	was it	TAG	nc	nc				
english	kent01	0147	hmm	hmm	nc	nc				
english	kent01	0148	[INT]	[INT]	[INT]	[INT]				
english	kent01	0148	#	#	#nc	#nc				
english	kent01	0148	it	3SG.N	nc_pro	nc_pro			2044	
english	kent01	0148	was	be.PST.3SG	nc	nc				
english	kent01	0148	actually	actually	nc	nc				
english	kent01	0148	a	a	nc	nc				
english	kent01	0148	farm	farm	nc	nc				
english	kent01	0148	#	#	#nc	#nc				
english	kent01	0148	0	0_farm	nc_rel_0	nc_rel_0			2044	
english	kent01	0148	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0148	had	have.PST	nc	nc				
english	kent01	0149	#	#	#nc	#nc				
english	kent01	0149	yeah	yeah	nc	nc				
english	kent01	0149	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0149	bought	buy.PST	nc	nc				
english	kent01	0149	it	3SG.N	nc_pro	nc_pro			2044	
english	kent01	0150	#	#	##	##				
english	kent01	0150	he	3SG	pro.h:a	pro	h	a	2003	
english	kent01	0150	bought	buy.PST	v:pred	v		pred		
english	kent01	0150	it	3SG.N	pro:p	pro		p	2044	
english	kent01	0150	off	off	nc	nc				
english	kent01	0150	the	the	nc	nc				
english	kent01	0150	eh	eh	nc	nc				
english	kent01	0150	#	#	#ac	#ac				
english	kent01	0150	when	when	adp	adp				
english	kent01	0150	they	3PL	pro.h:a	pro	h	a	2175	bridging
english	kent01	0150	sold	sell.PST	v:pred	v		pred		
english	kent01	0150	the	the	ln_det	ln_det				
english	kent01	0150	outlying	outlying	ln_adj	ln_adj				
english	kent01	0150	farm-s	farm-PL	np:p	np		p	2176	bridging
english	kent01	0150	from	from	adp	adp				
english	kent01	0150	eh	eh	nc	nc				
english	kent01	0150	Eastwell Park Estate	Eastwell_Park_Estate	pn_np:obl	pn_np		obl	2177	new
english	kent01	0151	[INT]	[INT]	[INT]	[INT]				
english	kent01	0151	hmm	hmm	nc	nc				
english	kent01	0152	Lord Grand	Lord_Grand	nc_pn_np.h	nc_pn_np	h		2178	new
english	kent01	0153	[INT]	[INT]	[INT]	[INT]				
english	kent01	0153	#	#	#nc	#nc				
english	kent01	0153	this	PROX.SG	nc_dem_pro	nc_dem_pro				
english	kent01	0153	would	would	nc	nc				
english	kent01	0153	be	be.INF	nc	nc				
english	kent01	0153	about	about	nc	nc				
english	kent01	0153	eighteen-nineties	eighteen_ninety.PL	nc	nc				
english	kent01	0154	oohh	oohh	nc	nc				
english	kent01	0155	[INT]	[INT]	[INT]	[INT]				
english	kent01	0155	#	#	#nc	#nc				
english	kent01	0155	how	how	nc	nc				
english	kent01	0155	old	old	nc	nc				
english	kent01	0155	were	be.PST	nc	nc				
english	kent01	0155	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0156	hmm	hmm	nc	nc				
english	kent01	0157	[INT]	[INT]	[INT]	[INT]				
english	kent01	0157	#	#	#nc	#nc				
english	kent01	0157	how	how	nc	nc				
english	kent01	0157	old	old	nc	nc				
english	kent01	0157	were	be.PST	nc	nc				
english	kent01	0157	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0157	for	for	nc	nc				
english	kent01	0158	#	#	#nc	#nc				
english	kent01	0158	well	well	nc	nc				
english	kent01	0158	it	3SG.N	nc	nc				
english	kent01	0158	was	be.PST.3SG	nc	nc				
english	kent01	0158	#	#	##	##				
english	kent01	0158	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0158	was	be.PST.1SG	cop	cop				
english	kent01	0158	about	about	other	other				
english	kent01	0158	fifteen	fifteen	other:pred	other		pred		
english	kent01	0159	see	see.PRS	nc	nc				
english	kent01	0160	[INT]	[INT]	[INT]	[INT]				
english	kent01	0160	#	#	#nc	#nc				
english	kent01	0160	what	what	nc	nc				
english	kent01	0160	had	have.PST	nc	nc				
english	kent01	0160	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0160	had	have.PST	nc	nc				
english	kent01	0160	for	for	nc	nc				
english	kent01	0160	his	3SG.M.POSS	nc_pro.h	nc_pro	h		2003	
english	kent01	0160	horse premise-s	horse_premise-PL	nc_np	nc_np			2179	bridging
english	kent01	0160	before	before	nc	nc				
english	kent01	0160	you	2SG	nc	nc				
english	kent01	0160	know	know.PRS	nc	nc				
english	kent01	0161	hmm	hmm	nc	nc				
english	kent01	0162	[INT]	[INT]	[INT]	[INT]				
english	kent01	0162	#	#	#nc	#nc				
english	kent01	0162	what	what	nc	nc				
english	kent01	0162	had	have.PST	nc	nc				
english	kent01	0162	he	3SG.M	nc	nc				
english	kent01	0162	what	what	nc	nc				
english	kent01	0162	='d	=have.PST	nc	nc				
english	kent01	0162	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0162	start-ed	start-PTCP.PST	nc	nc				
english	kent01	0162	off	off	nc	nc				
english	kent01	0162	as	as	nc	nc				
english	kent01	0162	as	as	nc	nc				
english	kent01	0162	a	a	nc	nc				
english	kent01	0162	horse buyer	horse_buyer	nc	nc				
english	kent01	0163	#	#	##	##				
english	kent01	0163	oh	oh	other	other				
english	kent01	0163	he	3SG.M	nc	nc				
english	kent01	0163	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0163	had	have.PST	v:pred	v		pred		
english	kent01	0163	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0163	little	little	ln_adj	ln_adj				
english	kent01	0163	m--	NC	nc	nc				
english	kent01	0163	ponies	pony.PL	np:p	np		p	2180	new
english	kent01	0163	in	in	adp	adp				
english	kent01	0163	the	the	ln_det	ln_det				
english	kent01	0163	other	other	ln_adj	ln_adj				
english	kent01	0163	place	place	np:l	np		l	2181	new
english	kent01	0163	over	over	rn_adp	rn_adp				
english	kent01	0163	the	the	rn_det	rn_det				
english	kent01	0163	road	road	rn_np	rn_np			2125	
english	kent01	0163	#	#	##	##				
english	kent01	0163	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0163	had	have.PST	v:pred	v		pred		
english	kent01	0163	two	two	ln_num	ln_num				
english	kent01	0163	place-s	place-PL	np:p	np		p	2182	bridging
english	kent01	0163	here	here	other:l	other		l	2020	
english	kent01	0164	#	#	##neg	##neg				
english	kent01	0164	and	and	other	other				
english	kent01	0164	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0164	the	the	ln_det	ln_det				
english	kent01	0164	house	house	np:dt	np		dt	2015	
english	kent01	0164	#	#	#rc	#rc				
english	kent01	0164	we	1PL	pro.1:s	pro	1	s	2014	
english	kent01	0164	come	come.PST	v:pred	v		pred		
english	kent01	0164	in	in	adp	adp				
english	kent01	0164	0	0_hourse	rel_0:g	rel_0		g	2015	
english	kent01	0164	first	first	other	other				
english	kent01	0164	%	%	%	%				
english	kent01	0164	we	1PL	pro.1:s	pro	1	s	2014	
english	kent01	0164	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0164	stop	stop.INF	v:pred	v		pred		
english	kent01	0164	long	long	other	other				
english	kent01	0165	#	#	##neg	##neg				
english	kent01	0165	0	0_house	0.h:s	0	h	s	2015	
english	kent01	0165	wadn't	be.PST.3SG.NEG	cop	cop				
english	kent01	0165	big	big	other:pred	other		pred		
english	kent01	0165	#	#	##	##				
english	kent01	0165	it	3SG.N	pro:s	pro		s	2015	
english	kent01	0165	was	be.PST.3SG	cop	cop				
english	kent01	0165	only	only	other	other				
english	kent01	0165	about	about	ln	ln				
english	kent01	0165	acre	acre	np:pred	np		pred		
english	kent01	0165	of	of	rn	rn				
english	kent01	0165	ground	ground	rn_np	rn_np				
english	kent01	0165	#	#	##	##				
english	kent01	0165	and	and	other	other				
english	kent01	0165	then	then	other	other				
english	kent01	0165	we	1PL	pro.1:a	pro	1	a	2014	
english	kent01	0165	bought	buy.PST	v:pred	v		pred		
english	kent01	0165	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0165	farm	farm	np:p	np		p	2044	
english	kent01	0165	#	#	##	##				
english	kent01	0165	0	0_farm	0:s	0		s	2044	
english	kent01	0165	were	be.PST	cop	cop				
english	kent01	0165	up	up	other:pred	other		pred		
english	kent01	0165	for	for	other	other				
english	kent01	0165	sale	sale	other	other				
english	kent01	0165	#	#	##	##				
english	kent01	0165	and	and	other	other				
english	kent01	0165	we	1PL	pro.1:s	pro	1	s	2014	
english	kent01	0165	went	go.PST	v:pred	v		pred		
english	kent01	0165	over	over	adp	adp				
english	kent01	0165	there	there	other:g	other		g	2020	
english	kent01	0165	#	#	##	##				
english	kent01	0165	0	0_we	0.1:a	0	1	a	2014	
english	kent01	0165	bought	buy.PST	v:pred	v		pred		
english	kent01	0165	that	DIST.SG	dem_pro:p	dem_pro		p	2015	
english	kent01	0166	[INT]	[INT]	[INT]	[INT]				
english	kent01	0166	#	#	#nc	#nc				
english	kent01	0166	where	where	nc	nc				
english	kent01	0166	did	do.PST	nc	nc				
english	kent01	0166	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0166	get	get.INF	nc	nc				
english	kent01	0166	the	the	nc	nc				
english	kent01	0166	money	money	nc_np	nc_np			2183	bridging
english	kent01	0166	from	from	nc	nc				
english	kent01	0166	#	#	#nc	#nc				
english	kent01	0166	if	if	nc	nc				
english	kent01	0166	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0166	='d	=have.PST	nc	nc				
english	kent01	0166	only	only	nc	nc				
english	kent01	0166	been	be.PTCP.PST	nc	nc				
english	kent01	0166	a	a	nc	nc				
english	kent01	0166	a	a	nc	nc				
english	kent01	0166	shepherd	shepherd	nc	nc				
english	kent01	0166	did	do.PST	nc	nc				
english	kent01	0166	he	3SG.M	nc	nc				
english	kent01	0167	#	#	##	##				
english	kent01	0167	where	where	intrg_other:l	intrg_other		l		
english	kent01	0167	did	do.PST	lv_aux	lv_aux				
english	kent01	0167	they	3PL	pro.h:a	pro	h	a	2184	bridging
english	kent01	0167	get	get.INF	v:pred	v		pred		
english	kent01	0167	it	3SG.N	pro:p	pro		p	2183	
english	kent01	0168	#	#	##	##				
english	kent01	0168	0	0_parents	0.h:a	0	h	a	2184	
english	kent01	0168	saved	save.PST	v:pred	v		pred		
english	kent01	0168	it	3SG.N	pro:p	pro		p	2183	
english	kent01	0169	#	#	##	##				
english	kent01	0169	Mother	Mother	pn_np.h:s	pn_np	h	s	2011	
english	kent01	0169	work-ed	work-PST	nc	nc				
english	kent01	0169	in	in	nc	nc				
english	kent01	0169	eh	eh	nc	nc				
english	kent01	0169	work-ed	work-PST	v:pred	v		pred		
english	kent01	0169	hard	hard	other	other				
english	kent01	0170	#	#	##	##				
english	kent01	0170	and	and	other	other				
english	kent01	0170	we	1PL	pro.1:s	pro	1	s	2014	
english	kent01	0170	all	all	other	other				
english	kent01	0170	work-ed	work-PST	v:pred	v		pred		
english	kent01	0171	#	#	##neg	##neg				
english	kent01	0171	and	and	other	other				
english	kent01	0171	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0171	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0171	spend	spend.INF	v:pred	v		pred		
english	kent01	0171	threepence	threepence	np:p	np		p		
english	kent01	0171	#	#	#ac	#ac				
english	kent01	0171	where	where	other	other				
english	kent01	0171	tuppence	tuppence	np:s	np		s		
english	kent01	0171	would	would	lv_aux	lv_aux				
english	kent01	0171	do	do.INF	v:pred	v		pred		
english	kent01	0171	you	2SG	other	other				
english	kent01	0171	know	know.PRS	other	other				
english	kent01	0172	#	#	##	##				
english	kent01	0172	well	well	other	other				
english	kent01	0172	what	what	intrg_other:obl	intrg_other		obl		
english	kent01	0172	='s	=do.PRS.3SG	=lv_aux	=lv_aux				
english	kent01	0172	your	2SG.POSS	ln_gen_pro.2:poss	ln_gen_pro	2	poss		
english	kent01	0172	farm	farm	np:s	np		s		
english	kent01	0172	cost	cost.INF	v:pred	v		pred		
english	kent01	0173	[INT]	[INT]	[INT]	[INT]				
english	kent01	0173	hmm	hmm	nc	nc				
english	kent01	0174	#	#	##	##				
english	kent01	0174	three	three	ln_num	ln_num				
english	kent01	0174	cottage-s	cottage-PL	np:s	np		s	2185	bridging
english	kent01	0174	and	and	rn	rn				
english	kent01	0174	thirty-one	thirty-one	rn_num	rn_num				
english	kent01	0174	acre-s	acre-PL	rn_np	rn_np				
english	kent01	0174	five-hundred	five-hundred	ln_num	ln_num				
english	kent01	0174	pound	pound	np:pred	np		pred		
english	kent01	0175	#	#	##	##				
english	kent01	0175	how	how	intrg_other:pred_other	intrg_other		pred_other		
english	kent01	0175	was	be.PST.3SG	cop	cop				
english	kent01	0175	that	DIST.SG	dem_pro:s	dem_pro		s		
english	kent01	0175	then	then	other	other				
english	kent01	0176	three	three	other	other				
english	kent01	0176	cottage-s	cottage-PL	np:other	np		other	2185	
english	kent01	0177	#	#	##	##				
english	kent01	0177	oh	oh	other	other				
english	kent01	0177	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0177	think	think.PRS	v:pred	v		pred		
english	kent01	0177	#	#	#cc:p	#cc		p		
english	kent01	0177	the	the	ln_det	ln_det				
english	kent01	0177	bank	bank	np.h:a	np	h	a	2186	new
english	kent01	0177	or	or	rn	rn				
english	kent01	0177	somebody	somebody	rn_indef_other.h	rn_indef_other	h			
english	kent01	0177	help-ed	help-PST	v:pred	v		pred		
english	kent01	0177	mi	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0177	dad	dad	np.h:p	np	h	p	2003	
english	kent01	0177	with	with	adp	adp				
english	kent01	0177	the	the	ln_det	ln_det				
english	kent01	0177	money	money	np:obl	np		obl	2183	
english	kent01	0178	#	#	##	##				
english	kent01	0178	#	#	#cc:p	#cc		p		
english	kent01	0178	Mother	Mother	pn_np.h:a	pn_np	h	a	2011	
english	kent01	0178	did	do.PST	v:pred	v		pred		
english	kent01	0178	0	0_that	0:p	0		p	2187	bridging
english	kent01	0178	%	%	%	%				
english	kent01	0178	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0178	know	know.PRS	v:pred	v		pred		
english	kent01	0178	#	#	##	##				
english	kent01	0178	Mother	Mother	pn_np.h:s	pn_np	h	s	2011	
english	kent01	0178	was	be.PST.3SG	cop	cop				
english	kent01	0178	very	very	other	other				
english	kent01	0178	thrifty	thrifty	other:pred	other		pred		
english	kent01	0179	#	#	##	##				
english	kent01	0179	she	3SG.F	pro.h:a	pro	h	a	2011	
english	kent01	0179	='d	=have.PST	=lv_aux	=lv_aux				
english	kent01	0179	got	get.PTCP.PST	v:pred	v		pred		
english	kent01	0179	quite	quite	ln	ln				
english	kent01	0179	a	a	ln	ln				
english	kent01	0179	bit	bit	ln_detq	ln_detq				
english	kent01	0179	of	of	ln	ln				
english	kent01	0179	money	money	np:p	np		p		
english	kent01	0179	#	#	#nc	#nc				
english	kent01	0179	and	and	nc	nc				
english	kent01	0179	just	just	nc	nc				
english	kent01	0179	like	like	nc	nc				
english	kent01	0179	my	1SG.POSS	nc_pro.1:poss	nc_pro	1	poss	2000	
english	kent01	0179	wife	wife	nc_np.h	nc_np	h		2188	bridging
english	kent01	0179	don't	do.PRS.NEG	nc	nc				
english	kent01	0179	let	let.INF	nc	nc				
english	kent01	0180	#	#	##	##				
english	kent01	0180	he	3SG.M	pro.h:s	pro	h	s		
english	kent01	0180	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0180	just	just	ln	ln				
english	kent01	0180	the	the	ln_det	ln_det				
english	kent01	0180	same	same	np:pred	np		pred		
english	kent01	0181	#	#	##	##				
english	kent01	0181	she	3SG.F	pro.h:s	pro	h	s	2188	
english	kent01	0181	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0181	just	just	ln	ln				
english	kent01	0181	the	the	ln_det	ln_det				
english	kent01	0181	same	same	np:pred	np		pred		
english	kent01	0182	#	#	##	##				
english	kent01	0182	0	0	imp_0.2:a	imp_0	2	a	2001	
english	kent01	0182	put	put.IMP	v:pred	v		pred		
english	kent01	0182	your	2SG.POSS	ln_pro.2:poss	ln_pro	2	poss	2001	
english	kent01	0182	foot	foot	np:p	np		p		
english	kent01	0182	on	on	adp	adp				
english	kent01	0182	that	DIST.SG	dem_pro:g	dem_pro		g		
english	kent01	0183	[INT]	[INT]	[INT]	[INT]				
english	kent01	0183	#	#	#nc	#nc				
english	kent01	0183	how	how	nc	nc				
english	kent01	0183	did	do.PST	nc	nc				
english	kent01	0183	your	2SG.POSS	nc_pro.2	nc_pro	2		2000	
english	kent01	0183	father	father	nc_np.h	nc_np	h		2003	
english	kent01	0183	start	start.INF	nc	nc				
english	kent01	0183	off	off	nc	nc				
english	kent01	0183	deal-ing	deal-PTCP.PRS	nc	nc				
english	kent01	0183	#	#	#nc	#nc				
english	kent01	0183	where	where	nc	nc				
english	kent01	0183	did	do.PST	nc	nc				
english	kent01	0183	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0183	get	get.INF	nc	nc				
english	kent01	0183	the	the	nc	nc				
english	kent01	0183	contact-s	contact-PL	nc	nc			2189	bridging
english	kent01	0183	#	#	#nc	#nc				
english	kent01	0183	do	do.PRS	nc	nc				
english	kent01	0183	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0183	know	know.PRS	nc	nc				
english	kent01	0183	that	DIST.SG	nc	nc				
english	kent01	0184	#	#	#nc	#nc				
english	kent01	0184	in	in	nc	nc				
english	kent01	0184	a	a	nc	nc				
english	kent01	0184	pub	pub	nc	nc				
english	kent01	0185	#	#	##	##				
english	kent01	0185	all	all	ln	ln				
english	kent01	0185	the	the	ln_det	ln_det				
english	kent01	0185	business	business	np:s	np		s	2190	bridging
english	kent01	0185	was	be.PST.3SG	lv_aux	lv_aux				
english	kent01	0185	done	do.PTCP.PST	v:pred	v		pred		
english	kent01	0185	in	in	adp	adp				
english	kent01	0185	pub-s	pub-PL	np:l	np		l	2191	bridging
english	kent01	0186	#	#	##	##				
english	kent01	0186	they	3PL	pro:s	pro		s	2191	
english	kent01	0186	was	be.PST	cop	cop				
english	kent01	0186	open	open	other	other				
english	kent01	0186	all	all	ln	ln				
english	kent01	0186	day	day	np:other	np		other		
english	kent01	0186	you	2SG	other	other				
english	kent01	0186	know	know.PRS	other	other				
english	kent01	0187	#	#	##neg	##neg				
english	kent01	0187	it	3SG.N	pro:s	pro		s	2192	bridging
english	kent01	0187	was	be.PST.3SG	cop	cop				
english	kent01	0187	never	never	other	other				
english	kent01	0187	closed	closed	other:pred	other		pred		
english	kent01	0188	#	#	##	##				
english	kent01	0188	six	six	num_np:other	num_np		other		
english	kent01	0188	o'clock	o'clock	rn	rn				
english	kent01	0188	you	2SG	gen_pro.2:s	gen_pro	2	s		
english	kent01	0188	go	go.PRS	v:pred	v		pred		
english	kent01	0188	in	in	adp	adp				
english	kent01	0188	the	the	ln_det	ln_det				
english	kent01	0188	pub	pub	np:g	np		g	2192	
english	kent01	0188	at	at	adp	adp				
english	kent01	0188	six	six	num_np:other	num_np		other		
english	kent01	0188	o'clock	o'clock	rn	rn				
english	kent01	0188	#	#	##	##				
english	kent01	0188	and	and	other	other				
english	kent01	0188	0	0_you	gen_0.2:a	gen_0	2	a		
english	kent01	0188	get	get.PRS	v:pred	v		pred		
english	kent01	0188	some	some	ln_detq	ln_detq				
english	kent01	0188	beer	beer	np:p	np		p		
english	kent01	0188	#	#	##	##				
english	kent01	0188	and	and	other	other				
english	kent01	0188	you	2SG	gen_pro.2:s	gen_pro	2	s		
english	kent01	0188	go	go.PRS	v:pred	v		pred		
english	kent01	0188	in	in	adp	adp				
english	kent01	0188	there	there	other:g	other		g	2192	
english	kent01	0188	at	at	adp	adp				
english	kent01	0188	twelve	twelve	num_np:other	num_np		other		
english	kent01	0188	o'clock	o'clock	rn	rn				
english	kent01	0188	#	#	##	##				
english	kent01	0188	and	and	other	other				
english	kent01	0188	0	0_you	gen_0.2:a	gen_0	2	a		
english	kent01	0188	get	get.PRS	v:pred	v		pred		
english	kent01	0188	some	some	ln_detq	ln_detq				
english	kent01	0188	beer	beer	np:p	np		p		
english	kent01	0188	#	#	##	##				
english	kent01	0188	nobody	nobody	indef_other.h:a	indef_other	h	a		
english	kent01	0188	said	say.PST	v:pred	v		pred		
english	kent01	0188	nothing	nothing	indef_other:p	indef_other		p		
english	kent01	0188	about	about	adp	adp				
english	kent01	0188	it	3SG.N	pro:obl	pro		obl		
english	kent01	0189	#	#	##	##				
english	kent01	0189	and	and	other	other				
english	kent01	0189	we	1PL	pro.1:s	pro	1	s	2119	
english	kent01	0189	='d	=would	=lv_aux	=lv_aux				
english	kent01	0189	go	go.INF	v:pred	v		pred		
english	kent01	0189	on	on	adp	adp				
english	kent01	0189	a	a	ln_deti	ln_deti				
english	kent01	0189	farm	farm	np:g	np		g	2193	new
english	kent01	0189	#	#	##	##				
english	kent01	0189	and	and	other	other				
english	kent01	0189	perhaps	perhaps	other	other				
english	kent01	0189	somebody	somebody	indef_other.h:s	indef_other	h	s		
english	kent01	0189	s--	NC	nc	nc				
english	kent01	0189	like	like	adp	adp				
english	kent01	0189	the	the	ln_det	ln_det				
english	kent01	0189	grapevine	grapevine	np:other	np		other		
english	kent01	0189	would	would	lv_aux	lv_aux				
english	kent01	0189	come	come.INF	v:pred	v		pred		
english	kent01	0189	to	to	adp	adp				
english	kent01	0189	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0189	father	father	np.h:g	np	h	g	2003	
english	kent01	0189	#	#	#cc:other	#cc		other		
english	kent01	0189	that	that	other	other				
english	kent01	0189	John Norman	John_Norman	pn_np.h:a	pn_np	h	a	2194	new
english	kent01	0189	had	have.PST	lv_aux	lv_aux				
english	kent01	0189	got	get.PTCP.PST	v:pred	v		pred		
english	kent01	0189	a	a	ln_deti	ln_deti				
english	kent01	0189	pony	pony	np:p	np		p	2195	new
english	kent01	0189	for	for	adp	adp				
english	kent01	0189	sale	sale	np:other	np		other		
english	kent01	0190	#	#	##	##				
english	kent01	0190	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0190	father	father	np.h:s	np	h	s	2003	
english	kent01	0190	='d	=would	=lv_aux	=lv_aux				
english	kent01	0190	slip	slip.INF	v:pred	v		pred		
english	kent01	0190	up	up	rv	rv				
english	kent01	0190	#	#	##	##				
english	kent01	0190	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0190	get	get.INF	v:pred	v		pred		
english	kent01	0190	a	a	ln_deti	ln_deti				
english	kent01	0190	pony	pony	np:p	np		p	2196	
english	kent01	0190	in	in	rv	rv				
english	kent01	0190	#	#	##	##				
english	kent01	0190	0	0_father	0.h:s	0	h	s	2003	
english	kent01	0190	go	go.INF	v:pred	v		pred		
english	kent01	0190	off	off	rv	rv				
english	kent01	0190	#	#	##	##				
english	kent01	0190	and	and	other	other				
english	kent01	0190	0	0_father	0.h:s	0	h	s	2003	
english	kent01	0190	have	have.INF	v:pred	v		pred		
english	kent01	0190	a	a	other	other				
english	kent01	0190	look	look	other:lvc	other		lvc		
english	kent01	0190	at	at	adp	adp				
english	kent01	0190	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0190	pony	pony	np:obl	np		obl	2195	
english	kent01	0191	#	#	##ds	##ds				
english	kent01	0191	0	0_John	0.2:a	0	2	a	2194	
english	kent01	0191	got	got.PTCP.PST	v:pred	v		pred		
english	kent01	0191	a	a	ln_deti	ln_deti				
english	kent01	0191	pony	pony	np:p	np		p	2195	
english	kent01	0191	for	for	adp	adp				
english	kent01	0191	sale	sale	np:other	np		other		
english	kent01	0191	John	John	np.h:voc	np	h	voc	2194	
english	kent01	0192	#	#	##	##				
english	kent01	0192	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2194	
english	kent01	0192	said	say.PST	v:pred	v		pred		
english	kent01	0192	yep	yep	other	other				
english	kent01	0193	#	#	##	##				
english	kent01	0193	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2194	
english	kent01	0193	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0193	#	#	##ds	##ds				
english	kent01	0193	0	0_father	imp_0.2:s	imp_0	2	s	2003	
english	kent01	0193	have	have.IMP	v:pred	v		pred		
english	kent01	0193	a	a	other	other				
english	kent01	0193	look	look	other:lvc	other		lvc		
english	kent01	0193	at	at	adp	adp				
english	kent01	0193	him	3SG.M.OBL	pro:obl	pro		obl	2195	
english	kent01	0193	#	#	##ds	##ds				
english	kent01	0193	0	0_father	imp_0.2:a	imp_0	2	a	2003	
english	kent01	0193	try	try.IMP	v:pred	v		pred		
english	kent01	0193	him	3SG.M.OBL	pro:p	pro		p	2195	
english	kent01	0194	#	#	##	##				
english	kent01	0194	0	0_John	0.2:a	0	2	a	2194	
english	kent01	0194	warrant	warrant.PRS	v:pred	v		pred		
english	kent01	0194	him	3SG.M.OBL	pro:p	pro		p	2195	
english	kent01	0195	yeah	yeah	other	other				
english	kent01	0196	every	every	other	other				
english	kent01	0196	way	way	other	other				
english	kent01	0197	#	#	##	##				
english	kent01	0197	#	#	#ac	#ac				
english	kent01	0197	if	if	adp	adp				
english	kent01	0197	Father	Father	pn_np.h:a	pn_np	h	a	2003	
english	kent01	0197	know-ed	know-PST	v:pred	v		pred		
english	kent01	0197	the	the	ln_det	ln_det				
english	kent01	0197	man	man	np.h:p	np	h	p	2197	bridging
english	kent01	0197	%	%	%	%				
english	kent01	0197	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0197	='d	=would	=lv_aux	=lv_aux				
english	kent01	0197	know	know.INF	v:pred	v		pred		
english	kent01	0197	#	#	#cc:p	#cc		p		
english	kent01	0197	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2197	
english	kent01	0197	warranty	warranty	np:s	np		s	2198	bridging
english	kent01	0197	was	be.PST.3SG	cop	cop				
english	kent01	0197	good	good	other:pred	other		pred		
english	kent01	0198	#	#	##	##				
english	kent01	0198	if	if	nc	nc				
english	kent01	0198	he	3SG.M	nc	nc				
english	kent01	0198	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0198	='d	=would	=lv_aux	=lv_aux				
english	kent01	0198	know	know.INF	v:pred	v		pred		
english	kent01	0198	#	#	#cc.neg:p	#cc.neg		p		
english	kent01	0198	if	if	other	other				
english	kent01	0198	it	3SG.N	pro:s	pro		s	2198	
english	kent01	0198	wadn't	be.PST.3SG.NEG	cop	cop				
english	kent01	0198	0	0	0:pred	0		pred		
english	kent01	0198	too	too	other	other				
english	kent01	0199	#	#	##ds	##ds				
english	kent01	0199	well	well	other	other				
english	kent01	0199	0	0_John	imp_0.2:a	imp_0	2	a	2194	
english	kent01	0199	put	put.IMP	v:pred	v		pred		
english	kent01	0199	him	3SG.M.OBL	pro:p	pro		p	2195	
english	kent01	0199	in	in	rv	rv				
english	kent01	0199	#	#	#ds	#ds				
english	kent01	0199	0	0_we	f0.1:a	f0	1	a	2199	bridging
english	kent01	0199	let's	HORT	lv_aux	lv_aux				
english	kent01	0199	try	try.INF	vother:pred	vother		pred		
english	kent01	0199	him	3SG.M.OBL	pro:p	pro		p	2195	
english	kent01	0200	#	#	##	##				
english	kent01	0200	so	so	other	other				
english	kent01	0200	they	3PL	pro.h:a	pro	h	a	2199	
english	kent01	0200	='d	=would	=lv_aux	=lv_aux				
english	kent01	0200	put	put.INF	v:pred	v		pred		
english	kent01	0200	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0200	pony	pony	np:p	np		p	2195	
english	kent01	0200	in	in	adp	adp				
english	kent01	0200	the	the	ln_det	ln_det				
english	kent01	0200	harness	harness	np:g	np		g	2200	bridging
english	kent01	0200	#	#	##	##				
english	kent01	0200	0	0_they	0.h:a	0	h	a	2199	
english	kent01	0200	try	try.INF	v:pred	v		pred		
english	kent01	0200	him	3SG.M.OBL	pro:p	pro		p	2195	
english	kent01	0200	#	#	##	##				
english	kent01	0200	0	0_they	0.h:a	0	h	a	2199	
english	kent01	0200	drive	drive.INF	v:pred	v		pred		
english	kent01	0200	him	3SG.M.OBL	pro:p	pro		p	2195	
english	kent01	0200	up	up	adp	adp				
english	kent01	0200	and	and	other	other				
english	kent01	0200	down	down	adp	adp				
english	kent01	0200	the	the	ln_det	ln_det				
english	kent01	0200	road	road	np:other	np		other		
english	kent01	0201	#	#	##	##				
english	kent01	0201	and	and	other	other				
english	kent01	0201	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0201	father	father	np.h:a	np	h	a	2003	
english	kent01	0201	='d	=would	=lv_aux	=lv_aux				
english	kent01	0201	have	have.INF	v:pred	v		pred		
english	kent01	0201	all	all	ln	ln				
english	kent01	0201	manner-s	manner-PL	np:p	np		p		
english	kent01	0201	of	of	rn	rn				
english	kent01	0201	trick-s	trick-PL	rn_np	rn_np				
english	kent01	0202	#	#	##	##				
english	kent01	0202	#	#	#ac	#ac				
english	kent01	0202	when	when	nc	nc				
english	kent01	0202	he	3SG.M	nc	nc				
english	kent01	0202	g--	NC	nc	nc				
english	kent01	0202	as	as	adp	adp				
english	kent01	0202	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0202	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0202	#	#	##ds	##ds				
english	kent01	0202	0	0	imp_0.2:a	imp_0	2	a	2194	
english	kent01	0202	drive	drive.IMP	v:pred	v		pred		
english	kent01	0202	him	3SG.M.OBL	pro:p	pro		p	2195	
english	kent01	0202	by	by	adp	adp				
english	kent01	0202	me	1SG.OBL	pro.1:obl	pro	1	obl	2003	
english	kent01	0202	%	%	%	%				
english	kent01	0202	%	%	%	%				
english	kent01	0202	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0202	whip	whip.INF	v:pred	v		pred		
english	kent01	0202	a	a	ln_deti	ln_deti				
english	kent01	0202	white	white	ln_adj	ln_adj				
english	kent01	0202	handkerchief	handkerchief	np:p	np		p	2201	new
english	kent01	0202	out	out	rv	rv				
english	kent01	0202	#	#	##	##				
english	kent01	0202	and	and	other	other				
english	kent01	0202	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0202	shake	shake.INF	v:pred	v		pred		
english	kent01	0202	it	3SG.N	pro:p	pro		p	2201	
english	kent01	0202	#	#	##neg	##neg				
english	kent01	0202	and	and	other	other				
english	kent01	0202	#	#	#ac.neg	#ac.neg				
english	kent01	0202	if	if	adp	adp				
english	kent01	0202	the	the	ln_det	ln_det				
english	kent01	0202	pony	pony	np:s	np		s	2195	
english	kent01	0202	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0202	take	take.INF	v:pred	v		pred		
english	kent01	0202	notice	notice	other:lvc	other		lvc		
english	kent01	0202	%	%	%	%				
english	kent01	0202	he	3SG.M	pro:s	pro		s	2195	
english	kent01	0202	wadn't	be.PST.3SG.NEG	cop	cop				
english	kent01	0202	a	a	ln_deti	ln_deti				
english	kent01	0202	shyer	shyer	np:pred	np		pred		
english	kent01	0203	see	see.PRS	other	other				
english	kent01	0204	#	#	##	##				
english	kent01	0204	and	and	other	other				
english	kent01	0204	eh	eh	nc	nc				
english	kent01	0204	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0204	said	say.PST	v:pred	v		pred		
english	kent01	0204	#	#	##ds	##ds				
english	kent01	0204	0	0	imp_0.2:a	imp_0	2	a	2194	
english	kent01	0204	drive	drive.IMP	v:pred	v		pred		
english	kent01	0204	him	3SG.M.OBL	pro:p	pro		p	2195	
english	kent01	0204	by	by	adp	adp				
english	kent01	0204	his	3SG.M.POSS	ln_pro:poss	ln_pro		poss	2195	
english	kent01	0204	farm	farm	np:obl	np		obl	2202	bridging
english	kent01	0204	his	3SG.M.POSS	rn_pro:poss	rn_pro		poss	2195	
english	kent01	0204	house	house	np:appos	np		appos		
english	kent01	0204	#	#	#ac	#ac				
english	kent01	0204	where	where	other	other				
english	kent01	0204	he	3SG.M	pro:s	pro		s	2195	
english	kent01	0204	='d	=have.PST	=lv_aux	=lv_aux				
english	kent01	0204	stopped	stop.PTCP.PST	v:pred	v		pred		
english	kent01	0205	#	#	##	##				
english	kent01	0205	now	now	other	other				
english	kent01	0205	this	PROX.SG	other	other				
english	kent01	0205	in	in	adp	adp				
english	kent01	0205	nine	nine	ln_num	ln_num				
english	kent01	0205	horse-s	horse-PL	np:other	np		other	2203	bridging
english	kent01	0205	out	out	rn_adp	rn_adp				
english	kent01	0205	of	of	rn	rn				
english	kent01	0205	ten	ten	rn	rn				
english	kent01	0205	#	#	#ac	#ac				
english	kent01	0205	if	if	adp	adp				
english	kent01	0205	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0205	='d	=would	=lv_aux	=lv_aux				
english	kent01	0205	try	try.INF	v:pred	v		pred		
english	kent01	0205	#	#	#cc:p	#cc		p		
english	kent01	0205	0	0_you	gen_f0.2:a	gen_f0	2	a		
english	kent01	0205	to	to	lv	lv				
english	kent01	0205	drive	drive.INF	vother:pred	vother		pred		
english	kent01	0205	them	3PL.OBL	pro:p	pro		p	2203	
english	kent01	0205	by	by	rv	rv				
english	kent01	0205	#	#	#ac	#ac				
english	kent01	0205	where	where	intrg_other:pred_l	intrg_other		pred_l		
english	kent01	0205	they	3PL	nc	nc				
english	kent01	0205	st--	NC	nc	nc				
english	kent01	0205	their	3PL.POSS	ln_pro:poss	ln_pro		poss	2203	
english	kent01	0205	home	home	np:s	np		s	2204	bridging
english	kent01	0205	was	be.PST.3SG	cop	cop				
english	kent01	0205	#	#	#ac	#ac				
english	kent01	0205	where	where	intrg_other:pred_l	intrg_other		pred_l		
english	kent01	0205	they	3PL	pro:s	pro		s	2203	
english	kent01	0205	='d	=have.PST	=lv_aux	=lv_aux				
english	kent01	0205	been	be.PTCP.PST	cop	cop				
english	kent01	0205	%	%	%	%				
english	kent01	0205	they	3PL	pro:s	pro		s	2203	
english	kent01	0205	='d	=would	=lv_aux	=lv_aux				
english	kent01	0205	pull	pull.INF	v:pred	v		pred		
english	kent01	0205	in	in	rv	rv				
english	kent01	0205	you	2SG	other	other				
english	kent01	0205	know	know.PRS	other	other				
english	kent01	0205	#	#	##	##				
english	kent01	0205	0	0_horses	0:a	0		a	2203	
english	kent01	0205	try	try.INF	v:pred	v		pred		
english	kent01	0205	#	#	#cc:p	#cc		p		
english	kent01	0205	0	0_horses	f0:s	f0		s	2203	
english	kent01	0205	to	to	lv	lv				
english	kent01	0205	go	go.INF	vother:pred	vother		pred		
english	kent01	0205	in	in	adp	adp				
english	kent01	0205	the	the	ln_det	ln_det				
english	kent01	0205	yard	yard	np:g	np		g	2205	bridging
english	kent01	0206	#	#	##	##				
english	kent01	0206	and	and	other	other				
english	kent01	0206	eh	eh	other	other				
english	kent01	0206	but	but	other	other				
english	kent01	0206	#	#	#ac	#ac				
english	kent01	0206	if	if	adp	adp				
english	kent01	0206	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0206	just	just	other	other				
english	kent01	0206	touch	touch.PRS	v:pred	v		pred		
english	kent01	0206	='em	=3PL.OBL	=pro:p	=pro		p	2203	
english	kent01	0206	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0206	side	side	np:l	np		l	2206	bridging
english	kent01	0206	with	with	adp	adp				
english	kent01	0206	the	the	ln_det	ln_det				
english	kent01	0206	whip	whip	np:obl	np		obl	2207	bridging
english	kent01	0206	gently	gently	other	other				
english	kent01	0206	#	#	##	##				
english	kent01	0206	0	0_you	gen_0.2:a	gen_0	2	a	2000	
english	kent01	0206	had	have.PST	v:pred	v		pred		
english	kent01	0206	a	a	ln_deti	ln_deti				
english	kent01	0206	long	long	ln_adj	ln_adj				
english	kent01	0206	whip	whip	np:p	np		p	2208	bridging
english	kent01	0206	#	#	##	##				
english	kent01	0206	0	0_you	gen_0.2:a	gen_0	2	a	2000	
english	kent01	0206	always	always	other	other				
english	kent01	0206	had	have.PST	v:pred	v		pred		
english	kent01	0206	a	a	ln_deti	ln_deti				
english	kent01	0206	whip	whip	np:p	np		p	2208	
english	kent01	0206	#	#	#ac	#ac				
english	kent01	0206	0	0_you	gen_0.2:a	gen_0	2	a	2000	
english	kent01	0206	just	just	other	other				
english	kent01	0206	touch	touch.PRS	v:pred	v		pred		
english	kent01	0206	='em	=3PL.OBL	=pro:p	=pro		p	2203	
english	kent01	0206	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0206	side	side	np:l	np		l	2206	
english	kent01	0206	%	%	%	%				
english	kent01	0206	they	3PL	pro:s	pro		s	2203	
english	kent01	0206	go	go.PRS	v:pred	v		pred		
english	kent01	0206	straight	straight	other	other				
english	kent01	0206	on	on	rv	rv				
english	kent01	0207	#	#	##	##				
english	kent01	0207	they	3PL	pro:s	pro		s	2203	
english	kent01	0207	know-ed	know-PST	v:pred	v		pred		
english	kent01	0208	#	#	##	##				
english	kent01	0208	#	#	#ac.neg	#ac.neg				
english	kent01	0208	if	if	adp	adp				
english	kent01	0208	they	3PL	pro:s	pro		s	2203	
english	kent01	0208	did-n't	do.PST-NEG	v:pred	v		pred		
english	kent01	0208	%	%	%	%				
english	kent01	0208	they	3PL	pro:a	pro		a	2203	
english	kent01	0208	='d	=would	=lv_aux	=lv_aux				
english	kent01	0208	have	have.INF	lv_aux	lv_aux				
english	kent01	0208	it	3SG.N	pro:p	pro		p	2207	
english	kent01	0208	#	#	#cc:obl	#cc		obl		
english	kent01	0208	0	0	f0:s	f0		s	2207	
english	kent01	0208	slash-ed	slash-PTCP.PST	vother:pred	vother		pred		
english	kent01	0208	up	up	adp	adp				
english	kent01	0208	their	3PL.POSS	ln_pro:poss	ln_pro		poss	2203	
english	kent01	0208	rib-s	rib-PL	np:l	np		l	2209	bridging
english	kent01	0208	quick	quick	other	other				
english	kent01	0209	#	#	##	##				
english	kent01	0209	and	and	other	other				
english	kent01	0209	the	the	ln_det	ln_det				
english	kent01	0209	horse-s	horse-PL	np:s	np		s	2210	bridging
english	kent01	0209	were	be.PST	cop	cop				
english	kent01	0209	very	very	other	other				
english	kent01	0209	sensitive	sensitive	other:pred	other		pred		
english	kent01	0210	#	#	##	##				
english	kent01	0210	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0210	father	father	np.h:dt_a	np	h	dt_a	2003	
english	kent01	0210	then	then	other	other				
english	kent01	0210	he	3SG.M	nc	nc				
english	kent01	0210	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0210	bought	buy.PST	v:pred	v		pred		
english	kent01	0210	a	a	ln_deti	ln_deti				
english	kent01	0210	waggonette	waggonette	np:p	np		p	2211	new
english	kent01	0211	#	#	##	##				
english	kent01	0211	you	2SG	pro.2:a	pro	2	a	2001	
english	kent01	0211	know	know.PRS	v:pred	v		pred		
english	kent01	0211	#	#	#cc:p	#cc		p		
english	kent01	0211	what	what	intrg_other:pred	intrg_other		pred		
english	kent01	0211	that	DIST.SG	dem_pro:s	dem_pro		s	2211	
english	kent01	0211	is	be.PRS.3SG	cop	cop				
english	kent01	0212	#	#	#nc	#nc				
english	kent01	0212	a	a	nc	nc				
english	kent01	0212	four-wheeled	four_wheeled	nc	nc				
english	kent01	0212	trap	trap	nc	nc				
english	kent01	0212	for	for	nc	nc				
english	kent01	0212	taking	take.PTCP.PRS	nc	nc				
english	kent01	0212	people	people	nc	nc				
english	kent01	0212	to	to	nc	nc				
english	kent01	0212	station	station	nc_np	nc_np			2212	new
english	kent01	0213	#	#	##	##				
english	kent01	0213	and	and	other	other				
english	kent01	0213	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0213	had	have.PST	v:pred	v		pred		
english	kent01	0213	quite	quite	ln	ln				
english	kent01	0213	a	a	ln_deti	ln_deti				
english	kent01	0213	business	business	np:p	np		p	2213	bridging
english	kent01	0214	#	#	##	##				
english	kent01	0214	people	people	nc	nc				
english	kent01	0214	would	would	nc	nc				
english	kent01	0214	ge--	NC	nc	nc				
english	kent01	0214	the	the	ln_det	ln_det				
english	kent01	0214	old	old	ln_adj	ln_adj				
english	kent01	0214	parson	parson	np.h:a	np	h	a	2214	new
english	kent01	0214	always	always	other	other				
english	kent01	0214	used	used	lv_aux	lv_aux				
english	kent01	0214	to	to	lv	lv				
english	kent01	0214	get	get.INF	v:pred	v		pred		
english	kent01	0214	us	1PL.OBL	pro.1:p	pro	1	p	2119	
english	kent01	0214	#	#	#cc:obl	#cc		obl		
english	kent01	0214	0	0_we	f0.1:a	f0	1	a	2119	
english	kent01	0214	to	to	lv	lv				
english	kent01	0214	take	take.INF	vother:pred	vother		pred		
english	kent01	0214	him	3SG.M.OBL	pro.h:p	pro	h	p	2214	
english	kent01	0214	out	out	adp	adp				
english	kent01	0214	to	to	adp	adp				
english	kent01	0214	some	some	ln_deti	ln_deti				
english	kent01	0214	other	other	ln_adj	ln_adj				
english	kent01	0214	parson	parson	np.h:g	np	h	g	2215	new
english	kent01	0214	house	house	nc	nc				
english	kent01	0214	to	to	adp	adp				
english	kent01	0214	tea	tea	np:other	np		other		
english	kent01	0214	and	and	rn	rn				
english	kent01	0214	lunch	lunch	rn_np	rn_np				
english	kent01	0214	and	and	rn	rn				
english	kent01	0214	that	DIST.SG	rn_dem_pro	rn_dem_pro				
english	kent01	0215	#	#	##	##				
english	kent01	0215	and	and	other	other				
english	kent01	0215	I	1SG	nc	nc				
english	kent01	0215	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0215	used	used	lv_aux	lv_aux				
english	kent01	0215	to	to	lv	lv				
english	kent01	0215	drive	drive.INF	v:pred	v		pred		
english	kent01	0215	him	3SG.M.OBL	pro.h:p	pro	h	p	2214	
english	kent01	0215	#	#	##	##				
english	kent01	0215	0	0_I	0.1:a	0	1	a	2000	
english	kent01	0215	just	just	other	other				
english	kent01	0215	dress	dress.INF	v:pred	v		pred		
english	kent01	0215	miself	1SG.REFL	refl.1:p	refl	1	p	2000	
english	kent01	0215	up	up	rv	rv				
english	kent01	0215	#	#	##	##				
english	kent01	0215	and	and	other	other				
english	kent01	0215	0	0_I	0.1:a	0	1	a	2000	
english	kent01	0215	drive	drive.INF	v:pred	v		pred		
english	kent01	0215	him	3SG.M.OBL	pro.h:p	pro	h	p	2214	
english	kent01	0215	there	there	other:g	other		g	2215	
english	kent01	0215	#	#	##	##				
english	kent01	0215	and	and	other	other				
english	kent01	0215	perhaps	perhaps	other	other				
english	kent01	0215	0	0_I	0.1:a	0	1	a	2000	
english	kent01	0215	earn	earn.INF	v:pred	v		pred		
english	kent01	0215	ten	ten	ln_num	ln_num				
english	kent01	0215	bob	bob	np:p	np		p		
english	kent01	0216	#	#	##	##				
english	kent01	0216	we	1PL	pro.1:a	pro	1	a	2000	
english	kent01	0216	used	used	lv_aux	lv_aux				
english	kent01	0216	take	take.INF	v:pred	v		pred		
english	kent01	0216	people	people	np.h:p	np	h	p	2216	new
english	kent01	0216	to	to	adp	adp				
english	kent01	0216	Chilham Station	Chilham_Station	pn_np:g	pn_np		g	2217	new
english	kent01	0216	from	from	adp	adp				
english	kent01	0216	Molash	Molash	pn_np:obl	pn_np		obl	2016	
english	kent01	0216	for	for	adp	adp				
english	kent01	0216	half	half	ln	ln				
english	kent01	0216	a	a	ln	ln				
english	kent01	0216	crown	crown	np:other	np		other		
english	kent01	0217	#	#	##	##				
english	kent01	0217	0	0_we	0.1:a	0	1	a	2119	
english	kent01	0217	take	take.INF	v:pred	v		pred		
english	kent01	0217	='em	=3PL.OBL	=pro.h:p	=pro	h	p	2216	
english	kent01	0217	down	down	adp	adp				
english	kent01	0217	there	there	other:g	other		g	2217	
english	kent01	0218	#	#	##	##				
english	kent01	0218	or	or	other	other				
english	kent01	0218	0	0_we	0.1:s	0	1	s	2119	
english	kent01	0218	go	go.INF	v:pred	v		pred		
english	kent01	0218	#	#	##	##				
english	kent01	0218	and	and	other	other				
english	kent01	0218	0	0_we	0.1:a	0	1	a	2119	
english	kent01	0218	fetch	fetch.INF	v:pred	v		pred		
english	kent01	0218	them	3PL.OBL	pro.h:p	pro	h	p	2216	
english	kent01	0218	back	back	rv	rv				
english	kent01	0218	for	for	adp	adp				
english	kent01	0218	half	half	ln	ln				
english	kent01	0218	a	a	ln	ln				
english	kent01	0218	crown	crown	np:other	np		other		
english	kent01	0219	#	#	##	##				
english	kent01	0219	and	and	other	other				
english	kent01	0219	gradually	gradually	other	other				
english	kent01	0219	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0219	built	build.PST	v:pred	v		pred		
english	kent01	0219	a	a	ln_deti	ln_deti				
english	kent01	0219	business	business	np:p	np		p	2213	
english	kent01	0219	up	up	rv	rv				
english	kent01	0219	#	#	##	##				
english	kent01	0219	and	and	other	other				
english	kent01	0219	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0219	had	have.PST	v:pred	v		pred		
english	kent01	0219	quite	quite	ln	ln				
english	kent01	0219	a	a	ln_deti	ln_deti				
english	kent01	0219	smart	smart	ln_adj	ln_adj				
english	kent01	0219	turnout	turnout	np:p	np		p	2218	bridging
english	kent01	0219	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0219	father	father	np.h:dt_a	np	h	dt_a	2003	
english	kent01	0219	did	do.PST	other	other				
english	kent01	0220	#	#	##	##				
english	kent01	0220	and	and	other	other				
english	kent01	0220	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0220	used	used	lv_aux	lv_aux				
english	kent01	0220	to	to	lv	lv				
english	kent01	0220	look	look	v:pred	v		pred		
english	kent01	0220	after	after	rv	rv				
english	kent01	0220	that	DIST.SG	dem_pro:p	dem_pro		p	2213	
english	kent01	0220	as	as	other	other				
english	kent01	0220	well	well	other	other				
english	kent01	0220	#	#	#ac	#ac				
english	kent01	0220	when	when	adp	adp				
english	kent01	0220	he	3SG.M	pro.h:s	pro	h	s	2003	
english	kent01	0220	was	be.PST.3SG	cop	cop				
english	kent01	0220	gone	go.PTCP.PST	other:pred	other		pred		
english	kent01	0221	#	#	##	##				
english	kent01	0221	well	well	other	other				
english	kent01	0221	then	then	other	other				
english	kent01	0221	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0221	used	used	lv_aux	lv_aux				
english	kent01	0221	to	to	lv	lv				
english	kent01	0221	keep	keep.INF	v:pred	v		pred		
english	kent01	0221	a	a	ln_deti	ln_deti				
english	kent01	0221	grey	grey	ln_adj	ln_adj				
english	kent01	0221	pony	pony	np:p	np		p	2219	new
english	kent01	0221	#	#	##	##				
english	kent01	0221	our	1PL.POSS	ln_pro.1:poss	ln_pro	1	poss	2119	
english	kent01	0221	Jimmy	Jimmy	pn_np:other	pn_np		other	2219	
english	kent01	0221	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0221	used	used	lv_aux	lv_aux				
english	kent01	0221	to	to	lv	lv				
english	kent01	0221	call	call.INF	v:pred	v		pred		
english	kent01	0221	him	3SG.M.OBL	pro:p	pro		p	2219	
english	kent01	0221	#	#	##	##				
english	kent01	0221	he	3SG.M	pro:s	pro		s	2219	
english	kent01	0221	was	be.PST.3SG	cop	cop				
english	kent01	0221	a	a	nc	nc				
english	kent01	0221	a	a	ln_deti	ln_deti				
english	kent01	0221	pony	pony	np:pred	np		pred		
english	kent01	0221	#	#	#rc	#rc				
english	kent01	0221	0	0_Jimmy	rel_0:p	rel_0		p	2219	
english	kent01	0221	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0221	used	used	lv_aux	lv_aux				
english	kent01	0221	to	to	lv	lv				
english	kent01	0221	use	use.INF	v:pred	v		pred		
english	kent01	0221	for	for	adp	adp				
english	kent01	0221	the	the	ln_det	ln_det				
english	kent01	0221	wedding-s	wedding-PL	np:other	np		other		
english	kent01	0222	#	#	##	##				
english	kent01	0222	0	0_we	0.1:a	0	1	a	2119	
english	kent01	0222	take	take.INF	v:pred	v		pred		
english	kent01	0222	people	people	np.h:p	np	h	p	2220	bridging
english	kent01	0222	to	to	adp	adp				
english	kent01	0222	rr--	NC	nc	nc				
english	kent01	0222	#	#	#ac	#ac				
english	kent01	0222	when	when	adp	adp				
english	kent01	0222	they	3PL	pro.h:s	pro	h	s	2220	
english	kent01	0222	got	get.PST	v:pred	v		pred		
english	kent01	0222	married	married	rv	rv				
english	kent01	0222	see	see	other	other				
english	kent01	0222	%	%	%	%				
english	kent01	0222	church	church	np:g	np		g	2221	bridging
english	kent01	0223	#	#	##	##				
english	kent01	0223	#	#	#ac.neg	#ac.neg				
english	kent01	0223	if	if	adp	adp				
english	kent01	0223	it	3SG.N	pro:s	pro		s		
english	kent01	0223	was-n't	be.PST.3SG-NEG	cop	cop				
english	kent01	0223	only	only	other	other				
english	kent01	0223	the	the	ln_det	ln_det				
english	kent01	0223	half	half	ln	ln				
english	kent01	0223	a	a	ln	ln				
english	kent01	0223	mile	mile	np:pred	np		pred		
english	kent01	0223	%	%	%	%				
english	kent01	0223	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0223	used	used	lv_aux	lv_aux				
english	kent01	0223	take	take.INF	v:pred	v		pred		
english	kent01	0223	old	old	nc	nc				
english	kent01	0223	the	the	ln_det	ln_det				
english	kent01	0223	old	old	ln_adj	ln_adj				
english	kent01	0223	pony	pony	np:p	np		p	2219	
english	kent01	0223	to	to	adp	adp				
english	kent01	0223	church	church	np:g	np		g	2221	
english	kent01	0224	hmm	hmm	other	other				
english	kent01	0225	#	#	#nc	#nc				
english	kent01	0225	you	2SG	nc_pro.2	nc_pro	2		2001	
english	kent01	0225	know	know.PRS	nc	nc				
english	kent01	0225	#	#	#nc	#nc				
english	kent01	0225	where	where	nc	nc				
english	kent01	0225	Molash Church	Molash_Church	nc_pn_np	nc_pn_np			2221	
english	kent01	0225	is	be.PRS.3SG	nc	nc				
english	kent01	0226	[INT]	[INT]	[INT]	[INT]				
english	kent01	0226	#	#	#nc	#nc				
english	kent01	0226	not	not	nc	nc				
english	kent01	0226	quite	quite	nc	nc				
english	kent01	0227	#	#	##	##				
english	kent01	0227	oh	oh	other	other				
english	kent01	0227	I	1SG	nc	nc				
english	kent01	0227	did	do.PST	nc	nc				
english	kent01	0227	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0227	was	be.PST.1SG	cop	cop				
english	kent01	0227	in	in	adp	adp				
english	kent01	0227	the	the	ln_det	ln_det				
english	kent01	0227	choir	choir	np:pred_l	np		pred_l	2222	bridging
english	kent01	0227	for	for	adp	adp				
english	kent01	0227	eleven	eleven	ln_num	ln_num				
english	kent01	0227	year	year	np:other	np		other		
english	kent01	0227	at	at	adp	adp				
english	kent01	0227	Molash Church	Molash_Church	pn_np:l	pn_np		l	2221	
english	kent01	0228	#	#	##	##				
english	kent01	0228	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0228	sang	sing.PST	v:pred	v		pred		
english	kent01	0228	in	in	adp	adp				
english	kent01	0228	the	the	ln_det	ln_det				
english	kent01	0228	choir	choir	np:l	np		l	2222	
english	kent01	0229	#	#	##	##				
english	kent01	0229	pretty	pretty	ln	ln				
english	kent01	0229	near	near	ln	ln				
english	kent01	0229	all	all	ln	ln				
english	kent01	0229	the	the	ln_det	ln_det				
english	kent01	0229	boy-s	boy-PL	np:s	np		s	2223	bridging
english	kent01	0229	was	be.PST	cop	cop				
english	kent01	0229	really	really	other	other				
english	kent01	0229	religious	religious	other:pred	other		pred		
english	kent01	0229	you	2SG	other	other				
english	kent01	0229	know	know.PRS	other	other				
english	kent01	0229	their	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss	2223	
english	kent01	0229	parent-s	parent-PL	np.h:dt	np	h	dt	2224	bridging
english	kent01	0229	#	#	##neg	##neg				
english	kent01	0229	there	there	other	other				
english	kent01	0229	wadn't	be.PST.3SG.NEG	other:predex	other		predex		
english	kent01	0229	the	the	ln_det	ln_det				
english	kent01	0229	crime	crime	np:s	np		s		
english	kent01	0229	#	#	#rc	#rc				
english	kent01	0229	0	0_crime	rel_0:s	rel_0		s		
english	kent01	0229	there	there	other	other				
english	kent01	0229	is	be.PRS.3SG	other:predex	other		predex		
english	kent01	0229	today	today	other	other				
english	kent01	0230	nothing	nothing	other	other				
english	kent01	0230	like	like	other	other				
english	kent01	0231	#	#	##neg	##neg				
english	kent01	0231	well	well	other	other				
english	kent01	0231	there	there	other	other				
english	kent01	0231	wadn't	be.PST.3SG.NEG	other:predex	other		predex		
english	kent01	0231	the	the	ln_det	ln_det				
english	kent01	0231	population	population	np:s	np		s		
english	kent01	0231	was there	TAG	other	other				
english	kent01	0232	[INT]	[INT]	[INT]	[INT]				
english	kent01	0232	#	#	#nc	#nc				
english	kent01	0232	could	could	nc	nc				
english	kent01	0232	I	1SG	nc_pro.1	nc_pro	1		2001	
english	kent01	0232	ask	ask.INF	nc	nc				
english	kent01	0232	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0232	about	about	nc	nc				
english	kent01	0232	the	the	nc	nc				
english	kent01	0232	house	house	nc	nc				
english	kent01	0232	horse dealing	horse_dealing	nc	nc				
english	kent01	0232	again	again	nc	nc				
english	kent01	0232	#	#	#nc	#nc				
english	kent01	0232	did	do.PST	nc	nc				
english	kent01	0232	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0232	ever	ever	nc	nc				
english	kent01	0232	go	go.INF	nc	nc				
english	kent01	0232	up	up	nc	nc				
english	kent01	0232	to	to	nc	nc				
english	kent01	0232	London	London	nc	nc			2070	
english	kent01	0232	with	with	nc	nc				
english	kent01	0232	your	2SG.POSS	nc_pro.2	nc_pro	2		2000	
english	kent01	0232	father	father	nc_np.h	nc_np	h		2003	
english	kent01	0233	hmm	hmm	nc	nc				
english	kent01	0233	no	no	nc	nc				
english	kent01	0234	[INT]	[INT]	[INT]	[INT]				
english	kent01	0234	#	#	#nc	#nc				
english	kent01	0234	did	do.PST	nc	nc				
english	kent01	0234	you	2SG	nc	nc				
english	kent01	0234	you	2SG	nc_pro.2	nc_pro	2		2000	
english	kent01	0234	never	never	nc	nc				
english	kent01	0234	went	go.PST	nc	nc				
english	kent01	0235	no	no	nc	nc				
english	kent01	0236	#	#	#nc	#nc				
english	kent01	0236	no	no	nc	nc				
english	kent01	0236	I	1SG	nc_pro.1	nc_pro	1		2000	
english	kent01	0236	never	never	nc	nc				
english	kent01	0236	went	go.PST	nc	nc				
english	kent01	0236	to	to	nc	nc				
english	kent01	0236	London	London	nc_pn_np	nc_pn_np			2070	
english	kent01	0236	no	no	nc	nc				
english	kent01	0237	[INT]	[INT]	[INT]	[INT]				
english	kent01	0237	#	#	#nc	#nc				
english	kent01	0237	did	do.PST	nc	nc				
english	kent01	0237	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0237	ever	ever	nc	nc				
english	kent01	0237	tell	tell.INF	nc	nc				
english	kent01	0237	you	2SG	nc_pro.2	nc_pro	2			
english	kent01	0237	tale-s	tale-PL	nc	nc				
english	kent01	0237	about	about	nc	nc				
english	kent01	0237	it	3SG.N	nc_pro	nc_pro			2070	
english	kent01	0238	#	#	##	##				
english	kent01	0238	we	1PL	nc	nc				
english	kent01	0238	used	used	nc	nc				
english	kent01	0238	to	to	nc	nc				
english	kent01	0238	eh	eh	other	other				
english	kent01	0238	they	3PL	nc	nc				
english	kent01	0238	eh	eh	other	other				
english	kent01	0238	we	1PL	pro.1:a	pro	1	a	2225	bridging
english	kent01	0238	used	used	lv_aux	lv_aux				
english	kent01	0238	to	to	lv	lv				
english	kent01	0238	have	have.INF	v:pred	v		pred		
english	kent01	0238	a	a	nc	nc				
english	kent01	0238	in	in	adp	adp				
english	kent01	0238	April	April	np:other	np		other		
english	kent01	0238	#	#	##	##				
english	kent01	0238	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0238	think	think.PRS	v:pred	v		pred		
english	kent01	0238	#	#	#cc:p	#cc		p		
english	kent01	0238	it	3SG.N	pro:s	pro		s	2226	new
english	kent01	0238	was	be.PST.3SG	cop	cop				
english	kent01	0238	in	in	adp	adp				
english	kent01	0238	April	April	np:pred_other	np		pred_other		
english	kent01	0238	every	every	ln_adj	ln_adj				
english	kent01	0238	year	year	np:other	np		other		
english	kent01	0238	%	%	%	%				
english	kent01	0238	%	%	%	%				
english	kent01	0238	the	the	ln_det	ln_det				
english	kent01	0238	eh	eh	other	other				
english	kent01	0238	yeomanry	yeomanry	np:p	np		p	2226	
english	kent01	0239	#	#	##	##				
english	kent01	0239	you	2SG	pro.2:a	pro	2	a	2001	
english	kent01	0239	='ve	=have.PRS	=lv_aux	=lv_aux				
english	kent01	0239	heard	hear.PTCP.PST	v:pred	v		pred		
english	kent01	0239	of	of	rv	rv				
english	kent01	0239	the	the	ln_det	ln_det				
english	kent01	0239	yeomanry	yeomanry	np:p	np		p	2226	
english	kent01	0239	have you	TAG	other	other				
english	kent01	0240	#	#	##	##				
english	kent01	0240	they	3PL	nc	nc				
english	kent01	0240	used	used	nc	nc				
english	kent01	0240	to	to	nc	nc				
english	kent01	0240	the	the	ln_det	ln_det				
english	kent01	0240	farmer-s'	farmer-PL.POSS	ln_np.h:poss	ln_np	h	poss	2227	bridging
english	kent01	0240	son-s	son-PL	np.h:a	np	h	a	2228	bridging
english	kent01	0240	used	used	lv_aux	lv_aux				
english	kent01	0240	to	to	lv	lv				
english	kent01	0240	hire	hire.INF	v:pred	v		pred		
english	kent01	0240	a	a	ln_deti	ln_deti				
english	kent01	0240	horse	horse	np:p	np		p	2229	bridging
english	kent01	0240	off	off	adp	adp				
english	kent01	0240	Father	Father	pn_np.h:obl	pn_np	h	obl	2003	
english	kent01	0240	#	#	#ac	#ac				
english	kent01	0240	for	for	adp	adp				
english	kent01	0240	0	0_sons	f0.h:a	f0	h	a	2228	
english	kent01	0240	to	to	lv	lv				
english	kent01	0240	ride	ride.INF	vother:pred	vother		pred		
english	kent01	0240	0	0_horse	f0:p	f0		p	2229	
english	kent01	0240	in	in	adp	adp				
english	kent01	0240	the	the	ln_det	ln_det				
english	kent01	0240	yeomanry	yeomanry	np:l	np		l	2226	
english	kent01	0241	#	#	##	##				
english	kent01	0241	they	3PL	pro.h:s	pro	h	s	2228	
english	kent01	0241	had	have.PST	lv_aux	lv_aux				
english	kent01	0241	to	to	lv	lv				
english	kent01	0241	go	go.INF	v:pred	v		pred		
english	kent01	0241	up	up	rv	rv				
english	kent01	0241	for	for	adp	adp				
english	kent01	0241	a	a	ln_deti	ln_deti				
english	kent01	0241	fortnight's	fortnight=POSS	ln_np:poss	ln_np		poss		
english	kent01	0241	training	training	np:obl	np		obl		
english	kent01	0241	see	see	other	other				
english	kent01	0242	#	#	##	##				
english	kent01	0242	so	so	other	other				
english	kent01	0242	Father	Father	pn_np.h:a	pn_np	h	a	2003	
english	kent01	0242	used	used	lv_aux	lv_aux				
english	kent01	0242	to	to	lv	lv				
english	kent01	0242	get	get.INF	v:pred	v		pred		
english	kent01	0242	quite	quite	ln	ln				
english	kent01	0242	three	three	num_np:p	num_np		p	2230	bridging
english	kent01	0242	four	four	rn_num_np	rn_num_np				
english	kent01	0242	of	of	rn	rn				
english	kent01	0242	these	PROX.PL	rn_dem	rn_dem				
english	kent01	0242	horse-s	horse-PL	rn_np	rn_np			2231	bridging
english	kent01	0242	about	about	rv	rv				
english	kent01	0242	#	#	##	##				
english	kent01	0242	and	and	other	other				
english	kent01	0242	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0242	buy	buy.INF	v:pred	v		pred		
english	kent01	0242	them	3PL.OBL	pro:p	pro		p	2230	
english	kent01	0242	purpose	purpose	other	other				
english	kent01	0242	for	for	adp	adp				
english	kent01	0242	the	the	ln_det	ln_det				
english	kent01	0242	job	job	np:other	np		other		
english	kent01	0243	#	#	##	##				
english	kent01	0243	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0243	charge	charge.INF	v:pred	v		pred		
english	kent01	0243	='em	=3PL.OBL	=pro.h:p	=pro	h	p	2228	
english	kent01	0243	five	five	ln_num	ln_num				
english	kent01	0243	pound	pound	np:p2	np		p2	2232	bridging
english	kent01	0243	for	for	adp	adp				
english	kent01	0243	a	a	ln_deti	ln_deti				
english	kent01	0243	fortnight	fortnight	np:other	np		other		
english	kent01	0244	#	#	##	##				
english	kent01	0244	'at	DIST.SG	dem_pro:s	dem_pro		s	2232	
english	kent01	0244	was	be.PST.3SG	cop	cop				
english	kent01	0244	a	a	ln	ln				
english	kent01	0244	lot	lot	ln_detq	ln_detq				
english	kent01	0244	of	of	ln	ln				
english	kent01	0244	money	money	np:pred	np		pred		
english	kent01	0245	#	#	##neg	##neg				
english	kent01	0245	but	but	other	other				
english	kent01	0245	perhaps	perhaps	other	other				
english	kent01	0245	the	the	ln_det	ln_det				
english	kent01	0245	horse	horse	np:s	np		s	2229	
english	kent01	0245	was-n't	be.PST.3SG-NEG	cop	cop				
english	kent01	0245	much	much	other	other				
english	kent01	0245	good	good	other:pred	other		pred		
english	kent01	0245	time	time	np:other	np		other		
english	kent01	0245	#	#	#rc	#rc				
english	kent01	0245	they	3PL	pro.h:s	pro	h	s	2228	
english	kent01	0245	done	do.PTCP.PST	other:pred	other		pred		
english	kent01	0245	with	with	adp	adp				
english	kent01	0245	it	3SG.N	pro:obl	pro		obl	2229	
english	kent01	0246	#	#	##	##				
english	kent01	0246	and	and	other	other				
english	kent01	0246	eh	eh	other	other				
english	kent01	0246	me	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0246	and	and	rn	rn				
english	kent01	0246	my	1SG.POSS	rn_pro.1:poss	rn_pro	1	poss	2000	
english	kent01	0246	brother	brother	rn_np.h	rn_np	h		2012	
english	kent01	0246	had	have.PST	lv_aux	lv_aux				
english	kent01	0246	to	to	lv	lv				
english	kent01	0246	make	make.INF	v:pred	v		pred		
english	kent01	0246	sure	sure	other:lvc	other		lvc		
english	kent01	0246	#	#	#cc:p	#cc		p		
english	kent01	0246	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0246	horse-s	horse-PL	np:a	np		a	2231	
english	kent01	0246	would	would	nc	nc				
english	kent01	0246	would	would	lv_aux	lv_aux				
english	kent01	0246	take	take.INF	v:pred	v		pred		
english	kent01	0246	the	the	ln_det	ln_det				
english	kent01	0246	saddle	saddle	np:p	np		p	2233	bridging
english	kent01	0246	see	see	other	other				
english	kent01	0246	#	#	##	##				
english	kent01	0246	there	there	other	other				
english	kent01	0246	='re	=be.PRS	=other:predex	=other		predex		
english	kent01	0246	some	some	ln_deti	ln_deti				
english	kent01	0246	horse-s	horse-PL	np:s	np		s	2234	bridging
english	kent01	0246	#	#	#rc.neg	#rc.neg				
english	kent01	0246	0	0_horses	rel_0:a	rel_0		a	2234	
english	kent01	0246	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0246	like	like.INF	v:pred	v		pred		
english	kent01	0246	people	people	np.h:p	np	h	p		
english	kent01	0246	on	on	adp	adp				
english	kent01	0246	their	3PL.POSS	ln_pro:poss	ln_pro		poss	2234	
english	kent01	0246	back-s	back-PL	np:l	np		l	2235	bridging
english	kent01	0246	you	2SG	other	other				
english	kent01	0246	see	see.PRS	other	other				
english	kent01	0246	#	#	##neg	##neg				
english	kent01	0246	0	0_horses	0:a	0		a	2234	
english	kent01	0246	never	never	other	other				
english	kent01	0246	had	have.PST	v:pred	v		pred		
english	kent01	0246	nobody	nobody	indef_other.h:p	indef_other	h	p		
english	kent01	0246	on	on	adp	adp				
english	kent01	0246	their	3PL.POSS	ln_pro:poss	ln_pro		poss	2234	
english	kent01	0246	back	back	np:l	np		l	2235	
english	kent01	0247	#	#	##	##				
english	kent01	0247	and	and	other	other				
english	kent01	0247	Father	Father	pn_np.h:a	pn_np	h	a	2003	
english	kent01	0247	used	used	lv_aux	lv_aux				
english	kent01	0247	to	to	lv	lv				
english	kent01	0247	put	put.INF	v:pred	v		pred		
english	kent01	0247	saddle	saddle	np:p	np		p		
english	kent01	0247	on	on	adp	adp				
english	kent01	0247	='em	=3PL.OBL	=pro:g	=pro		g	2234	
english	kent01	0247	and	and	other	other				
english	kent01	0247	#	#	##ds	##ds				
english	kent01	0247	0	0_you	imp_0.2:s	imp_0	2	s	2029	
english	kent01	0247	go	go.IMP	v:pred	v		pred		
english	kent01	0247	on	on	rv	rv				
english	kent01	0247	up	up	rv	rv				
english	kent01	0247	#	#	##ds	##ds				
english	kent01	0247	there	there	other	other				
english	kent01	0247	you	2SG	pro.2:s	pro	2	s	2029	
english	kent01	0247	go	go.PRS	v:pred	v		pred		
english	kent01	0247	#	#	##	##				
english	kent01	0247	and	and	other	other				
english	kent01	0247	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0247	bunt	bunt.INF	v:pred	v		pred		
english	kent01	0247	us	1PL.OBL	pro.1:p	pro	1	p	2029	
english	kent01	0247	up	up	rv	rv				
english	kent01	0247	on	on	adp	adp				
english	kent01	0247	='em	=3PL.OBL	=pro:g	=pro		g	2234	
english	kent01	0247	#	#	##	##				
english	kent01	0247	and	and	other	other				
english	kent01	0247	off	off	lv	lv				
english	kent01	0247	we	1PL	pro.1:s	pro	1	s	2029	
english	kent01	0247	used	used	lv_aux	lv_aux				
english	kent01	0247	to	to	lv	lv				
english	kent01	0247	go	go.INF	v:pred	v		pred		
english	kent01	0247	#	#	##	##				
english	kent01	0247	sometimes	sometimes	other	other				
english	kent01	0247	we	1PL	pro.1:s	pro	1	s	2029	
english	kent01	0247	fell	fall.PST	v:pred	v		pred		
english	kent01	0247	off	off	rv	rv				
english	kent01	0247	#	#	##	##				
english	kent01	0247	sometimes	sometimes	other	other				
english	kent01	0247	we	1PL	pro.1:s	pro	1	s	2029	
english	kent01	0247	went	go.PST	v:pred	v		pred		
english	kent01	0247	off	off	rv	rv				
english	kent01	0247	at	at	adp	adp				
english	kent01	0247	a	a	ln_deti	ln_deti				
english	kent01	0247	gallop	gallop	np:other	np		other		
english	kent01	0247	#	#	##neg	##neg				
english	kent01	0247	and	and	other	other				
english	kent01	0247	0	0_we	0.1:a	0	1	a	2029	
english	kent01	0247	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0247	know	know.INF	v:pred	v		pred		
english	kent01	0247	#	#	#cc:p	#cc		p		
english	kent01	0247	how	how	other	other				
english	kent01	0247	0	0_we	f0.1:s	f0	1	s	2029	
english	kent01	0247	to	to	lv	lv				
english	kent01	0247	stop	stop.INF	vother:pred	vother		pred		
english	kent01	0247	#	#	##	##				
english	kent01	0247	and	and	other	other				
english	kent01	0247	0	0_we	0.1:a	0	1	a	2029	
english	kent01	0247	had	have.PST	v:pred	v		pred		
english	kent01	0247	all	all	ln	ln				
english	kent01	0247	manner	manner	ln	ln				
english	kent01	0247	of	of	ln	ln				
english	kent01	0247	caper-s	caper-PL	np:p	np		p		
english	kent01	0248	hmm	hmm	other	other				
english	kent01	0249	#	#	##	##				
english	kent01	0249	anyway	anyway	other	other				
english	kent01	0249	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0249	was	be.PST.1SG	lv_aux	lv_aux				
english	kent01	0249	riding	ride.PTCP.PRS	v:pred	v		pred		
english	kent01	0249	one	one	num_np:p	num_np		p	2236	bridging
english	kent01	0249	one	one	ln_deti	ln_deti				
english	kent01	0249	day	day	np:other	np		other		
english	kent01	0249	#	#	##	##				
english	kent01	0249	Father	Father	pn_np.h:a	pn_np	h	a	2003	
english	kent01	0249	put	put.PST	v:pred	v		pred		
english	kent01	0249	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0249	up	up	adp	adp				
english	kent01	0249	on	on	adp	adp				
english	kent01	0249	one	one	num_np:g	num_np		g	2236	
english	kent01	0250	#	#	##	##				
english	kent01	0250	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0250	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0250	#	#	##ds	##ds				
english	kent01	0250	0	0_I	imp_0.1:a	imp_0	1	a	2000	
english	kent01	0250	walk	walk.IMP	v:pred	v		pred		
english	kent01	0250	him	3SG.M.OBL	pro:p	pro		p	2236	
english	kent01	0250	down	down	adp	adp				
english	kent01	0250	the	the	ln_det	ln_det				
english	kent01	0250	field	field	np:other	np		other	2237	bridging
english	kent01	0250	#	#	##	##				
english	kent01	0250	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2003	
english	kent01	0250	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0250	#	#	##ds	##ds				
english	kent01	0250	and	and	other	other				
english	kent01	0250	0	0_I	imp_0.1:s	imp_0	1	s	2000	
english	kent01	0250	gallop	gallop.IMP	v:pred	v		pred		
english	kent01	0250	back	back	rv	rv				
english	kent01	0251	#	#	##	##				
english	kent01	0251	so	so	other	other				
english	kent01	0251	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0251	walk-ed	walk-PST	v:pred	v		pred		
english	kent01	0251	him	3SG.M.OBL	pro:p	pro		p	2236	
english	kent01	0251	down	down	adp	adp				
english	kent01	0251	the	the	ln_det	ln_det				
english	kent01	0251	field	field	np:other	np		other	2237	
english	kent01	0251	#	#	##	##				
english	kent01	0251	and	and	other	other				
english	kent01	0251	he	3SG.M	pro:s	pro		s	2236	
english	kent01	0251	walk-ed	walk-PST	v:pred	v		pred		
english	kent01	0251	quite	quite	other	other				
english	kent01	0251	sure	sure	other	other				
english	kent01	0251	#	#	##	##				
english	kent01	0251	and	and	other	other				
english	kent01	0251	0	0_I	0.1:s	0	1	s	2000	
english	kent01	0251	gallop-ed	gallop-PST	v:pred	v		pred		
english	kent01	0251	back	back	rv	rv				
english	kent01	0251	#	#	##	##				
english	kent01	0251	and	and	other	other				
english	kent01	0251	there	there	other	other				
english	kent01	0251	was	be.PST.3SG	other:predex	other		predex		
english	kent01	0251	a	a	ln_deti	ln_deti				
english	kent01	0251	sheep hurdle	sheep_hurdle	np:s	np		s	2238	new
english	kent01	0251	in	in	adp	adp				
english	kent01	0251	the	the	ln_det	ln_det				
english	kent01	0251	middle	middle	np:l	np		l	2239	bridging
english	kent01	0252	see	see.PRS	other	other				
english	kent01	0253	#	#	##	##				
english	kent01	0253	and	and	other	other				
english	kent01	0253	the	the	ln_det	ln_det				
english	kent01	0253	blooming	blooming	ln_adj	ln_adj				
english	kent01	0253	thing	thing	np:s	np		s	2236	
english	kent01	0253	went	go.PST	v:pred	v		pred		
english	kent01	0253	straight	straight	ln	ln				
english	kent01	0253	for	for	adp	adp				
english	kent01	0253	this	PROX.SG	ln_det	ln_det				
english	kent01	0253	sheep hurdle	sheep_hurdle	np:g	np		g	2238	
english	kent01	0253	#	#	##	##				
english	kent01	0253	and	and	other	other				
english	kent01	0253	0	0_horse	0:a	0		a	2236	
english	kent01	0253	jump-ed	jump-PST	v:pred	v		pred		
english	kent01	0253	it	3SG.N	pro:p	pro		p	2238	
english	kent01	0254	#	#	##	##				
english	kent01	0254	did	do.PST	nc	nc				
english	kent01	0254	jar	jar.INF	nc	nc				
english	kent01	0254	0	0_that	0:a	0		a	2240	bridging
english	kent01	0254	pretty	pretty	other	other				
english	kent01	0254	near	near	other	other				
english	kent01	0254	jarred	jar.PST	v:pred	v		pred		
english	kent01	0254	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0254	inside	inside	np:p	np		p	2241	bridging
english	kent01	0254	out	out	rv	rv				
english	kent01	0254	#	#	#ac	#ac				
english	kent01	0254	when	when	adp	adp				
english	kent01	0254	he	3SG.M	pro:s	pro		s	2236	
english	kent01	0254	land-ed	land-PST	v:pred	v		pred		
english	kent01	0255	#	#	##neg	##neg				
english	kent01	0255	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0255	='ll	=will	=lv_aux	=lv_aux				
english	kent01	0255	never	never	other	other				
english	kent01	0255	forget	forget.INF	v:pred	v		pred		
english	kent01	0255	it	3SG.N	pro:p	pro		p	2240	
english	kent01	0255	#	#	##neg	##neg				
english	kent01	0255	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0255	was-n't	be.PST.1SG-NEG	cop	cop				
english	kent01	0255	very	very	other	other				
english	kent01	0255	old	old	other:pred	other		pred		
english	kent01	0255	then	then	other	other				
english	kent01	0255	#	#	##	##				
english	kent01	0255	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0255	must	must	lv_aux	lv_aux				
english	kent01	0255	have	have.INF	lv_aux	lv_aux				
english	kent01	0255	been	be.PTCP.PST	cop	cop				
english	kent01	0255	about	about	other	other				
english	kent01	0255	fifteen	fifteen	other:pred	other		pred		
english	kent01	0256	#	#	##	##				
english	kent01	0256	and	and	other	other				
english	kent01	0256	Father	Father	pn_np.h:s_ds	pn_np	h	s_ds	2003	
english	kent01	0256	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0256	#	#	##ds	##ds				
english	kent01	0256	he	3SG.M	pro:s	pro		s	2236	
english	kent01	0256	='ll	=will	=lv_aux	=lv_aux				
english	kent01	0256	do	do.INF	v:pred	v		pred		
english	kent01	0257	#	#	##	##				
english	kent01	0257	and	and	other	other				
english	kent01	0257	that	DIST.SG	dem_pro:s	dem_pro		s	2236	
english	kent01	0257	were	be.PST	cop	cop				
english	kent01	0257	just	just	other	other				
english	kent01	0257	the	the	ln_det	ln_det				
english	kent01	0257	horse	horse	np:pred	np		pred		
english	kent01	0257	for	for	adp	adp				
english	kent01	0257	the	the	ln_det	ln_det				
english	kent01	0257	yeomanry	yeomanry	np:other	np		other	2226	
english	kent01	0257	you	2SG	other	other				
english	kent01	0257	see	see.PRS	other	other				
english	kent01	0258	[INT]	[INT]	[INT]	[INT]				
english	kent01	0258	#	#	#nc	#nc				
english	kent01	0258	hmm	hmm	nc	nc				
english	kent01	0258	who	who	nc	nc				
english	kent01	0258	who	who	nc	nc				
english	kent01	0258	were	be.PST	nc	nc				
english	kent01	0258	the	the	nc	nc				
english	kent01	0258	people	people	nc_np.h	nc_np	h		2228	
english	kent01	0258	#	#	#nc	#nc				
english	kent01	0258	that	that	nc	nc				
english	kent01	0258	0	0_people	rel_f0.h	rel_f0	h		2228	
english	kent01	0258	='s	=have.PRS.3SG	nc	nc				
english	kent01	0258	hired	hire.PTCP.PST	nc	nc				
english	kent01	0258	them	3PL.OBL	nc_pro	nc_pro			2231	
english	kent01	0258	up	up	nc	nc				
english	kent01	0258	the	the	nc	nc				
english	kent01	0259	#	#	#nc	#nc				
english	kent01	0259	oh	oh	nc	nc				
english	kent01	0259	farmer-s'	farmer-PL.POSS	nc	nc			2227	
english	kent01	0259	son-s	son-PL	nc_np.h	nc_np	h		2228	
english	kent01	0259	yes	yes	nc	nc				
english	kent01	0259	Tim Fennel	Tim_Fennel	nc_pn_np.h	nc_pn_np	h		2242	new
english	kent01	0259	from	from	nc	nc				
english	kent01	0259	Faversham	Faversham	nc_pn_np	nc_pn_np			2020	
english	kent01	0259	people	people	nc_np.h	nc_np	h		2243	bridging
english	kent01	0259	from	from	nc	nc				
english	kent01	0259	the	the	nc	nc				
english	kent01	0259	town-s	town-PL	nc_np	nc_np			2244	bridging
english	kent01	0260	#	#	##	##				
english	kent01	0260	Tim Fennel	Tim_Fennel	pn_np.h:s	pn_np	h	s	2242	
english	kent01	0260	from	from	rn_adp	rn_adp				
english	kent01	0260	Faversham	Faversham	rn_pn_np	rn_pn_np			2020	
english	kent01	0260	knew	know.PST	v:pred	v		pred		
english	kent01	0260	#	#	##	##				
english	kent01	0260	he	3SG.M	pro.h:s	pro	h	s	2242	
english	kent01	0260	belong-ed	belong-PST	v:pred	v		pred		
english	kent01	0260	to	to	adp	adp				
english	kent01	0260	it	3SG.N	pro:obl	pro		obl	2226	
english	kent01	0260	#	#	##	##				
english	kent01	0260	and	and	other	other				
english	kent01	0260	he	3SG.M	pro.h:a	pro	h	a	2242	
english	kent01	0260	tried	try.PST	v:pred	v		pred		
english	kent01	0260	#	#	#cc:p	#cc		p		
english	kent01	0260	0	0_Tim_Fennel	f0.h:a	f0	h	a	2242	
english	kent01	0260	to	to	lv	lv				
english	kent01	0260	get	get.INF	vother:pred	vother		pred		
english	kent01	0260	me	1SG.OBL	pro:p	pro		p	2000	
english	kent01	0260	to	to	nc	nc				
english	kent01	0261	#	#	##	##				
english	kent01	0261	Stan Howl	Stan_Howl	pn_np.h:dt_s	pn_np	h	dt_s	2245	new
english	kent01	0261	he	3SG.M	pro.h:s	pro	h	s	2245	
english	kent01	0261	belong-ed	belong-PST	v:pred	v		pred		
english	kent01	0261	to	to	adp	adp				
english	kent01	0261	it	3SG.N	pro:obl	pro		obl	2226	
english	kent01	0262	#	#	##	##				
english	kent01	0262	he	3SG.M	pro.h:s	pro	h	s	2245	
english	kent01	0262	was	be.PST.3SG	cop	cop				
english	kent01	0262	at	at	adp	adp				
english	kent01	0262	Drylands	Drylands	pn_np:pred_l	pn_np		pred_l	2246	new
english	kent01	0262	Molash	Molash	pn_np:appos	pn_np		appos	2016	
english	kent01	0263	#	#	##	##				
english	kent01	0263	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0263	used	used	lv_aux	lv_aux				
english	kent01	0263	to	to	lv	lv				
english	kent01	0263	have	have.PRS	lv_aux	lv_aux				
english	kent01	0263	to	to	lv	lv				
english	kent01	0263	always	always	other	other				
english	kent01	0263	find	find.INF	v:pred	v		pred		
english	kent01	0263	him	3SG.M.OBL	pro.h:p	pro	h	p	2245	
english	kent01	0263	one	one	num_np:p2	num_np		p2	2247	bridging
english	kent01	0263	#	#	##	##				
english	kent01	0263	he	3SG.M	pro.h:a	pro	h	a	2245	
english	kent01	0263	used	used	lv_aux	lv_aux				
english	kent01	0263	to	to	lv	lv				
english	kent01	0263	find	find.INF	v:pred	v		pred		
english	kent01	0263	Tim Fennel	Tim_Fennel	pn_np.h:p	pn_np	h	p	2242	
english	kent01	0263	one	one	num_np:p2	num_np		p2	2248	bridging
english	kent01	0264	#	#	##	##				
english	kent01	0264	Andy Fennel	Andy_Fennel	pn_np.h:dt_a	pn_np	h	dt_a	2249	new
english	kent01	0264	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2242	
english	kent01	0264	brother	brother	np.h:appos	np	h	appos	2249	
english	kent01	0264	he	3SG.M	pro.h:a	pro	h	a	2249	
english	kent01	0264	used	used	lv_aux	lv_aux				
english	kent01	0264	to	to	lv	lv				
english	kent01	0264	have	have.INF	v:pred	v		pred		
english	kent01	0264	one	one	num_np:p	num_np		p	2250	bridging
english	kent01	0265	#	#	#nc	#nc				
english	kent01	0265	oh	oh	nc	nc				
english	kent01	0265	we	1PL	nc_pro.1	nc_pro	1		2119	
english	kent01	0265	used	used	nc	nc				
english	kent01	0265	to	to	nc	nc				
english	kent01	0265	buy	buy.INF	nc	nc				
english	kent01	0265	abouts	about	nc	nc				
english	kent01	0266	#	#	##	##				
english	kent01	0266	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0266	think	think.PRS	v:pred	v		pred		
english	kent01	0266	#	#	#cc:p	#cc		p		
english	kent01	0266	we	1PL	pro.1:a	pro	1	a	2119	
english	kent01	0266	had	have.PST	v:pred	v		pred		
english	kent01	0266	six	six	nc	nc				
english	kent01	0266	about	about	ln	ln				
english	kent01	0266	six	six	ln_num	ln_num				
english	kent01	0266	customer-s	customer-PL	np.h:p	np	h	p	2251	bridging
english	kent01	0267	#	#	##	##				
english	kent01	0267	and	and	other	other				
english	kent01	0267	they	3PL	pro:s	pro		s	2226	
english	kent01	0267	were	be.PST	cop	cop				
english	kent01	0267	a	a	ln_deti	ln_deti				
english	kent01	0267	year	yearly	ln_adj	ln_adj				
english	kent01	0267	occurrence	occurrence	np:pred	np		pred		
english	kent01	0267	you	2SG	other	other				
english	kent01	0267	see	see.PRS	other	other				
english	kent01	0268	for	for	adp	adp				
english	kent01	0268	several	several	ln_adj	ln_adj				
english	kent01	0268	year-s	year-PL	np:other	np		other		
english	kent01	0268	#	#	##neg	##neg				
english	kent01	0268	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0268	don't	do.PRS.NEG	lv_aux	lv_aux				
english	kent01	0268	know	know.INF	v:pred	v		pred		
english	kent01	0268	#	#	##	##				
english	kent01	0268	it	3SG.N	pro:s	pro		s	2226	
english	kent01	0268	finish-ed	finish-PST	v:pred	v		pred		
english	kent01	0268	up	up	rv	rv				
english	kent01	0268	#	#	#ac	#ac				
english	kent01	0268	when	when	adp	adp				
english	kent01	0268	the	the	ln_det	ln_det				
english	kent01	0268	'Fourteen War	'Fourteen_War	pn_np:s	pn_np		s	2252	new
english	kent01	0268	come	come.PST	v:pred	v		pred		
english	kent01	0268	didn't it	TAG	other	other				
english	kent01	0269	#	#	##	##				
english	kent01	0269	that	DIST.SG	dem_pro:s	dem_pro		s	2252	
english	kent01	0269	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0269	#	#	#cc:pred_other	#cc		pred_other		
english	kent01	0269	when	when	adp	adp				
english	kent01	0269	it	3SG.N	pro:s	pro		s	2226	
english	kent01	0269	finish-ed	finish-PST	v:pred	v		pred		
english	kent01	0270	[INT]	[INT]	[INT]	[INT]				
english	kent01	0270	#	#	#nc	#nc				
english	kent01	0270	did	do.PST	nc	nc				
english	kent01	0270	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0270	ever	ever	nc	nc				
english	kent01	0270	sell	sell.INF	nc	nc				
english	kent01	0270	horse-s	horse-PL	nc_np	nc_np			2253	bridging
english	kent01	0270	for	for	nc	nc				
english	kent01	0270	thing-s	thing-PL	nc	nc				
english	kent01	0270	like	like	nc	nc				
english	kent01	0270	hunting	hunting	nc	nc				
english	kent01	0270	or	or	nc	nc				
english	kent01	0271	#	#	##	##				
english	kent01	0271	no	no	nc	nc				
english	kent01	0271	the	the	ln_det	ln_det				
english	kent01	0271	old	old	ln_adj	ln_adj				
english	kent01	0271	farmer-s	farmer-PL	np.h:a	np	h	a	2254	bridging
english	kent01	0271	used	used	lv_aux	lv_aux				
english	kent01	0271	to	to	lv	lv				
english	kent01	0271	own	own.INF	v:pred	v		pred		
english	kent01	0271	their	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss	2254	
english	kent01	0271	own	own	ln_adj	ln_adj				
english	kent01	0271	horse-s	horse-PL	np:p	np		p	2255	bridging
english	kent01	0271	#	#	##neg	##neg				
english	kent01	0271	0	0_farmers	0.h:a	0	h	a	2254	
english	kent01	0271	did-n't	do.PST-NEG	lv_aux	lv_aux				
english	kent01	0271	keep	keep.INF	v:pred	v		pred		
english	kent01	0271	the	the	ln_det	ln_det				
english	kent01	0271	horse	horse	np:p	np		p	2255	
english	kent01	0272	#	#	##	##				
english	kent01	0272	now	now	other	other				
english	kent01	0272	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0272	place	place	np:dt	np		dt	2266	bridging
english	kent01	0272	here	here	other	other				
english	kent01	0272	they	3PL	pro.h:a	pro	h	a	2256	bridging
english	kent01	0272	kept	keep.PST	v:pred	v		pred		
english	kent01	0272	a	a	ln_deti	ln_deti				
english	kent01	0272	hunter	hunter	np:p	np		p	2257	bridging
english	kent01	0272	here	here	other:l	other		l		
english	kent01	0273	#	#	##	##				
english	kent01	0273	but	but	other	other				
english	kent01	0273	it	3SG.N	pro:s	pro		s	2257	
english	kent01	0273	work-ed	work-PST	v:pred	v		pred		
english	kent01	0273	on	on	adp	adp				
english	kent01	0273	the	the	ln_det	ln_det				
english	kent01	0273	farm	farm	np:l	np		l	2266	
english	kent01	0273	all	all	ln	ln				
english	kent01	0273	the	the	ln_det	ln_det				
english	kent01	0273	year	year	np:other	np		other		
english	kent01	0273	#	#	##	##				
english	kent01	0273	and	and	other	other				
english	kent01	0273	then	then	other	other				
english	kent01	0273	they	3PL	pro.h:s	pro	h	s	2256	
english	kent01	0273	used	used	lv_aux	lv_aux				
english	kent01	0273	to	to	lv	lv				
english	kent01	0273	go	go.INF	v:pred	v		pred		
english	kent01	0273	out	out	rv	rv				
english	kent01	0273	#	#	#	#				
english	kent01	0273	0	0_they	f0.h:s	f0	h	s	2256	
english	kent01	0273	hunt-ing	hunt-PTCP.PRS	vother:pred	vother		pred		
english	kent01	0273	#	#	##	##				
english	kent01	0273	and	and	other	other				
english	kent01	0273	that	DIST.SG	dem_pro:s	dem_pro		s	2258	bridging
english	kent01	0273	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0273	#	#	#rc:pred	#rc		pred	2258	
english	kent01	0273	what	what	intrg_other:a	intrg_other		a		
english	kent01	0273	broke	break.PST	v:pred	v		pred		
english	kent01	0273	the	the	ln_dem	ln_dem				
english	kent01	0273	man	man	np.h:p	np	h	p	2259	bridging
english	kent01	0273	#	#	#ac	#ac				
english	kent01	0273	'cause	because	adp	adp				
english	kent01	0273	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2259	
english	kent01	0273	son	son	np.h:s	np	h	s	2260	bridging
english	kent01	0273	went	go.PST	v:pred	v		pred		
english	kent01	0273	#	#	#	#				
english	kent01	0273	0	0_son	f0.h:s	f0	h	s	2260	
english	kent01	0273	hunt-ing	hunt-PTCP.PRS	vother:pred	vother		pred		
english	kent01	0273	%	%	%	%				
english	kent01	0273	and	and	nc	nc				
english	kent01	0273	got	get.PTCP.PST	nc	nc				
english	kent01	0273	#	#	##	##				
english	kent01	0273	he	3SG.M	nc	nc				
english	kent01	0273	was	be.PST.3SG	nc	nc				
english	kent01	0273	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0273	='s	=be.PST.3SG	=lv_aux	=lv_aux				
english	kent01	0273	come	come.INF	v:pred	v		pred		
english	kent01	0273	down	down	rv	rv				
english	kent01	0273	from	from	adp	adp				
english	kent01	0273	Scotland	Scotland	pn_np:obl	pn_np		obl	2261	new
english	kent01	0273	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0273	man	man	np:dt_s	np		dt_s	2259	
english	kent01	0273	#	#	#rc	#rc				
english	kent01	0273	what	what	rel_pro.h:a	rel_pro	h	a	2259	
english	kent01	0273	had	have.PST	v:pred	v		pred		
english	kent01	0273	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0273	farm	farm	np:p	np		p	2266	
english	kent01	0273	before	before	adp	adp				
english	kent01	0273	me	1SG.OBL	pro.1:other	pro	1	other	2000	
english	kent01	0273	#	#	##	##				
english	kent01	0273	he	3SG.M	pro.h:a	pro	h	a	2259	
english	kent01	0273	had	have.PST	v:pred	v		pred		
english	kent01	0273	it	3SG.N	pro:p	pro		p	2266	
english	kent01	0273	twenty-six	twenty-six	ln_num	ln_num				
english	kent01	0273	year-s	year-PL	np:other	np		other		
english	kent01	0274	#	#	##	##				
english	kent01	0274	and	and	other	other				
english	kent01	0274	he	3SG.M	pro.h:a	pro	h	a	2259	
english	kent01	0274	told	tell.PST	v:pred	v		pred		
english	kent01	0274	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0274	#	#	#cc:p2	#cc		p2		
english	kent01	0274	that	that	other	other				
english	kent01	0274	he	3SG.M	nc	nc				
english	kent01	0274	he	3SG.M	pro.h:a	pro	h	a	2259	
english	kent01	0274	='d	=have.PST	=lv_aux	=lv_aux				
english	kent01	0274	got	get.PTCP.PST	v:pred	v		pred		
english	kent01	0274	three thousand	three-thousand	ln_num	ln_num				
english	kent01	0274	pound	pound	np:p	np		p		
english	kent01	0274	#	#	#ac	#ac				
english	kent01	0274	when	when	adp	adp				
english	kent01	0274	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0274	come	come.PST	v:pred	v		pred		
english	kent01	0274	down	down	adp	adp				
english	kent01	0274	here	here	other:g	other		g	2266	
english	kent01	0274	from	from	adp	adp				
english	kent01	0274	Scotland	Scotland	pn_np:obl	pn_np		obl	2261	
english	kent01	0274	#	#	##	##				
english	kent01	0274	and	and	other	other				
english	kent01	0274	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2259	
english	kent01	0274	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0274	#	#	##ds.neg	##ds.neg				
english	kent01	0274	now	now	other	other				
english	kent01	0274	Mr Crown	Mr_Crown	pn_np.h:voc	pn_np	h	voc	2000	
english	kent01	0274	I	1SG	pro.1:a	pro	1	a	2259	
english	kent01	0274	have-n't	have.PRS-NEG	lv_aux	lv_aux				
english	kent01	0274	got	get.PTCP.PST	v:pred	v		pred		
english	kent01	0274	three thousand	three-thousand	ln_adj	ln_adj				
english	kent01	0274	pence	pence	np:p	np		p		
english	kent01	0275	#	#	##ds	##ds				
english	kent01	0275	and	and	other	other				
english	kent01	0275	I	1SG	pro.1:s	pro	1	s	2259	
english	kent01	0275	='ve	=have.PRS	=lv_aux	=lv_aux				
english	kent01	0275	been	be.PTCP.PST	cop	cop				
english	kent01	0275	here	here	other:pred_l	other		pred_l	2266	
english	kent01	0275	twenty-six	twenty-six	ln_num	ln_num				
english	kent01	0275	year-s	year-PL	np:other	np		other		
english	kent01	0276	#	#	##	##				
english	kent01	0276	and	and	other	other				
english	kent01	0276	I	1SG	nc_pro.1	nc_pro	1		2000	
english	kent01	0276	we--	NC	nc	nc				
english	kent01	0276	sa--	NC	nc	nc				
english	kent01	0276	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2259	
english	kent01	0276	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0276	#	#	##ds	##ds				
english	kent01	0276	and	and	other	other				
english	kent01	0276	I	1SG	pro.1:a	pro	1	a	2259	
english	kent01	0276	='ve	=have.PRS	=lv_aux	=lv_aux				
english	kent01	0276	got	get.PTCP.PST	v:pred	v		pred		
english	kent01	0276	nowhere	nowhere	indef_other:p	indef_other		p		
english	kent01	0276	#	#	#	#				
english	kent01	0276	0	0_I	f0.1:s	f0	1	s	2259	
english	kent01	0276	to	to	lv	lv				
english	kent01	0276	go	go.INF	vother:pred	vother		pred		
english	kent01	0277	#	#	##	##				
english	kent01	0277	I	1SG	pro.1:s_ds	pro	1	s_ds	2000	
english	kent01	0277	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0277	#	#	##	##				
english	kent01	0277	well	well	other	other				
english	kent01	0277	you	2SG	pro.2:s	pro	2	s	2259	
english	kent01	0277	can	can	lv_aux	lv_aux				
english	kent01	0277	go	go.INF	v:pred	v		pred		
english	kent01	0277	over	over	rv	rv				
english	kent01	0277	in	in	adp	adp				
english	kent01	0277	one	one	num_np:g	num_np		g	2262	bridging
english	kent01	0277	of	of	rn	rn				
english	kent01	0277	my	1SG.POSS	rn_pro.1:poss	rn_pro	1	poss	2000	
english	kent01	0277	cottage-s	cottage-PL	rn_np	rn_np			2263	bridging
english	kent01	0277	#	#	##	##				
english	kent01	0277	I	1SG	pro.1:s_ds	pro	1	s_ds	2000	
english	kent01	0277	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0277	#	#	##ds	##ds				
english	kent01	0277	and	and	other	other				
english	kent01	0277	0	0_man	0.2:s	0	2	s	2259	
english	kent01	0277	stop	stop.INF	v:pred	v		pred		
english	kent01	0277	there	there	other:l	other		l	2262	
english	kent01	0277	#	#	#ds_ac	#ds_ac				
english	kent01	0277	as	as	other	other				
english	kent01	0277	long	long	other	other				
english	kent01	0277	as	as	adp	adp				
english	kent01	0277	you	2SG	pro.2:s	pro	2	s	2259	
english	kent01	0277	like	like.PRS	v:pred	v		pred		
english	kent01	0277	rent-free	rent_free	other	other				
english	kent01	0278	#	#	##	##				
english	kent01	0278	and	and	other	other				
english	kent01	0278	that	DIST.SG	dem_pro:s	dem_pro		s	2262	
english	kent01	0278	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0278	#	#	#cc:pred	#cc		pred		
english	kent01	0278	where	where	intrg_other:g	intrg_other		g		
english	kent01	0278	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0278	went	go.PST	v:pred	v		pred		
english	kent01	0278	#	#	##	##				
english	kent01	0278	and	and	other	other				
english	kent01	0278	that	DIST.SG	dem_pro:s	dem_pro		s	2262	
english	kent01	0278	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0278	#	#	#cc:pred	#cc		pred		
english	kent01	0278	where	where	intrg_other:l	intrg_other		l		
english	kent01	0278	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0278	died	die.PST	v:pred	v		pred		
english	kent01	0279	#	#	##	##				
english	kent01	0279	#	#	#ac	#ac				
english	kent01	0279	'cause	because	adp	adp				
english	kent01	0279	we	1PL	pro.1:a	pro	1	a	2264	bridging
english	kent01	0279	want-ed	want-PST	v:pred	v		pred		
english	kent01	0279	him	3SG.M.OBL	pro.h:p	pro	h	p	2259	
english	kent01	0279	out	out	adp	adp				
english	kent01	0279	the	the	ln_det	ln_det				
english	kent01	0279	house	house	np:obl	np		obl	2262	
english	kent01	0279	#	#	#ac	#ac				
english	kent01	0279	0	0_we	f0.1:a	f0	1	a	2264	
english	kent01	0279	to	to	lv	lv				
english	kent01	0279	get	get.INF	vother:pred	vother		pred		
english	kent01	0279	the	the	ln_det	ln_det				
english	kent01	0279	house	house	np:p	np		p	2262	
english	kent01	0279	#	#	#cc:obl	#cc		obl		
english	kent01	0279	0	0_house	f0:s	f0		s	2262	
english	kent01	0279	done	do.PTCP.PST	vother:pred	vother		pred		
english	kent01	0279	up	up	rv	rv				
english	kent01	0279	%	%	%	%				
english	kent01	0279	you	2SG	other	other			2001	
english	kent01	0279	see	see.PRS	other	other				
english	kent01	0279	#	#	#ac	#ac				
english	kent01	0279	0	0_we	f0.1:a	f0	1	a	2259	
english	kent01	0279	to	to	lv	lv				
english	kent01	0279	repair	repair.INF	vother:pred	vother		pred		
english	kent01	0279	the	the	ln_det	ln_det				
english	kent01	0279	house	house	np:p	np		p	2262	
english	kent01	0279	#	#	##	##				
english	kent01	0279	it	3SG.N	pro:s	pro		s	2262	
english	kent01	0279	was	be.PST.3SG	cop	cop				
english	kent01	0279	in	in	adp	adp				
english	kent01	0279	an	an	ln_deti	ln_deti				
english	kent01	0279	awful	awful	ln_adj	ln_adj				
english	kent01	0279	state	state	np:pred_other	np		pred_other		
english	kent01	0280	#	#	##	##				
english	kent01	0280	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0280	plant-ed	plant-PST	v:pred	v		pred		
english	kent01	0280	all	all	ln	ln				
english	kent01	0280	these	PROX.PL	ln_dem	ln_dem				
english	kent01	0280	hedge-s	hedge-PL	np:p	np		p	2265	bridging
english	kent01	0281	#	#	##	##				
english	kent01	0281	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0281	plant-ed	plant-PST	v:pred	v		pred		
english	kent01	0281	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0281	orchard	orchard	np:p	np		p	2267	bridging
english	kent01	0282	#	#	##	##				
english	kent01	0282	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0282	house	house	np:s	np		s	2268	bridging
english	kent01	0282	just	just	other	other				
english	kent01	0282	stood	stand.PST	v:pred	v		pred		
english	kent01	0282	in	in	adp	adp				
english	kent01	0282	a	a	ln_deti	ln_deti				
english	kent01	0282	meadow	meadow	np:l	np		l	2269	bridging
english	kent01	0282	#	#	##	##				
english	kent01	0282	and	and	other	other				
english	kent01	0282	the	the	ln_det	ln_det				
english	kent01	0282	cattle	cattle	np:s	np		s	2270	new
english	kent01	0282	and	and	rn	rn				
english	kent01	0282	sheep	sheep	rn_np	rn_np			2271	new
english	kent01	0282	used	used	lv_aux	lv_aux				
english	kent01	0282	to	to	lv	lv				
english	kent01	0282	lay	lay.INF	v:pred	v		pred		
english	kent01	0282	in	in	adp	adp				
english	kent01	0282	the	the	ln_det	ln_det				
english	kent01	0282	porch	porch	np:l	np		l	2272	bridging
english	kent01	0282	#	#	#rc	#rc				
english	kent01	0282	where	where	rel_pro:l	rel_pro		l		
english	kent01	0282	you	2SG	gen_pro.2:s	gen_pro	2	s		
english	kent01	0282	come	come.PRS	v:pred	v		pred		
english	kent01	0282	through	through	rv	rv				
english	kent01	0283	#	#	##	##				
english	kent01	0283	and	and	other	other				
english	kent01	0283	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0283	laid	lay.PST	v:pred	v		pred		
english	kent01	0283	the	the	ln_det	ln_det				
english	kent01	0283	lawn-s	lawn-PL	np:p	np		p	2273	bridging
english	kent01	0283	#	#	##	##				
english	kent01	0283	and	and	other	other				
english	kent01	0283	0	0_I	0.1:a	0	1	a	2000	
english	kent01	0283	done	do.PTCP.PST	v:pred	v		pred		
english	kent01	0283	it	3SG.N	pro:p	pro		p		
english	kent01	0283	all	all	other	other				
english	kent01	0284	#	#	##neg	##neg				
english	kent01	0284	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0284	never	never	other	other				
english	kent01	0284	ask-ed	ask-PST	v:pred	v		pred		
english	kent01	0284	Lord Sourstone	Lord_Sour	pn_np.h:p	pn_np	h	p	2274	new
english	kent01	0284	for	for	adp	adp				
english	kent01	0284	a	a	ln_deti	ln_deti				
english	kent01	0284	penny	penny	np:obl	np		obl		
english	kent01	0285	[INT]	[INT]	[INT]	[INT]				
english	kent01	0285	#	#	#nc	#nc				
english	kent01	0285	how	how	nc	nc				
english	kent01	0285	come	come	nc	nc				
english	kent01	0285	he	3SG.M	nc	nc				
english	kent01	0285	='d	=have.PST	nc	nc				
english	kent01	0285	he	3SG.M	nc_pro.h	nc_pro	h		2259	
english	kent01	0285	='d	=have.PST	nc	nc				
english	kent01	0285	eh	eh	nc	nc				
english	kent01	0285	done	do.PTCP.PST	nc	nc				
english	kent01	0285	so	so	nc	nc				
english	kent01	0285	badly	badly	nc	nc				
english	kent01	0286	hmm	hmm	nc	nc				
english	kent01	0287	[INT]	[INT]	[INT]	[INT]				
english	kent01	0287	#	#	#nc	#nc				
english	kent01	0287	how	how	nc	nc				
english	kent01	0287	='d	=do.PST	nc	nc				
english	kent01	0287	how	how	nc	nc				
english	kent01	0287	come	come	nc	nc				
english	kent01	0287	he	3SG.M	nc_pro.h	nc_pro	h		2259	
english	kent01	0287	='d	=have.PST	nc	nc				
english	kent01	0287	done	do.PTCP.PST	nc	nc				
english	kent01	0287	so	so	nc	nc				
english	kent01	0287	badly	badly	nc	nc				
english	kent01	0288	he	3SG.M	nc	nc				
english	kent01	0289	[INT]	[INT]	[INT]	[INT]				
english	kent01	0289	hmm	hmm	nc	nc				
english	kent01	0289	did	do.PST	nc	nc				
english	kent01	0289	he	3SG.M	nc_pro.h	nc_pro	h		2259	
english	kent01	0289	have	have.INF	nc	nc				
english	kent01	0289	the	the	nc	nc				
english	kent01	0290	#	#	##	##				
english	kent01	0290	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2259	
english	kent01	0290	son	son	np.h:a	np	h	a	2260	
english	kent01	0290	start-ed	start-PST	v:pred	v		pred		
english	kent01	0290	#	#	#cc:p	#cc		p		
english	kent01	0290	0	0_son	f0.h:s	f0	h	s	2260	
english	kent01	0290	hunt-ing	hunt-PTCP.PRS	vother:pred	vother		pred		
english	kent01	0291	#	#	##	##				
english	kent01	0291	and	and	other	other				
english	kent01	0291	then	then	other	other				
english	kent01	0291	it	3SG.N	pro:s	pro		s		
english	kent01	0291	was	be.PST.3SG	cop	cop				
english	kent01	0291	wine	wine	np:pred	np		pred	2275	new
english	kent01	0291	and	and	rn	rn				
english	kent01	0291	women	woman.PL	rn_np.h	rn_np	h		2276	new
english	kent01	0292	#	#	##	##				
english	kent01	0292	and	and	other	other				
english	kent01	0292	he	3SG.M	pro.h:a	pro	h	a	2259	
english	kent01	0292	kept	keep.PST	v:pred	v		pred		
english	kent01	0292	a	a	ln_deti	ln_deti				
english	kent01	0292	hunter	hunter	np:p	np		p	2257	
english	kent01	0292	here	here	other:l	other		l	2266	
english	kent01	0292	#	#	#nc	#nc				
english	kent01	0292	and	and	nc	nc				
english	kent01	0292	he	3SG.M	nc	nc				
english	kent01	0292	he	3SG.M	nc_pro.h	nc_pro	h		2259	
english	kent01	0292	would	would	nc	nc				
english	kent01	0292	do	do.INF	nc	nc				
english	kent01	0292	#	#	##	##				
english	kent01	0292	his	3SG.M.POSS	nc_pro.h	nc_pro	h		2259	
english	kent01	0292	wife	wife	nc_np.h	nc_np	h		2277	bridging
english	kent01	0292	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2259	
english	kent01	0292	son's	son=POSS	ln_np.h:poss	ln_np	h	poss	2260	
english	kent01	0292	wife	wife	np.h:s	np	h	s	2278	bridging
english	kent01	0292	was	be.PST.3SG	cop	cop				
english	kent01	0292	a	a	ln_deti	ln_deti				
english	kent01	0292	better	good.CMPR	ln_adj	ln_adj				
english	kent01	0292	man	man	np.h:pred	np	h	pred		
english	kent01	0292	#	#	#ac	#ac				
english	kent01	0292	than	than	adp	adp				
english	kent01	0292	ever	ever	other	other				
english	kent01	0292	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0292	was	be.PST.3SG	cop	cop				
english	kent01	0292	0	0_that	0:pred	0		pred		
english	kent01	0292	#	#	##	##				
english	kent01	0292	she	3SG.F	pro.h:s	pro	h	s	2278	
english	kent01	0292	='d	=would	=lv_aux	=lv_aux				
english	kent01	0292	work	work.INF	v:pred	v		pred		
english	kent01	0293	#	#	##	##				
english	kent01	0293	but	but	other	other				
english	kent01	0293	Haggary	Haggary	pn_np.h:dt_s	pn_np	h	dt_s	2259	
english	kent01	0293	#	#	##	##				
english	kent01	0293	that	DIST.SG	dem_pro.h:s	dem_pro	h	s	2259	
english	kent01	0293	was	be.PST.3SG	cop	cop				
english	kent01	0293	the	the	ln_det	ln_det				
english	kent01	0293	owner	owner	np.h:pred	np	h	pred		
english	kent01	0293	of	of	rn	rn				
english	kent01	0293	the	the	rn_det	rn_det				
english	kent01	0293	farm	farm	rn_np	rn_np			2266	
english	kent01	0293	the	the	rn_det	rn_det				
english	kent01	0293	tenant	tenant	rn_np.h	rn_np	h		2259	
english	kent01	0293	of	of	rn	rn				
english	kent01	0293	the	the	rn_det	rn_det				
english	kent01	0293	farm	farm	rn_np	rn_np			2266	
english	kent01	0293	%	%	%	%				
english	kent01	0293	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0293	was	be.PST.3SG	cop	cop				
english	kent01	0293	#	#	##	##				
english	kent01	0293	what	what	intrg_other:p	intrg_other		p		
english	kent01	0293	shall	shall	lv_aux	lv_aux				
english	kent01	0293	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0293	say	say.INF	v:pred	v		pred		
english	kent01	0293	%	%	%	%				
english	kent01	0293	slow	slow	other:pred	other		pred		
english	kent01	0293	you	2SG	other	other				
english	kent01	0293	know	know.PRS	other	other				
english	kent01	0294	#	#	##	##				
english	kent01	0294	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0294	was	be.PST.3SG	cop	cop				
english	kent01	0294	honest	honest	other:pred	other		pred		
english	kent01	0294	straight	straight	ln_adj	ln_adj				
english	kent01	0294	man	man	np.h:other	np	h	other		
english	kent01	0294	#	#	##	##				
english	kent01	0294	but	but	other	other				
english	kent01	0294	he	3SG.M	pro.h:a	pro	h	a	2259	
english	kent01	0294	='d	=have.PST	=lv_aux	=lv_aux				
english	kent01	0294	got	get.PTCP.PST	v:pred	v		pred		
english	kent01	0294	no	no	ln	ln				
english	kent01	0294	gumption	gumption	np:p	np		p		
english	kent01	0294	#	#	#	#				
english	kent01	0294	of	of	adp	adp				
english	kent01	0294	how	how	other	other				
english	kent01	0294	to	to	lv	lv				
english	kent01	0294	do	do.INF	vother:pred	vother		pred		
english	kent01	0294	a	a	ln_deti	ln_deti				
english	kent01	0294	job	job	np:p	np		p		
english	kent01	0295	see	see.PRS	other	other				
english	kent01	0296	#	#	#nc	#nc				
english	kent01	0296	he	3SG.M	nc_pro.h	nc_pro	h		2259	
english	kent01	0296	would-n't	would-NEG	nc	nc				
english	kent01	0296	I	1SG	nc_pro.1	nc_pro	1		2000	
english	kent01	0296	='ve	=have.PRS	nc	nc				
english	kent01	0296	he	3SG.M	nc	nc				
english	kent01	0296	#	#	##	##				
english	kent01	0296	there	there	other	other				
english	kent01	0296	was	be.PST.3SG	other:predex	other		predex		
english	kent01	0296	a	a	ln_deti	ln_deti				
english	kent01	0296	little	little	ln_adj	ln_adj				
english	kent01	0296	box	box	np:s	np		s	2279	new
english	kent01	0296	there	there	other:l	other		l	2282	bridging
english	kent01	0296	#	#	#ac	#ac				
english	kent01	0296	when	when	adp	adp				
english	kent01	0296	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0296	come	come.PST	v:pred	v		pred		
english	kent01	0296	here	here	other:g	other		g		
english	kent01	0296	first	first	other	other			2266	
english	kent01	0296	with	with	nc	nc				
english	kent01	0296	the	the	nc	nc				
english	kent01	0296	eh	eh	other	other				
english	kent01	0296	with	with	adp	adp				
english	kent01	0296	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0296	eh	eh	other	other				
english	kent01	0296	valuer	valuer	np.h:obl	np	h	obl	2280	new
english	kent01	0296	#	#	##	##				
english	kent01	0296	and	and	other	other				
english	kent01	0296	not	not	nc	nc				
english	kent01	0296	it	3SG.N	nc	nc				
english	kent01	0296	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0296	box	box	np:s	np		s	2279	
english	kent01	0296	struck	strike.PST	v:pred	v		pred		
english	kent01	0296	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0296	comical	comical	other	other				
english	kent01	0297	#	#	##	##				
english	kent01	0297	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0297	sit	sit.PST	v:pred	v		pred		
english	kent01	0297	there	there	other:l	other		l	2283	bridging
english	kent01	0297	at	at	adp	adp				
english	kent01	0297	the	the	ln_det	ln_det				
english	kent01	0297	table	table	np:l	np		l	2281	bridging
english	kent01	0298	#	#	##	##				
english	kent01	0298	I	1SG	pro.1:s_ds	pro	1	s_ds	2000	
english	kent01	0298	said	say.PST	v:pred	v		pred		
english	kent01	0298	#	#	##	##				
english	kent01	0298	Mr Haggary	Mr_Haggary	pn_np.h:voc	pn_np	h	voc	2259	
english	kent01	0298	what	what	intrg_other:pred_obl	intrg_other		pred_obl		
english	kent01	0298	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0298	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0298	little	little	ln_adj	ln_adj				
english	kent01	0298	box	box	np:s	np		s	2279	
english	kent01	0298	for	for	adp	adp				
english	kent01	0298	up	up	adp	adp				
english	kent01	0298	there	there	other:l	other		l	2282	
english	kent01	0299	#	#	##	##				
english	kent01	0299	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2259	
english	kent01	0299	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0299	#	#	##	##				
english	kent01	0299	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0299	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0299	Scotch	Scotch	other:pred	other		pred		
english	kent01	0299	#	#	##	##				
english	kent01	0299	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2259	
english	kent01	0299	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0299	#	#	##ds	##ds				
english	kent01	0299	that	DIST.SG	dem_pro:s	dem_pro		s	2279	
english	kent01	0299	Mr Crown	Mr_Crown	pn_np.h:voc	pn_np	h	voc	2000	
english	kent01	0299	is	be.PRS.3SG	cop	cop				
english	kent01	0299	#	#	#ds_cc:pred	#ds_cc		pred		
english	kent01	0299	where	where	intrg_other:l	intrg_other		l		
english	kent01	0299	I	1SG	pro.1:a	pro	1	a	2259	
english	kent01	0299	keep	keep.PRS	v:pred	v		pred		
english	kent01	0299	mi	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2259	
english	kent01	0299	guid	good	ln_adj	ln_adj				
english	kent01	0299	book	book	np:p	np		p	2284	new
english	kent01	0299	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2259	
english	kent01	0299	bible	bible	np:appos	np		appos	2284	
english	kent01	0300	#	#	##	##				
english	kent01	0300	and	and	other	other				
english	kent01	0300	so	so	other	other				
english	kent01	0300	he	3SG.M	pro.h:a	pro	h	a	2259	
english	kent01	0300	kept	keep.PST	v:pred	v		pred		
english	kent01	0300	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2259	
english	kent01	0300	bible	bible	np:p	np		p	2284	
english	kent01	0300	in	in	adp	adp				
english	kent01	0300	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0300	little	little	ln_adj	ln_adj				
english	kent01	0300	box	box	np:l	np		l	2279	
english	kent01	0301	#	#	##ds	##ds				
english	kent01	0301	I	1SG	pro.1:a	pro	1	a	2259	
english	kent01	0301	take	take.PRS	v:pred	v		pred		
english	kent01	0301	it	3SG.N	pro:p	pro		p	2279	
english	kent01	0301	down	down	rv	rv				
english	kent01	0301	every	every	ln_adj	ln_adj				
english	kent01	0301	night	night	np:other	np		other		
english	kent01	0301	#	#	##	##				
english	kent01	0301	he	3SG.M	pro.h:s_ds	pro	h	s_ds	2259	
english	kent01	0301	says	say.PRS.3SG	v:pred	v		pred		
english	kent01	0301	#	#	##ds	##ds				
english	kent01	0301	and	and	other	other				
english	kent01	0301	0	0_Haggary	0.1:a	0	1	a	2259	
english	kent01	0301	read	read.PRS	v:pred	v		pred		
english	kent01	0301	a	a	ln_deti	ln_deti				
english	kent01	0301	chapter	chapter	np:p	np		p	2285	bridging
english	kent01	0302	ha	ha	other	other				
english	kent01	0303	#	#	##	##				
english	kent01	0303	now	now	other	other				
english	kent01	0303	he	3SG.M	pro.h:s	pro	h	s	2259	
english	kent01	0303	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0303	the	the	ln_det	ln_det				
english	kent01	0303	sort	sort	np:pred	np		pred		
english	kent01	0303	of	of	rn	rn				
english	kent01	0303	man	man	rn_np.h	rn_np	h			
english	kent01	0303	that	that	nc	nc				
english	kent01	0303	would	would	nc	nc				
english	kent01	0303	rather	rather	nc	nc				
english	kent01	0303	#	#	##neg	##neg				
english	kent01	0303	he	3SG.M	pro.h:a	pro	h	a	2259	
english	kent01	0303	would-n't	would-NEG	lv_aux	lv_aux				
english	kent01	0303	miss	miss.INF	v:pred	v		pred		
english	kent01	0303	#	#	#cc:p	#cc		p		
english	kent01	0303	0	0_Haggary	f0.h:s	f0	h	s	2259	
english	kent01	0303	go-ing	go-PTCP.PRS	vother:pred	vother		pred		
english	kent01	0303	to	to	adp	adp				
english	kent01	0303	church	church	np:g	np		g	2286	bridging
english	kent01	0303	#	#	#ac	#ac				
english	kent01	0303	if	if	adp	adp				
english	kent01	0303	the	the	ln_det	ln_det				
english	kent01	0303	old	old	ln_adj	ln_adj				
english	kent01	0303	cow	cow	np:s	np		s	2287	new
english	kent01	0303	was	be.PST.3SG	lv_aux	lv_aux				
english	kent01	0303	calving	calve.PTCP.PRS	v:pred	v		pred		
english	kent01	0304	#	#	##neg	##neg				
english	kent01	0304	well	well	other	other				
english	kent01	0304	you	2SG	gen_pro.2:s	gen_pro	2	s		
english	kent01	0304	can't	can.NEG	lv_aux	lv_aux				
english	kent01	0304	farm	farm.INF	v:pred	v		pred		
english	kent01	0304	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0304	way-s	way-PL	np:other	np		other		
english	kent01	0305	#	#	##	##				
english	kent01	0305	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0305	see	see.PRS	v:pred	v		pred		
english	kent01	0305	#	#	#cc:p	#cc		p		
english	kent01	0305	the	the	ln_det	ln_det				
english	kent01	0305	cow	cow	np:s	np		s	2287	
english	kent01	0305	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0305	alright	alright	other:pred	other		pred		
english	kent01	0305	#	#	##	##				
english	kent01	0305	then	then	other	other				
english	kent01	0305	0	0_you	gen_0.2:s	gen_0	2	s		
english	kent01	0305	go	go.PRS	v:pred	v		pred		
english	kent01	0305	to	to	adp	adp				
english	kent01	0305	church	church	np:g	np		g	2286	
english	kent01	0305	afterwards	afterwards	other	other				
english	kent01	0306	#	#	##	##				
english	kent01	0306	#	#	#ac.neg	#ac.neg				
english	kent01	0306	and	and	other	other				
english	kent01	0306	if	if	adp	adp				
english	kent01	0306	she	3SG.F	pro:s	pro		s	2287	
english	kent01	0306	wadn't	be.3SG.NEG	cop	cop				
english	kent01	0306	alright	alright	other:pred	other		pred		
english	kent01	0306	%	%	%	%				
english	kent01	0306	you	2SG	gen_pro.2:s	gen_pro	2	s		
english	kent01	0306	='d	=would	=lv_aux	=lv_aux				
english	kent01	0306	go	go.INF	lv_v	lv_v				
english	kent01	0306	pray	pray.INF	v:pred	v		pred		
english	kent01	0306	for	for	adp	adp				
english	kent01	0306	your	2SG.POSS	ln_gen_pro.2:poss	ln_gen_pro	2	poss		
english	kent01	0306	sin-s	sin-PL	np:other	np		other		
english	kent01	0306	couldn't you	TAG	other	other				
english	kent01	0307	#	#	##	##				
english	kent01	0307	and	and	other	other				
english	kent01	0307	it	3SG.N	pro:s	pro		s		
english	kent01	0307	was	be.PST.3SG	cop	cop				
english	kent01	0307	just	just	ln	ln				
english	kent01	0307	the	the	ln_dem	ln_dem				
english	kent01	0307	same	same	np:pred	np		pred		
english	kent01	0307	the	the	ln_det	ln_det				
english	kent01	0307	other	other	ln_adj	ln_adj				
english	kent01	0307	farm	farm	np:other	np		other	2288	new
english	kent01	0307	#	#	#rc	#rc				
english	kent01	0307	0	0_farm	rel_0:p	rel_0		p	2288	
english	kent01	0307	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0307	took	take.PST	v:pred	v		pred		
english	kent01	0307	before	before	adp	adp				
english	kent01	0307	this	PROX.SG	dem_pro:other	dem_pro		other	2266	
english	kent01	0308	#	#	##	##				
english	kent01	0308	he	3SG.M	pro.h:s	pro	h	s	2289	bridging
english	kent01	0308	was	be.PST.3SG	cop	cop				
english	kent01	0308	a	a	ln_deti	ln_deti				
english	kent01	0308	chapel man	chapel_man	np.h:pred	np	h	pred		
english	kent01	0308	#	#	##	##				
english	kent01	0308	he	3SG.M	pro.h:s	pro	h	s	2289	
english	kent01	0308	was	be.PST.3SG	cop	cop				
english	kent01	0308	bankrupt	bankrupt	other:pred	other		pred		
english	kent01	0309	#	#	##	##				
english	kent01	0309	and	and	other	other				
english	kent01	0309	they	3PL	pro.h:a	pro	h	a	2290	bridging
english	kent01	0309	let	let.PST	v:pred	v		pred		
english	kent01	0309	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0309	#	#	#cc:obl	#cc		obl		
english	kent01	0309	0	0_I	f0.1:a	f0	1	a	2000	
english	kent01	0309	have	have.INF	vother:pred	vother		pred		
english	kent01	0309	that	DIST.SG	ln_dem	ln_dem				
english	kent01	0309	farm	farm	np:p	np		p	2288	
english	kent01	0309	three	three	ln_num	ln_num				
english	kent01	0309	year-s	year-PL	np:other	np		other		
english	kent01	0309	rent-free	rent_free	other	other				
english	kent01	0309	#	#	#ac	#ac				
english	kent01	0309	for	for	adp	adp				
english	kent01	0309	0	0_I	f0.1:a	f0	1	a	2000	
english	kent01	0309	to	to	lv	lv				
english	kent01	0309	put	put.INF	vother:pred	vother		pred		
english	kent01	0309	it	3SG.N	pro:p	pro		p	2288	
english	kent01	0309	in	in	adp	adp				
english	kent01	0309	order	order	np:other	np		other		
english	kent01	0310	#	#	##	##				
english	kent01	0310	#	#	#ac	#ac				
english	kent01	0310	as	as	other	other				
english	kent01	0310	soon	soon	other	other				
english	kent01	0310	as	as	adp	adp				
english	kent01	0310	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0310	='d	=have.PST	=lv_aux	=lv_aux				
english	kent01	0310	got	get.PTCP.PST	v:pred	v		pred		
english	kent01	0310	it	3SG.N	pro:p	pro		p	2288	
english	kent01	0310	in	in	adp	adp				
english	kent01	0310	tip-top	tip_top	ln_adj	ln_adj				
english	kent01	0310	condition	condition	np:other	np		other		
english	kent01	0310	%	%	%	%				
english	kent01	0310	they	3PL	pro.h:a	pro	h	a	2290	
english	kent01	0310	charged	charge.PST	v:pred	v		pred		
english	kent01	0310	me	1SG.OBL	pro.1:p	pro	1	p	2000	
english	kent01	0310	top	top	ln_adj	ln_adj				
english	kent01	0310	rent	rent	np:p2	np		p2		
english	kent01	0310	for	for	adp	adp				
english	kent01	0310	it	3SG.N	pro:obl	pro		obl	2288	
english	kent01	0311	#	#	##	##				
english	kent01	0311	that	DIST.SG	dem_pro:s	dem_pro		s	2291	bridging
english	kent01	0311	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0311	#	#	#cc:pred	#cc		pred		
english	kent01	0311	how	how	other	other				
english	kent01	0311	they	3PL	pro.h:a	pro	h	a	2290	
english	kent01	0311	did	do.PST	v:pred	v		pred		
english	kent01	0311	this	PROX.SG	dem_pro:p	dem_pro		p	2292	bridging
english	kent01	0312	#	#	##	##				
english	kent01	0312	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0312	offer-ed	offer-PST	v:pred	v		pred		
english	kent01	0312	them	3PL.OBL	pro.h:p	pro	h	p	2290	
english	kent01	0312	a	a	ln_deti	ln_deti				
english	kent01	0312	hundred eighty	hundred-eighty	ln_num	ln_num				
english	kent01	0312	pound	pound	np:p	np		p		
english	kent01	0312	a	a	adp	adp				
english	kent01	0312	year	year	np:other	np		other		
english	kent01	0312	for	for	adp	adp				
english	kent01	0312	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0312	farm	farm	np:obl	np		obl	2266	
english	kent01	0312	#	#	#ac	#ac				
english	kent01	0312	when	when	adp	adp				
english	kent01	0312	I	1SG	pro.1:s	pro	1	s	2000	
english	kent01	0312	come	come.PST	v:pred	v		pred		
english	kent01	0312	here	here	other:g	other		g	2266	
english	kent01	0312	#	#	##	##				
english	kent01	0312	and	and	other	other				
english	kent01	0312	now	now	other	other				
english	kent01	0312	we	1PL	pro.1:a	pro	1	a	2264	
english	kent01	0312	='re	=be.PRS	=lv_aux	=lv_aux				
english	kent01	0312	pay-ing	pay-PTCP.PRS	v:pred	v		pred		
english	kent01	0312	over	over	ln	ln				
english	kent01	0312	two thousand	two-thousand	num_np:p	num_np		p		
english	kent01	0312	a	a	adp	adp				
english	kent01	0312	year	year	np:other	np		other		
english	kent01	0313	huh	huh	other	other				
english	kent01	0314	#	#	##	##				
english	kent01	0314	that	DIST.SG	dem_pro:s	dem_pro		s		
english	kent01	0314	='s	=be.PRS.3SG	=cop	=cop				
english	kent01	0314	hardly	hardly	other	other				
english	kent01	0314	fair	fair	other:pred	other		pred		
english	kent01	0314	you	2SG	other	other				
english	kent01	0314	know	know.PRS	other	other				
english	kent01	0314	#	#	#ac	#ac				
english	kent01	0314	after	after	adp	adp				
english	kent01	0314	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0314	='d	=have.PST	=lv_aux	=lv_aux				
english	kent01	0314	done	do.PTCP.PST	v:pred	v		pred		
english	kent01	0314	all	all	ln	ln				
english	kent01	0314	that	DIST.SG	dem_pro:p	dem_pro		p		
english	kent01	0314	is it	TAG	other	other				
english	kent01	0315	#	#	##	##				
english	kent01	0315	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0315	told	tell.PST	v:pred	v		pred		
english	kent01	0315	='em	=3PL.OBL	=pro.h:p	=pro	h	p	2293	bridging
english	kent01	0315	so	so	other	other				
english	kent01	0316	#	#	##neg	##neg				
english	kent01	0316	they	3PL	pro.h:a	pro	h	a	2293	
english	kent01	0316	ain't	have.PRS.NEG	lv_aux	lv_aux				
english	kent01	0316	kept	keep.PTCP.PST	v:pred	v		pred		
english	kent01	0316	up	up	rv	rv				
english	kent01	0316	their	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss	2293	
english	kent01	0316	agreement-s	agreement-PL	np:p	np		p	2294	bridging
english	kent01	0316	their	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss	2293	
english	kent01	0316	verbal	verbal	ln_adj	ln_adj				
english	kent01	0316	agreement	agreement	np:appos	np		appos	2294	
english	kent01	0316	#	#	##	##				
english	kent01	0316	#	#	#ac	#ac				
english	kent01	0316	when	when	adp	adp				
english	kent01	0316	we	1PL	pro.1:s	pro	1	s	2295	bridging
english	kent01	0316	were	be.PST	cop	cop				
english	kent01	0316	boy-s	boy-PL	np.h:pred	np	h	pred		
english	kent01	0316	and	and	rn	rn				
english	kent01	0316	men	man.PL	rn_np.h	rn_np	h			
english	kent01	0316	%	%	%	%				
english	kent01	0316	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0316	word	word	np:s	np		s		
english	kent01	0316	was	be.PST.3SG	cop	cop				
english	kent01	0316	mi	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0316	bond	bond	np:pred	np		pred		
english	kent01	0317	#	#	##	##				
english	kent01	0317	and	and	other	other				
english	kent01	0317	0	0_such	0:s	0		s		
english	kent01	0317	always	always	other	other				
english	kent01	0317	has	have.PRS.3SG	lv_aux	lv_aux				
english	kent01	0317	been	be.PTCP.PST	cop	cop				
english	kent01	0317	0	0_so	0:pred	0		pred		
english	kent01	0318	#	#	##	##				
english	kent01	0318	but	but	nc	nc				
english	kent01	0318	it	3SG.N	pro:s	pro		s		
english	kent01	0318	was	be.PST.3SG	cop	cop				
english	kent01	0318	0	0_that	0:pred	0		pred		
english	kent01	0318	with	with	adp	adp				
english	kent01	0318	the	the	ln_det	ln_det				
english	kent01	0318	l--	NC	nc	nc				
english	kent01	0318	tenant-s	tenant-PL	np.h:obl	np	h	obl		
english	kent01	0318	before	before	adp	adp				
english	kent01	0318	the	the	ln_det	ln_det				
english	kent01	0318	agent-s	agent-PL	np.h:other	np	h	other	2296	bridging
english	kent01	0318	before	before	adp	adp				
english	kent01	0318	this	PROX.SG	ln_dem	ln_dem				
english	kent01	0318	lot	lot	np.h:other	np	h	other	2297	bridging
english	kent01	0318	Strutts and Parkers	Strutts_and_Parkers	pn_np.h:appos	pn_np	h	appos	2297	
english	kent01	0319	#	#	##neg	##neg				
english	kent01	0319	but	but	other	other				
english	kent01	0319	theirs	3PL.POSS	ln_pro.h:poss	ln_pro	h	poss	2297	
english	kent01	0319	0	0_word	0:s	0		s	2310	bridging
english	kent01	0319	is-n't	be.PRS.3SG-NEG	cop	cop				
english	kent01	0319	0	0_that	0:pred	0		pred		
english	kent01	0320	#	#	##neg	##neg				
english	kent01	0320	#	#	#ac.neg	#ac.neg				
english	kent01	0320	if	if	adp	adp				
english	kent01	0320	you	2SG	gen_pro.2:a	gen_pro	2	a		
english	kent01	0320	ain't	have.PRS.NEG	lv_aux	lv_aux				
english	kent01	0320	got	get.PTCP.PST	v:pred	v		pred		
english	kent01	0320	it	3SG.N	pro:p	pro		p		
english	kent01	0320	in	in	adp	adp				
english	kent01	0320	writing	writing	np:other	np		other		
english	kent01	0320	%	%	%	%				
english	kent01	0320	they	3PL	pro.h:a	pro	h	a	2297	
english	kent01	0320	don't	do.PRS.NEG	lv_aux	lv_aux				
english	kent01	0320	take	take.INF	v:pred	v		pred		
english	kent01	0320	no	no	other	other				
english	kent01	0320	notice	notice	other:lvc	other		lvc		
english	kent01	0321	[INT]	[INT]	[INT]	[INT]				
english	kent01	0321	did	do.PST	nc	nc				
english	kent01	0321	it	3SG.N	nc_pro	nc_pro				
english	kent01	0321	always	always	nc	nc				
english	kent01	0321	used	used	nc	nc				
english	kent01	0321	to	to	nc	nc				
english	kent01	0321	be	be.INF	nc	nc				
english	kent01	0321	verbal	verbal	nc	nc				
english	kent01	0321	then	then	nc	nc				
english	kent01	0321	all	all	nc	nc				
english	kent01	0321	the	the	nc	nc				
english	kent01	0321	agreement-s	agreement-PL	nc_np	nc_np				
english	kent01	0321	with	with	nc	nc				
english	kent01	0321	between	between	nc	nc				
english	kent01	0321	the	the	nc	nc				
english	kent01	0321	tenant	tenant	nc_np.h	nc_np	h			
english	kent01	0322	#	#	##neg	##neg				
english	kent01	0322	yes	yes	nc	nc				
english	kent01	0322	we	1PL	pro.1:a	pro	1	a	2295	
english	kent01	0322	never	never	other	other				
english	kent01	0322	used	used	lv_aux	lv_aux				
english	kent01	0322	to	to	lv	lv				
english	kent01	0322	dream	dream.INF	v:pred	v		pred		
english	kent01	0322	about	about	rv	rv				
english	kent01	0322	#	#	#cc:p	#cc		p		
english	kent01	0322	0	0_we	f0.1:a	f0	1	a	2295	
english	kent01	0322	sign-ing	sign-PTCP.PRS	vother:pred	vother		pred		
english	kent01	0322	anything	anything	indef_other:p	indef_other		p		
english	kent01	0322	#	#	#cc:other	#cc		other		
english	kent01	0322	or	or	other	other				
english	kent01	0322	0	0_we	f0.1:a	f0	1	a	2295	
english	kent01	0322	writing	write.PTCP.PRS	vother:pred	vother		pred		
english	kent01	0322	anything	anything	indef_other:p	indef_other		p		
english	kent01	0322	or	or	nc	nc				
english	kent01	0322	#	#	##neg	##neg				
english	kent01	0322	five	five	nc	nc				
english	kent01	0322	five	five	num_np.h:s	num_np	h	s	2298	bridging
english	kent01	0322	out	out	rn	rn				
english	kent01	0322	of	of	rn	rn				
english	kent01	0322	six	six	rn_num_np.h	rn_num_np	h			
english	kent01	0322	of	of	rn	rn				
english	kent01	0322	='em	=3PL.OBL	=rn_pro.h	=rn_pro	h		2299	bridging
english	kent01	0322	could-n't	could-NEG	lv_aux	lv_aux				
english	kent01	0322	write	write.INF	v:pred	v		pred		
english	kent01	0323	#	#	##neg	##neg				
english	kent01	0323	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0323	father	father	np.h:dt_a	np	h	dt_a	2003	
english	kent01	0323	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0323	could-n't	could-NEG	lv_aux	lv_aux				
english	kent01	0323	read	read.INF	v:pred	v		pred		
english	kent01	0323	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2003	
english	kent01	0323	own	own	ln_adj	ln_adj				
english	kent01	0323	name	name	np:p	np		p	2300	bridging
english	kent01	0323	#	#	#neg	#neg				
english	kent01	0323	0	0_father	0.h:a	0	h	a	2003	
english	kent01	0323	could-n't	could-NEG	lv_aux	lv_aux				
english	kent01	0323	write	write.INF	v:pred	v		pred		
english	kent01	0323	his	3SG.M.POSS	ln_pro.h:poss	ln_pro	h	poss	2003	
english	kent01	0323	own	own	ln_adj	ln_adj				
english	kent01	0323	name	name	np:p	np		p		
english	kent01	0324	#	#	##	##				
english	kent01	0324	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0324	can	can	lv_aux	lv_aux				
english	kent01	0324	remember	remember.INF	v:pred	v		pred		
english	kent01	0324	#	#	#nc	#nc				
english	kent01	0324	when	when	nc	nc				
english	kent01	0324	I	1SG	nc_pro.1	nc_pro	1		2000	
english	kent01	0324	was	be.PST.1SG	nc	nc				
english	kent01	0324	#	#	##	##				
english	kent01	0324	the	the	ln_det	ln_det				
english	kent01	0324	Boer War	Boer_War	pn_np:s	pn_np		s	2301	new
english	kent01	0324	was	be.PST.3SG	cop	cop				
english	kent01	0324	on	on	other:pred	other		pred		
english	kent01	0324	#	#	##	##				
english	kent01	0324	that	DIST.SG	dem_pro:s	dem_pro		s		
english	kent01	0324	='s	=be.PRS.3SG	=lv_aux	=lv_aux				
english	kent01	0324	go-ing	go-PTCP.PRS	v:pred	v		pred		
english	kent01	0324	back	back	rv	rv				
english	kent01	0324	some	some	other	other				
english	kent01	0324	innit	TAG	other	other				
english	kent01	0325	#	#	##	##				
english	kent01	0325	my	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0325	father	father	np.h:s	np	h	s	2003	
english	kent01	0325	used	used	lv_aux	lv_aux				
english	kent01	0325	to	to	lv	lv				
english	kent01	0325	come	come.INF	v:pred	v		pred		
english	kent01	0325	home	home	other:g	other		g		
english	kent01	0325	from	from	adp	adp				
english	kent01	0325	at	at	adp	adp				
english	kent01	0325	Canterbury Market	Canterbury_Market	pn_np:obl	pn_np		obl	2302	bridging
english	kent01	0325	or	or	other	other				
english	kent01	0325	from	from	adp	adp				
english	kent01	0325	town	town	np:obl	np		obl		
english	kent01	0325	with	with	adp	adp				
english	kent01	0325	a	a	ln_deti	ln_deti				
english	kent01	0325	little	little	ln_adj	ln_adj				
english	kent01	0325	old	old	ln_adj	ln_adj				
english	kent01	0325	paper	paper	np:obl	np		obl	2303	new
english	kent01	0325	#	#	#rc	#rc				
english	kent01	0325	0	0_paper	rel_0:obl	rel_0		obl	2303	
english	kent01	0325	he	3SG.M	pro.h:a	pro	h	a	2003	
english	kent01	0325	give	give.PST	v:pred	v		pred		
english	kent01	0325	a	a	ln_deti	ln_deti				
english	kent01	0325	penny	penny	np:p	np		p		
english	kent01	0325	for	for	adp	adp				
english	kent01	0325	#	#	#ac	#ac				
english	kent01	0325	so	so	other	other				
english	kent01	0325	that	that	adp	adp				
english	kent01	0325	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0325	could	could	lv_aux	lv_aux				
english	kent01	0325	read	read.INF	v:pred	v		pred		
english	kent01	0325	out	out	rv	rv				
english	kent01	0325	to	to	adp	adp				
english	kent01	0325	him	3SG.M.OBL	pro.h:g	pro	h	g	2003	
english	kent01	0325	#	#	#rc:p	#rc		p		
english	kent01	0325	what	what	intrg_other:s	intrg_other		s		
english	kent01	0325	happen-ed	happen-PST	v:pred	v		pred		
english	kent01	0325	in	in	adp	adp				
english	kent01	0325	the	the	ln_det	ln_det				
english	kent01	0325	Boer War	Boer_War	pn_np:other	pn_np		other	2301	
english	kent01	0326	#	#	##	##				
english	kent01	0326	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0326	can	can	lv_aux	lv_aux				
english	kent01	0326	remember	remember.INF	v:pred	v		pred		
english	kent01	0326	that	DIST.SG	dem_pro:p	dem_pro		p		
english	kent01	0326	as	as	other	other				
english	kent01	0326	well	well	other	other				
english	kent01	0327	[INT]	[INT]	[INT]	[INT]				
english	kent01	0327	#	#	#nc	#nc				
english	kent01	0327	did	do.PST	nc	nc				
english	kent01	0327	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0327	ever	ever	nc	nc				
english	kent01	0327	keep	keep.INF	nc	nc				
english	kent01	0327	any	any	nc	nc				
english	kent01	0327	record-s	record-PL	nc_np	nc_np			2304	new
english	kent01	0327	of	of	nc	nc				
english	kent01	0327	his	3SG.M.POSS	nc_pro	nc_pro			2003	
english	kent01	0327	dealing-s	dealing-PL	nc_np	nc_np			2305	bridging
english	kent01	0327	then	then	nc	nc				
english	kent01	0327	your	2SG.POSS	nc_pro.2	nc_pro	2		2000	
english	kent01	0327	father	father	nc_np.h	nc_np	h		2003	
english	kent01	0328	#	#	#nc	#nc				
english	kent01	0328	my	1SG.POSS	nc_pro.1	nc_pro	1		2000	
english	kent01	0328	father	father	nc_np.h	nc_np	h		2003	
english	kent01	0328	never	never	nc	nc				
english	kent01	0328	no	no	nc	nc				
english	kent01	0328	how	how	nc	nc				
english	kent01	0328	could	could	nc	nc				
english	kent01	0328	he	3SG.M	nc_pro.h	nc_pro	h		2003	
english	kent01	0328	only	only	nc	nc				
english	kent01	0328	here	here	nc_other	nc_other			2306	bridging
english	kent01	0329	[INT]	[INT]	[INT]	[INT]				
english	kent01	0329	#	#	#nc	#nc				
english	kent01	0329	in	in	nc	nc				
english	kent01	0329	his	3SG.M.POSS	nc_pro.h	nc_pro	h		2003	
english	kent01	0329	head	head	nc_np	nc_np			2306	
english	kent01	0330	yeah	yeah	nc	nc				
english	kent01	0331	[INT]	[INT]	[INT]	[INT]				
english	kent01	0331	hmm	hmm	nc	nc				
english	kent01	0332	#	#	##	##				
english	kent01	0332	that's	DIST.SG	dem_pro:s	dem_pro		s	2307	bridging
english	kent01	0332	='s	=be.PST.3SG	=cop	=cop				
english	kent01	0332	#	#	#cc:pred	#cc		pred		
english	kent01	0332	where	where	other:l	other		l		
english	kent01	0332	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0332	kept	keep.PST	v:pred	v		pred		
english	kent01	0332	mine	1SG.POSS	ln_pro.1:poss	ln_pro	1	poss	2000	
english	kent01	0332	0	0	0:p	0		p	2308	bridging
english	kent01	0332	#	#	#ac	#ac				
english	kent01	0332	until	until	adp	adp				
english	kent01	0332	it	3SG.N	pro:s	pro		s	2308	
english	kent01	0332	got	get.PST	v:pred	v		pred		
english	kent01	0332	so	so	other	other				
english	kent01	0332	big	big	other	other				
english	kent01	0332	#	#	##	##				
english	kent01	0332	then	then	other	other				
english	kent01	0332	I	1SG	pro.1:a	pro	1	a	2000	
english	kent01	0332	used	used	lv_aux	lv_aux				
english	kent01	0332	to	to	lv	lv				
english	kent01	0332	have	have.INF	lv_aux	lv_aux				
english	kent01	0332	a	a	ln_deti	ln_deti				
english	kent01	0332	Collin's notebook	Collin's_notebook	np:p	np		p	2309	new
english	kent01	0333	#	#	#nc	#nc				
english	kent01	0333	ooh	ooh	nc	nc				
english	kent01	0333	that	DIST.SG	nc_dem_pro	nc_dem_pro			2309	
english	kent01	0333	='s	=be.PRS.3SG	nc	nc				
english	kent01	0333	on	on	nc	nc				
english	kent01	0333	here	here	nc	nc				
english	kent01	0334	oh	oh	nc	nc				
